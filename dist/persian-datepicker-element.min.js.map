{"version":3,"file":"persian-datepicker-element.min.js","sources":["webpack://PersianDatePickerElement/./src/persian-date.ts","webpack://PersianDatePickerElement/./src/utils/event-utils.ts","webpack://PersianDatePickerElement/./src/persian-datepicker-element.ts","webpack://PersianDatePickerElement/./src/index.ts"],"sourcesContent":["/**\r\n * Jalali (Shamsi) Calendar utilities\r\n */\r\nexport const PersianDate = {\r\n  g_days_in_month: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\r\n  j_days_in_month: [31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 29],\r\n  \r\n  jalaliToGregorian: function(j_y: number, j_m: number, j_d: number): [number, number, number] {\r\n    j_y = parseInt(j_y.toString());\r\n    j_m = parseInt(j_m.toString());\r\n    j_d = parseInt(j_d.toString());\r\n    \r\n    const jy = j_y - 979;\r\n    const jm = j_m - 1;\r\n    const jd = j_d - 1;\r\n    \r\n    let j_day_no = 365 * jy + Math.floor(jy / 33) * 8 + Math.floor((jy % 33 + 3) / 4);\r\n    for (let i = 0; i < jm; ++i) j_day_no += this.j_days_in_month[i];\r\n    \r\n    j_day_no += jd;\r\n    \r\n    let g_day_no = j_day_no + 79;\r\n    \r\n    let gy = 1600 + 400 * Math.floor(g_day_no / 146097);\r\n    g_day_no = g_day_no % 146097;\r\n    \r\n    let leap = true;\r\n    if (g_day_no >= 36525) {\r\n      g_day_no--;\r\n      gy += 100 * Math.floor(g_day_no / 36524);\r\n      g_day_no = g_day_no % 36524;\r\n      \r\n      if (g_day_no >= 365) g_day_no++;\r\n      else leap = false;\r\n    }\r\n    \r\n    gy += 4 * Math.floor(g_day_no / 1461);\r\n    g_day_no %= 1461;\r\n    \r\n    if (g_day_no >= 366) {\r\n      leap = false;\r\n      g_day_no--;\r\n      gy += Math.floor(g_day_no / 365);\r\n      g_day_no = g_day_no % 365;\r\n    }\r\n    \r\n    let i = 0;\r\n    for (; g_day_no >= this.g_days_in_month[i] + (i === 1 && leap ? 1 : 0); i++) {\r\n      g_day_no -= this.g_days_in_month[i] + (i === 1 && leap ? 1 : 0);\r\n    }\r\n      \r\n    const gm = i + 1;\r\n    const gd = g_day_no + 1;\r\n    \r\n    return [gy, gm, gd];\r\n  },\r\n  \r\n  gregorianToJalali: function(g_y: number, g_m: number, g_d: number): [number, number, number] {\r\n    g_y = parseInt(g_y.toString());\r\n    g_m = parseInt(g_m.toString());\r\n    g_d = parseInt(g_d.toString());\r\n    \r\n    const gy = g_y - 1600;\r\n    const gm = g_m - 1;\r\n    const gd = g_d - 1;\r\n    \r\n    let g_day_no = 365 * gy + Math.floor((gy + 3) / 4) - Math.floor((gy + 99) / 100) + Math.floor((gy + 399) / 400);\r\n    \r\n    for (let i = 0; i < gm; ++i)\r\n      g_day_no += this.g_days_in_month[i];\r\n      \r\n    if (gm > 1 && ((gy % 4 === 0 && gy % 100 !== 0) || (gy % 400 === 0)))\r\n      g_day_no++;\r\n      \r\n    g_day_no += gd;\r\n    \r\n    let j_day_no = g_day_no - 79;\r\n    const j_np = Math.floor(j_day_no / 12053);\r\n    j_day_no = j_day_no % 12053;\r\n    \r\n    let jy = 979 + 33 * j_np + 4 * Math.floor(j_day_no / 1461);\r\n    \r\n    j_day_no %= 1461;\r\n    \r\n    if (j_day_no >= 366) {\r\n      jy += Math.floor((j_day_no - 1) / 365);\r\n      j_day_no = (j_day_no - 1) % 365;\r\n    }\r\n    \r\n    let i = 0;\r\n    for (; i < 11 && j_day_no >= this.j_days_in_month[i]; ++i) {\r\n      j_day_no -= this.j_days_in_month[i];\r\n    }\r\n    \r\n    const jm = i + 1;\r\n    const jd = j_day_no + 1;\r\n    \r\n    return [jy, jm, jd];\r\n  },\r\n  \r\n  isLeapJalaliYear: function(year: number): boolean {\r\n    const breaks = [1, 5, 9, 13, 17, 22, 26, 30];\r\n    return breaks.includes(year % 33);\r\n  },\r\n  \r\n  getDaysInMonth: function(year: number, month: number): number {\r\n    if (month < 1 || month > 12) return 0;\r\n    if (month <= 6) return 31;\r\n    if (month <= 11) return 30;\r\n    // Month 12 (Esfand)\r\n    return this.isLeapJalaliYear(year) ? 30 : 29;\r\n  },\r\n  \r\n  getMonthName: function(month: number): string {\r\n    const monthNames = [\r\n      \"فروردین\", \"اردیبهشت\", \"خرداد\", \"تیر\", \"مرداد\", \"شهریور\",\r\n      \"مهر\", \"آبان\", \"آذر\", \"دی\", \"بهمن\", \"اسفند\"\r\n    ];\r\n    return monthNames[month - 1];\r\n  },\r\n  \r\n  getDayOfWeek: function(jYear: number, jMonth: number, jDay: number): number {\r\n    const gdate = this.jalaliToGregorian(jYear, jMonth, jDay);\r\n    const date = new Date(gdate[0], gdate[1]-1, gdate[2]);\r\n    return date.getDay();\r\n  },\r\n  \r\n  /**\r\n   * Returns the number of days in a Jalali year\r\n   */\r\n  getDaysInYear: function(year: number): number {\r\n    return this.isLeapJalaliYear(year) ? 366 : 365;\r\n  },\r\n  \r\n  /**\r\n   * Validates a Jalali date\r\n   */\r\n  isValidDate: function(year: number, month: number, day: number): boolean {\r\n    if (year < 0 || month < 1 || month > 12 || day < 1) return false;\r\n    return day <= this.getDaysInMonth(year, month);\r\n  }\r\n}; ","import { PersianEvent } from '../types';\n// Import the original JSON file from the Persian Calendar repo\nimport persianCalendarData from '../data/persian-calendar-repo/PersianCalendar/data/events.json';\n\n// Fallback events in case JSON loading fails\nconst fallbackEvents: PersianEvent[] = [\n  { title: 'عید نوروز', month: 1, day: 1, type: 'Iran', holiday: true },\n  { title: 'روز طبیعت', month: 1, day: 13, type: 'Iran', holiday: true },\n  { title: 'عید فطر', month: 4, day: 5, type: 'Religious', holiday: true },\n  { title: 'عید قربان', month: 6, day: 10, type: 'Religious', holiday: true },\n  { title: 'تاسوعا', month: 7, day: 9, type: 'Religious', holiday: true },\n  { title: 'عاشورا', month: 7, day: 10, type: 'Religious', holiday: true },\n];\n\n/**\n * Maps events from the Persian Calendar repo format to our PersianEvent format\n */\nfunction mapPersianCalendarEvents(): PersianEvent[] {\n  try {\n    let allEvents: PersianEvent[] = [];\n    \n    // Process Persian Calendar events\n    if (persianCalendarData && Array.isArray(persianCalendarData[\"Persian Calendar\"])) {\n      const persianEvents = persianCalendarData[\"Persian Calendar\"].map((event: any) => ({\n        title: event.title,\n        month: event.month,\n        day: event.day,\n        type: event.type,\n        holiday: event.holiday\n      }));\n      \n      allEvents = [...persianEvents];\n    }\n    \n    // Process Hijri Calendar events - Note: these are configured for the current year\n    // In a real app, these should be calculated each year based on Hijri-to-Persian conversion\n    if (persianCalendarData && Array.isArray(persianCalendarData[\"Hijri Calendar\"])) {\n      const hijriEvents = persianCalendarData[\"Hijri Calendar\"].map((event: any) => ({\n        title: event.title,\n        month: event.month,\n        day: event.day,\n        type: event.type,\n        holiday: event.holiday\n      }));\n      \n      allEvents = [...allEvents, ...hijriEvents];\n    }\n    \n    if (allEvents.length === 0) {\n      console.warn('Persian Calendar data not found in expected format, using fallback events');\n      return fallbackEvents;\n    }\n    \n    return allEvents;\n  } catch (error) {\n    console.error('Error mapping Persian Calendar events:', error);\n    return fallbackEvents;\n  }\n}\n\n// Cache the mapped events to avoid reprocessing on every call\nconst mappedEvents = mapPersianCalendarEvents();\n\n/**\n * Event utilities for working with Persian calendar events\n */\nexport const EventUtils = {\n  /**\n   * Returns all Persian calendar events mapped from the original JSON data\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Religious'])\n   * @param includeAllTypes If true, includes all event types regardless of filtering\n   */\n  getAllEvents(eventTypes?: string[], includeAllTypes: boolean = false): PersianEvent[] {\n    let filteredEvents = [...mappedEvents];\n    \n    // If specific event types are provided and we're not including all types, filter by those types\n    if (eventTypes && eventTypes.length > 0 && !includeAllTypes) {\n      filteredEvents = filteredEvents.filter(event => eventTypes.includes(event.type));\n    }\n    \n    return filteredEvents;\n  },\n\n  /**\n   * Returns all events for a given month and day\n   * @param month The month number (1-12)\n   * @param day The day number (1-31)\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Religious'])\n   * @param includeAllTypes If true, includes all event types regardless of filtering\n   */\n  getEvents(month: number, day: number, eventTypes?: string[], includeAllTypes: boolean = false): PersianEvent[] {\n    const events = this.getAllEvents(eventTypes, includeAllTypes);\n    return events.filter(event => \n      event.month === month && \n      event.day === day\n    );\n  },\n\n  /**\n   * Checks if the specified date is a holiday\n   * @param month The month number (1-12)\n   * @param day The day number (1-31)\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Religious'])\n   * @param includeAllTypes If true, includes all event types regardless of filtering\n   */\n  isHoliday(month: number, day: number, eventTypes?: string[], includeAllTypes: boolean = false): boolean {\n    const events = this.getEvents(month, day, eventTypes, includeAllTypes);\n    return events.some(event => event.holiday === true);\n  },\n\n  /**\n   * Gets holiday event titles for a specific date\n   * @param month The month number (1-12)\n   * @param day The day number (1-31)\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Religious'])\n   * @param includeAllTypes If true, includes all event types regardless of filtering\n   */\n  getHolidayTitles(month: number, day: number, eventTypes?: string[], includeAllTypes: boolean = false): string[] {\n    const events = this.getEvents(month, day, eventTypes, includeAllTypes);\n    return events\n      .filter(event => event.holiday === true)\n      .map(event => event.title);\n  },\n\n  /**\n   * Gets all event titles for a specific date\n   * @param month The month number (1-12)\n   * @param day The day number (1-31)\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Religious'])\n   * @param includeAllTypes If true, includes all event types regardless of filtering\n   */\n  getAllEventTitles(month: number, day: number, eventTypes?: string[], includeAllTypes: boolean = false): string[] {\n    const events = this.getEvents(month, day, eventTypes, includeAllTypes);\n    return events.map(event => event.title);\n  },\n  \n  /**\n   * Gets events of a specific type\n   * @param type The event type (e.g., 'Iran', 'Religious')\n   * @param includeAllTypes If true, includes all event types\n   * @param holidaysOnly If true, only returns holiday events\n   */\n  getEventsByType(type: string, includeAllTypes: boolean = false, holidaysOnly: boolean = false): PersianEvent[] {\n    const events = includeAllTypes \n      ? mappedEvents \n      : mappedEvents.filter(event => event.type === type);\n    \n    return holidaysOnly \n      ? events.filter(event => event.holiday === true) \n      : events;\n  },\n  \n  /**\n   * Get all holidays\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Religious'])\n   * @param includeAllTypes If true, includes all event types regardless of filtering\n   */\n  getAllHolidays(eventTypes?: string[], includeAllTypes: boolean = false): PersianEvent[] {\n    const events = this.getAllEvents(eventTypes, includeAllTypes);\n    return events.filter(event => event.holiday === true);\n  },\n\n  /**\n   * Get available event types\n   */\n  getEventTypes(): string[] {\n    const types = new Set<string>();\n    mappedEvents.forEach(event => types.add(event.type));\n    return Array.from(types);\n  },\n\n  /**\n   * Get the source data metadata\n   */\n  getSourceMetadata(): { [key: string]: string } {\n    return persianCalendarData.Source || {};\n  }\n};\n\nexport default EventUtils; ","import { PersianDate } from './persian-date';\r\nimport { EventUtils } from './utils/event-utils';\r\nimport { \r\n  PersianDatePickerElementOptions, \r\n  PersianDateChangeEvent,\r\n  DateTuple,\r\n  CSSVariableMap\r\n} from './types';\r\n\r\n// Import the CSS as a string\r\nconst styles = `:host {\r\n  /* Color scheme */\r\n  --jdp-primary: #0891b2;\r\n  --jdp-primary-hover: #0e7490;\r\n  --jdp-primary-foreground: #ffffff;\r\n  \r\n  /* Neutral colors */\r\n  --jdp-background: #ffffff;\r\n  --jdp-foreground: #1e293b;\r\n  --jdp-muted: #f1f5f9;\r\n  --jdp-muted-foreground: #64748b;\r\n  --jdp-border: #e2e8f0;\r\n  --jdp-ring: #0284c7;\r\n  \r\n  /* Holiday colors */\r\n  --jdp-holiday-color: #ef4444;\r\n  --jdp-holiday-bg: #fee2e2;\r\n  --jdp-holiday-hover-bg: #fecaca;\r\n  \r\n  /* Typography */\r\n  --jdp-font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\r\n  --jdp-font-size: 14px;\r\n  --jdp-line-height: 1.5;\r\n  --jdp-font-weight: 400;\r\n  --jdp-font-weight-medium: 500;\r\n  \r\n  /* Day name typography */\r\n  --jdp-day-name-font-size: 12px;\r\n  --jdp-day-name-font-weight: 400;\r\n  \r\n  /* Day cell typography */\r\n  --jdp-day-font-size: 13px;\r\n  --jdp-day-font-weight: 400;\r\n  \r\n  /* Month year typography */\r\n  --jdp-month-year-font-size: 14px;\r\n  --jdp-month-year-font-weight: 500;\r\n  \r\n  /* Spacing */\r\n  --jdp-spacing-xs: 4px;\r\n  --jdp-spacing-sm: 8px;\r\n  --jdp-spacing-md: 16px;\r\n  --jdp-spacing-lg: 24px;\r\n  \r\n  /* Input field */\r\n  --jdp-input-padding-x: 14px;\r\n  --jdp-input-padding-y: 10px;\r\n  --jdp-input-border-width: 1px;\r\n  --jdp-input-border-color: var(--jdp-border);\r\n  --jdp-input-border-radius: var(--jdp-border-radius);\r\n  --jdp-input-focus-ring-width: 2px;\r\n  --jdp-input-focus-ring-color: rgba(2, 132, 199, 0.25);\r\n  \r\n  /* Calendar popup */\r\n  --jdp-calendar-width: 280px;\r\n  --jdp-calendar-padding: var(--jdp-spacing-md);\r\n  --jdp-calendar-border-width: 1px;\r\n  --jdp-calendar-border-color: var(--jdp-border);\r\n  --jdp-calendar-border-radius: var(--jdp-border-radius);\r\n  --jdp-calendar-shadow: 0px 10px 38px -10px rgba(22, 23, 24, 0.35), 0px 10px 20px -15px rgba(22, 23, 24, 0.2);\r\n  --jdp-calendar-z-index: 10;\r\n  \r\n  /* Navigation buttons */\r\n  --jdp-nav-button-size: 30px;\r\n  --jdp-nav-button-bg: var(--jdp-muted);\r\n  --jdp-nav-button-bg-hover: var(--jdp-border);\r\n  --jdp-nav-button-border-radius: var(--jdp-border-radius);\r\n  --jdp-nav-arrow-size: 8px;\r\n  --jdp-nav-arrow-thickness: 2px;\r\n  --jdp-nav-arrow-color: var(--jdp-foreground);\r\n  \r\n  /* Day grid */\r\n  --jdp-day-cell-size: 32px;\r\n  --jdp-day-cell-margin: 1px;\r\n  --jdp-day-cell-border-radius: var(--jdp-border-radius);\r\n  \r\n  /* States */\r\n  --jdp-day-hover-bg: var(--jdp-muted);\r\n  --jdp-day-selected-bg: var(--jdp-primary);\r\n  --jdp-day-selected-color: var(--jdp-primary-foreground);\r\n  --jdp-day-today-border-color: var(--jdp-primary);\r\n  --jdp-day-today-border-width: 1px;\r\n  --jdp-day-disabled-opacity: 0.4;\r\n  \r\n  /* Animations */\r\n  --jdp-transition-duration: 0.2s;\r\n  --jdp-fade-from-y: -4px;\r\n  --jdp-fade-from-y-reverse: 4px;\r\n  --jdp-month-transition-duration: 0.3s;\r\n  \r\n  /* Layout */\r\n  --jdp-border-radius: 0.5rem;\r\n  --jdp-direction: rtl;\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  direction: var(--jdp-direction);\r\n}\r\n\r\n.picker-container {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 100%;\r\n  font-family: var(--jdp-font-family);\r\n  font-size: var(--jdp-font-size);\r\n  line-height: var(--jdp-line-height);\r\n  font-weight: var(--jdp-font-weight);\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: var(--jdp-input-padding-y) var(--jdp-input-padding-x);\r\n  border-radius: var(--jdp-input-border-radius);\r\n  border: var(--jdp-input-border-width) solid var(--jdp-input-border-color);\r\n  font-size: var(--jdp-font-size);\r\n  line-height: var(--jdp-line-height);\r\n  font-family: inherit;\r\n  background-color: var(--jdp-background);\r\n  color: var(--jdp-foreground);\r\n  cursor: pointer;\r\n  outline: none;\r\n  transition: all var(--jdp-transition-duration) ease;\r\n  text-align: right;\r\n}\r\n\r\ninput:focus {\r\n  border-color: var(--jdp-ring);\r\n  box-shadow: 0 0 0 var(--jdp-input-focus-ring-width) var(--jdp-input-focus-ring-color);\r\n}\r\n\r\n.calendar {\r\n  display: none;\r\n  position: absolute;\r\n  right: 0;\r\n  width: var(--jdp-calendar-width);\r\n  background: var(--jdp-background);\r\n  border: var(--jdp-calendar-border-width) solid var(--jdp-calendar-border-color);\r\n  border-radius: var(--jdp-calendar-border-radius);\r\n  box-shadow: var(--jdp-calendar-shadow);\r\n  padding: var(--jdp-calendar-padding);\r\n  text-align: center;\r\n  z-index: var(--jdp-calendar-z-index);\r\n  touch-action: manipulation; /* Allow pan-y but prevent browser handling of horizontal swipes */\r\n  -webkit-overflow-scrolling: none; /* Prevent iOS scrolling */\r\n  -webkit-user-select: none; /* Prevent text selection during swipe */\r\n  user-select: none;\r\n  transform: translateZ(0); /* Hardware acceleration */\r\n  will-change: transform; /* Hint to browser */\r\n  backface-visibility: hidden; /* Prevent flickering */\r\n  contain: layout style; /* Improve performance by isolating the container */\r\n}\r\n\r\n.calendar.position-bottom {\r\n  top: calc(100% + 5px);\r\n  animation: fadeInFromTop var(--jdp-transition-duration) ease;\r\n}\r\n\r\n.calendar.position-top {\r\n  bottom: calc(100% + 5px);\r\n  animation: fadeInFromBottom var(--jdp-transition-duration) ease;\r\n}\r\n\r\n.calendar.visible {\r\n  display: block;\r\n}\r\n\r\n@keyframes fadeInFromTop {\r\n  from { opacity: 0; transform: translateY(var(--jdp-fade-from-y)); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n@keyframes fadeInFromBottom {\r\n  from { opacity: 0; transform: translateY(var(--jdp-fade-from-y-reverse)); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: var(--jdp-spacing-md);\r\n}\r\n\r\n.month-year {\r\n  font-weight: var(--jdp-month-year-font-weight);\r\n  font-size: var(--jdp-month-year-font-size);\r\n  color: var(--jdp-foreground);\r\n  transition: opacity var(--jdp-transition-duration) ease;\r\n}\r\n\r\n.month-year.fade {\r\n  opacity: 0;\r\n}\r\n\r\n.days-wrapper {\r\n  position: relative;\r\n  touch-action: pan-y; /* Allow vertical scrolling but handle horizontal ourselves */\r\n  overflow: visible; /* Allow event tooltips to be visible outside the container */\r\n  z-index: 1; /* Ensure tooltips are visible above other elements */\r\n  contain: layout; /* Improve performance */\r\n}\r\n\r\n.days {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  transition: transform var(--jdp-month-transition-duration) ease, opacity var(--jdp-month-transition-duration) ease;\r\n  will-change: transform, opacity; /* Hint to browser */\r\n  transform: translateZ(0); /* Hardware acceleration */\r\n  backface-visibility: hidden; /* Prevent flickering */\r\n  position: relative; /* Position for correct animation */\r\n  contain: layout; /* Improve performance */\r\n}\r\n\r\n.days.slide-left, .days.slide-right {\r\n  /* Keep animation isolated within container without cutting off tooltips */\r\n  isolation: isolate;\r\n}\r\n\r\n.days.slide-left {\r\n  animation: slideInLeft var(--jdp-month-transition-duration) ease;\r\n}\r\n\r\n.days.slide-right {\r\n  animation: slideInRight var(--jdp-month-transition-duration) ease;\r\n}\r\n\r\n@keyframes slideInLeft {\r\n  from { \r\n    opacity: 0; \r\n    transform: translateX(-10%) translateZ(0);\r\n    pointer-events: none; /* Don't capture events during animation */ \r\n  }\r\n  to { \r\n    opacity: 1; \r\n    transform: translateX(0) translateZ(0);\r\n    pointer-events: auto; /* Restore events after animation */  \r\n  }\r\n}\r\n\r\n@keyframes slideInRight {\r\n  from { \r\n    opacity: 0; \r\n    transform: translateX(10%) translateZ(0); \r\n    pointer-events: none; /* Don't capture events during animation */\r\n  }\r\n  to { \r\n    opacity: 1; \r\n    transform: translateX(0) translateZ(0);\r\n    pointer-events: auto; /* Restore events after animation */ \r\n  }\r\n}\r\n\r\n/* Ensure tooltips stay visible even during animations */\r\n.day {\r\n  position: relative; /* Required for tooltip positioning */\r\n  z-index: 1; /* Base z-index */\r\n  touch-action: manipulation; /* Improve touch behavior */\r\n}\r\n\r\n.day:hover {\r\n  z-index: 2; /* Raise z-index on hover to keep tooltip on top */\r\n}\r\n\r\n.nav-button {\r\n  background: var(--jdp-nav-button-bg);\r\n  border: none;\r\n  border-radius: var(--jdp-nav-button-border-radius);\r\n  width: var(--jdp-nav-button-size);\r\n  height: var(--jdp-nav-button-size);\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all var(--jdp-transition-duration) ease;\r\n  position: relative;\r\n  z-index: 2;\r\n  touch-action: manipulation; /* Improve touch behavior */\r\n  will-change: transform, background-color; /* Optimize navigation button animations */\r\n}\r\n\r\n.nav-button:hover {\r\n  background: var(--jdp-nav-button-bg-hover);\r\n}\r\n\r\n.nav-button:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n.nav-button::before {\r\n  content: '';\r\n  display: block;\r\n  width: var(--jdp-nav-arrow-size);\r\n  height: var(--jdp-nav-arrow-size);\r\n  border-top: var(--jdp-nav-arrow-thickness) solid var(--jdp-nav-arrow-color);\r\n  border-right: var(--jdp-nav-arrow-thickness) solid var(--jdp-nav-arrow-color);\r\n  position: absolute;\r\n}\r\n\r\n.nav-button.prev::before {\r\n  transform: rotate(45deg);\r\n  right: 11px;\r\n  left: auto;\r\n}\r\n\r\n.nav-button.next::before {\r\n  transform: rotate(225deg);\r\n  left: 11px;\r\n  right: auto;\r\n}\r\n\r\n.day-names {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  margin-bottom: var(--jdp-spacing-sm);\r\n}\r\n\r\n.day-name {\r\n  font-size: var(--jdp-day-name-font-size);\r\n  font-weight: var(--jdp-day-name-font-weight);\r\n  color: var(--jdp-muted-foreground);\r\n  padding: var(--jdp-spacing-xs) 0;\r\n  text-align: center;\r\n}\r\n\r\n.day {\r\n  aspect-ratio: 1/1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: var(--jdp-day-cell-border-radius);\r\n  font-size: var(--jdp-day-font-size);\r\n  font-weight: var(--jdp-day-font-weight);\r\n  cursor: pointer;\r\n  transition: var(--jdp-transition-duration) ease;\r\n  margin: var(--jdp-day-cell-margin);\r\n  position: relative;\r\n  touch-action: manipulation; /* Add touch action manipulation */\r\n  -webkit-tap-highlight-color: transparent; /* Remove tap highlight color on mobile */\r\n  -webkit-user-select: none; /* Prevent text selection */\r\n  user-select: none;\r\n}\r\n\r\n.day:hover:not(.empty):not(.disabled) {\r\n  background: var(--jdp-day-hover-bg);\r\n}\r\n\r\n.day.selected {\r\n  background: var(--jdp-day-selected-bg);\r\n  color: var(--jdp-day-selected-color);\r\n}\r\n\r\n.day.today:not(.selected) {\r\n  border: var(--jdp-day-today-border-width) solid var(--jdp-day-today-border-color);\r\n}\r\n\r\n.day.empty {\r\n  cursor: default;\r\n}\r\n\r\n.day.disabled {\r\n  opacity: var(--jdp-day-disabled-opacity);\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Holiday styles */\r\n.day.holiday:not(.selected) {\r\n  color: var(--jdp-holiday-color);\r\n  background-color: var(--jdp-holiday-bg);\r\n  font-weight: var(--jdp-font-weight-medium);\r\n}\r\n\r\n.day.holiday:hover:not(.selected):not(.disabled) {\r\n  background-color: var(--jdp-holiday-hover-bg);\r\n}\r\n\r\n.day.friday {\r\n  color: var(--jdp-holiday-color);\r\n}\r\n\r\n.event-tooltip {\r\n  position: absolute;\r\n  background: var(--jdp-background);\r\n  border: 1px solid var(--jdp-border);\r\n  border-radius: var(--jdp-border-radius);\r\n  padding: var(--jdp-spacing-sm);\r\n  width: 200px;\r\n  box-shadow: var(--jdp-calendar-shadow);\r\n  text-align: right;\r\n  font-size: 12px;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  transition: opacity var(--jdp-transition-duration) ease;\r\n  pointer-events: none;\r\n  bottom: 120%;\r\n  right: 0;\r\n  transform: translateY(-5px);\r\n  z-index: 20; /* Higher than anything else in the calendar */\r\n}\r\n\r\n.day:hover .event-tooltip {\r\n  opacity: 1;\r\n  visibility: visible;\r\n}\r\n\r\n.event-item {\r\n  margin-bottom: 4px;\r\n  padding-bottom: 4px;\r\n  border-bottom: 1px solid var(--jdp-border);\r\n}\r\n\r\n.event-item:last-child {\r\n  margin-bottom: 0;\r\n  padding-bottom: 0;\r\n  border-bottom: none;\r\n}\r\n\r\n.event-item.holiday {\r\n  color: var(--jdp-holiday-color);\r\n}\r\n\r\n.event-type-label {\r\n  display: inline-block;\r\n  font-size: 10px;\r\n  padding: 1px 4px;\r\n  border-radius: 3px;\r\n  margin-right: 4px;\r\n  background-color: var(--jdp-muted);\r\n  color: var(--jdp-muted-foreground);\r\n}\r\n\r\n/* Today button styling */\r\n.footer {\r\n  margin-top: var(--jdp-spacing-md);\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.date-nav-button {\r\n  background: var(--jdp-muted);\r\n  border: none;\r\n  border-radius: var(--jdp-border-radius);\r\n  padding: var(--jdp-spacing-xs) var(--jdp-spacing-md);\r\n  font-family: inherit;\r\n  font-size: var(--jdp-font-size);\r\n  color: var(--jdp-foreground);\r\n  cursor: pointer;\r\n  transition: all var(--jdp-transition-duration) ease;\r\n  touch-action: manipulation;\r\n  -webkit-tap-highlight-color: transparent;\r\n}\r\n\r\n.date-nav-button:hover {\r\n  background: var(--jdp-nav-button-bg-hover);\r\n}\r\n\r\n.date-nav-button:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n.today-button {\r\n  /* Inherits from date-nav-button */\r\n}\r\n\r\n.tomorrow-button {\r\n  /* Inherits from date-nav-button */\r\n}\r\n\r\n/* Month/Year selectors */\r\n.selectors-container {\r\n  display: flex;\r\n  gap: var(--jdp-spacing-xs);\r\n}\r\n\r\n.date-select {\r\n  background-color: var(--jdp-muted);\r\n  border: none;\r\n  border-radius: var(--jdp-border-radius);\r\n  color: var(--jdp-foreground);\r\n  font-family: inherit;\r\n  font-size: var(--jdp-font-size);\r\n  padding: var(--jdp-spacing-xs) var(--jdp-spacing-sm);\r\n  cursor: pointer;\r\n  appearance: none;\r\n  -webkit-appearance: none;\r\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='6' fill='none'%3E%3Cpath fill='%2364748b' d='M0 0h12L6 6z'/%3E%3C/svg%3E\");\r\n  background-repeat: no-repeat;\r\n  background-position: left 8px center;\r\n  padding-left: 24px;\r\n  text-align: center;\r\n  transition: background-color var(--jdp-transition-duration) ease;\r\n}\r\n\r\n.date-select:hover {\r\n  background-color: var(--jdp-nav-button-bg-hover);\r\n}\r\n\r\n.month-select {\r\n  width: 100px;\r\n}\r\n\r\n.year-select {\r\n  width: 70px;\r\n}\r\n\r\n/* RTL specific styles for selectors */\r\n:host([rtl=\"true\"]) .date-select,\r\n:host([dir=\"rtl\"]) .date-select {\r\n  background-position: right 8px center;\r\n  padding-right: 24px;\r\n  padding-left: var(--jdp-spacing-sm);\r\n}\r\n`;\r\n\r\n/**\r\n * Default holiday types to show in the datepicker\r\n */\r\nconst DEFAULT_HOLIDAY_TYPES = ['Iran', 'Religious'];\r\n\r\n/**\r\n * Jalali Date Picker Web Component\r\n * \r\n * A customizable date picker that follows the Jalali (Persian) calendar.\r\n * Features include:\r\n * - Month and year dropdown navigation with 150-year range\r\n * - Quick today and tomorrow navigation buttons\r\n * - Touch gesture support for swiping between months\r\n * - Holiday highlighting with customizable types\r\n * - Full RTL support\r\n * - Customizable styling\r\n * \r\n * Usage:\r\n * ```html\r\n * <!-- Basic usage -->\r\n * <persian-datepicker-element></persian-datepicker-element>\r\n * \r\n * <!-- With attributes -->\r\n * <persian-datepicker-element placeholder=\"انتخاب تاریخ\" format=\"YYYY/MM/DD\"></persian-datepicker-element>\r\n * \r\n * <!-- With holiday types -->\r\n * <persian-datepicker-element holiday-types=\"Iran,Religious\"></persian-datepicker-element>\r\n * \r\n * <!-- With all holiday types -->\r\n * <persian-datepicker-element holiday-types=\"all\"></persian-datepicker-element>\r\n * \r\n * <!-- With custom Today button text -->\r\n * <persian-datepicker-element today-button-text=\"Go to Today\"></persian-datepicker-element>\r\n * \r\n * <!-- With custom Tomorrow button text -->\r\n * <persian-datepicker-element tomorrow-button-text=\"Next Day\"></persian-datepicker-element>\r\n * \r\n * <!-- With custom button styling -->\r\n * <persian-datepicker-element today-button-class=\"primary rounded\" tomorrow-button-class=\"secondary rounded\"></persian-datepicker-element>\r\n * \r\n * <!-- With styling customization -->\r\n * <persian-datepicker-element style=\"--jdp-primary: #3b82f6; --jdp-font-family: 'Vazir', sans-serif;\"></persian-datepicker-element>\r\n * ```\r\n * \r\n * @element persian-datepicker-element\r\n * \r\n * @attr {string} placeholder - Placeholder text for the input field\r\n * @attr {string} format - Date format (e.g., \"YYYY/MM/DD\")\r\n * @attr {boolean} rtl - Whether to use RTL direction\r\n * @attr {boolean} show-holidays - Whether to highlight holidays\r\n * @attr {string} holiday-types - Comma-separated list of holiday types to display\r\n * @attr {string} today-button-text - Custom text for the Today button (default: \"امروز\")\r\n * @attr {string} today-button-class - Additional CSS classes for the Today button\r\n * @attr {string} tomorrow-button-text - Custom text for the Tomorrow button (default: \"فردا\")\r\n * @attr {string} tomorrow-button-class - Additional CSS classes for the Tomorrow button\r\n * @attr {string} primary-color - Primary color for selected dates\r\n * @attr {string} primary-hover - Hover color for interactive elements\r\n * @attr {string} background-color - Background color for the calendar\r\n * @attr {string} foreground-color - Text color\r\n * @attr {string} border-color - Border color\r\n * @attr {string} border-radius - Border radius for rounded corners\r\n * @attr {string} font-family - Font family\r\n * @attr {string} holiday-color - Text color for holidays\r\n * @attr {string} holiday-bg - Background color for holidays\r\n */\r\nexport class PersianDatePickerElement extends HTMLElement {\r\n  private input: HTMLInputElement;\r\n  private calendar: HTMLDivElement;\r\n  private monthYearLabel: HTMLSelectElement;\r\n  private daysContainer: HTMLDivElement;\r\n  private dayNamesContainer: HTMLDivElement;\r\n  private jalaliYear: number;\r\n  private jalaliMonth: number;\r\n  private jalaliDay: number;\r\n  private selectedDate: DateTuple | null;\r\n  private options: PersianDatePickerElementOptions;\r\n  private showHolidays: boolean = true;\r\n  private holidayTypes: string[] = [...DEFAULT_HOLIDAY_TYPES];\r\n  private includeAllTypes: boolean = false;\r\n  private isTransitioning: boolean = false;\r\n\r\n  static get observedAttributes() {\r\n    return [\r\n      'placeholder', \r\n      'rtl', \r\n      'format', \r\n      'show-holidays',\r\n      'holiday-types',\r\n      'today-button-text',\r\n      'today-button-class',\r\n      'tomorrow-button-text',\r\n      'tomorrow-button-class',\r\n      // CSS variable attributes\r\n      'primary-color', \r\n      'primary-hover',\r\n      'background-color',\r\n      'foreground-color',\r\n      'border-color',\r\n      'border-radius',\r\n      'font-family',\r\n      'holiday-color',\r\n      'holiday-bg'\r\n    ];\r\n  }\r\n\r\n  constructor(options: PersianDatePickerElementOptions = {}) {\r\n    super();\r\n    this.options = options;\r\n    const shadow = this.attachShadow({ mode: \"open\" });\r\n\r\n    // Create the component's HTML structure\r\n    this.render(shadow);\r\n\r\n    // Apply any custom CSS variables provided in options\r\n    if (options.cssVariables) {\r\n      this.applyCustomCssVariables(options.cssVariables);\r\n    }\r\n\r\n    // Set holiday types if provided in options\r\n    if (options.holidayTypes) {\r\n      this.setHolidayTypes(options.holidayTypes);\r\n    }\r\n\r\n    // Get DOM references\r\n    this.input = shadow.getElementById(\"date-input\") as HTMLInputElement;\r\n    this.calendar = shadow.getElementById(\"calendar\") as HTMLDivElement;\r\n    this.monthYearLabel = shadow.getElementById(\"month-select\") as HTMLSelectElement;\r\n    this.daysContainer = shadow.getElementById(\"days-container\") as HTMLDivElement;\r\n    this.dayNamesContainer = shadow.getElementById(\"day-names\") as HTMLDivElement;\r\n    \r\n    // Setup month and year selectors\r\n    this.setupMonthYearSelectors();\r\n\r\n    // Initialize the day names (Saturday to Friday in Persian)\r\n    const dayNames = [\"ش\", \"ی\", \"د\", \"س\", \"چ\", \"پ\", \"ج\"];\r\n    dayNames.forEach(name => {\r\n      const dayNameEl = document.createElement(\"div\");\r\n      dayNameEl.classList.add(\"day-name\");\r\n      dayNameEl.textContent = name;\r\n      this.dayNamesContainer.appendChild(dayNameEl);\r\n    });\r\n\r\n    // Get today's Jalali date\r\n    const today = new Date();\r\n    const jalaliToday = PersianDate.gregorianToJalali(\r\n      today.getFullYear(),\r\n      today.getMonth() + 1,\r\n      today.getDate()\r\n    );\r\n\r\n    this.jalaliYear = jalaliToday[0];\r\n    this.jalaliMonth = jalaliToday[1];\r\n    this.jalaliDay = jalaliToday[2];\r\n    this.selectedDate = null;\r\n\r\n    // Set placeholder if provided in options\r\n    if (this.options.placeholder) {\r\n      this.input.placeholder = this.options.placeholder;\r\n    }\r\n\r\n    // Event listeners\r\n    this.input.addEventListener(\"click\", () => this.toggleCalendar());\r\n    shadow.getElementById(\"prev-month\")!.addEventListener(\"click\", () => this.changeMonth(-1));\r\n    shadow.getElementById(\"next-month\")!.addEventListener(\"click\", () => this.changeMonth(1));\r\n    shadow.getElementById(\"today-button\")!.addEventListener(\"click\", () => this.goToToday());\r\n    shadow.getElementById(\"tomorrow-button\")!.addEventListener(\"click\", () => this.goToTomorrow());\r\n    \r\n    // Add event listeners for month and year select dropdowns\r\n    const monthSelect = shadow.getElementById(\"month-select\") as HTMLSelectElement;\r\n    const yearSelect = shadow.getElementById(\"year-select\") as HTMLSelectElement;\r\n    \r\n    monthSelect.addEventListener(\"change\", () => {\r\n      this.jalaliMonth = parseInt(monthSelect.value);\r\n      this.renderCalendar();\r\n    });\r\n    \r\n    yearSelect.addEventListener(\"change\", () => {\r\n      this.jalaliYear = parseInt(yearSelect.value);\r\n      this.renderCalendar();\r\n    });\r\n\r\n    // Close calendar when clicking outside\r\n    document.addEventListener(\"click\", (e) => {\r\n      if (!e.composedPath().includes(this) && this.calendar.classList.contains(\"visible\")) {\r\n        this.toggleCalendar();\r\n      }\r\n    });\r\n\r\n    // Touch swipe gestures for calendar navigation\r\n    this.initTouchGestures();\r\n\r\n    this.renderCalendar();\r\n  }\r\n\r\n  /**\r\n   * Apply custom CSS variables to the component\r\n   */\r\n  private applyCustomCssVariables(variables: CSSVariableMap): void {\r\n    if (!variables) return;\r\n    \r\n    Object.entries(variables).forEach(([key, value]) => {\r\n      this.style.setProperty(key, String(value));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sets the holiday types to be displayed\r\n   * @param types Holiday types as a string (comma-separated) or an array of strings\r\n   */\r\n  setHolidayTypes(types: string | string[]): void {\r\n    if (typeof types === 'string') {\r\n      // Special case for \"all\" which includes all types\r\n      if (types.toLowerCase() === 'all') {\r\n        this.includeAllTypes = true;\r\n        this.holidayTypes = [...EventUtils.getEventTypes()]; // Get all available types\r\n        return;\r\n      }\r\n      \r\n      // Parse comma-separated values\r\n      this.holidayTypes = types.split(',').map(t => t.trim()).filter(Boolean);\r\n    } else if (Array.isArray(types)) {\r\n      this.holidayTypes = [...types];\r\n    } else {\r\n      this.holidayTypes = [...DEFAULT_HOLIDAY_TYPES];\r\n    }\r\n    \r\n    // Set includeAllTypes to false by default\r\n    this.includeAllTypes = false;\r\n    \r\n    // If the calendar is already rendered, update it\r\n    if (this.calendar) {\r\n      this.renderCalendar();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Gets the current holiday types being displayed\r\n   */\r\n  getHolidayTypes(): string[] {\r\n    return [...this.holidayTypes];\r\n  }\r\n  \r\n  /**\r\n   * Checks if all types (including excluded ones) are being shown\r\n   */\r\n  isShowingAllTypes(): boolean {\r\n    return this.includeAllTypes;\r\n  }\r\n\r\n  // Handle attribute changes\r\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n    if (oldValue === newValue) return;\r\n    \r\n    // Map of attribute names to CSS variable names\r\n    const cssVarMap: Record<string, string> = {\r\n      'primary-color': '--jdp-primary',\r\n      'primary-hover': '--jdp-primary-hover',\r\n      'background-color': '--jdp-background',\r\n      'foreground-color': '--jdp-foreground',\r\n      'border-color': '--jdp-border',\r\n      'border-radius': '--jdp-border-radius',\r\n      'font-family': '--jdp-font-family',\r\n      'holiday-color': '--jdp-holiday-color',\r\n      'holiday-bg': '--jdp-holiday-bg'\r\n    };\r\n    \r\n    switch (name) {\r\n      case 'placeholder':\r\n        if (this.input) this.input.placeholder = newValue;\r\n        break;\r\n      case 'rtl':\r\n        if (this.shadowRoot) {\r\n          const rtl = newValue !== null && newValue !== 'false';\r\n          // Type cast 'this' to HTMLElement to access style property\r\n          (this as unknown as HTMLElement).style.setProperty('--jdp-direction', rtl ? 'rtl' : 'ltr');\r\n        }\r\n        break;\r\n      case 'show-holidays':\r\n        this.showHolidays = newValue !== null && newValue !== 'false';\r\n        if (this.calendar) {\r\n          this.renderCalendar();\r\n        }\r\n        break;\r\n      case 'holiday-types':\r\n        if (newValue) {\r\n          this.setHolidayTypes(newValue);\r\n        } else {\r\n          this.holidayTypes = [...DEFAULT_HOLIDAY_TYPES];\r\n          this.includeAllTypes = false;\r\n        }\r\n        if (this.calendar) {\r\n          this.renderCalendar();\r\n        }\r\n        break;\r\n      case 'today-button-text':\r\n        // Update Today button text if it exists\r\n        if (this.shadowRoot) {\r\n          const todayButton = this.shadowRoot.getElementById('today-button');\r\n          if (todayButton) {\r\n            todayButton.textContent = newValue || 'امروز';\r\n          }\r\n        }\r\n        break;\r\n      case 'today-button-class':\r\n        // Update Today button class if it exists\r\n        if (this.shadowRoot) {\r\n          const todayButton = this.shadowRoot.getElementById('today-button');\r\n          if (todayButton) {\r\n            // Remove all classes except the base today-button class\r\n            todayButton.className = 'today-button';\r\n            // Add new classes if provided\r\n            if (newValue) {\r\n              newValue.split(' ').forEach(className => {\r\n                if (className.trim()) {\r\n                  todayButton.classList.add(className.trim());\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      case 'tomorrow-button-text':\r\n        // Update Tomorrow button text if it exists\r\n        if (this.shadowRoot) {\r\n          const tomorrowButton = this.shadowRoot.getElementById('tomorrow-button');\r\n          if (tomorrowButton) {\r\n            tomorrowButton.textContent = newValue || 'فردا';\r\n          }\r\n        }\r\n        break;\r\n      case 'tomorrow-button-class':\r\n        // Update Tomorrow button class if it exists\r\n        if (this.shadowRoot) {\r\n          const tomorrowButton = this.shadowRoot.getElementById('tomorrow-button');\r\n          if (tomorrowButton) {\r\n            // Remove all classes except the base tomorrow-button class\r\n            tomorrowButton.className = 'tomorrow-button';\r\n            // Add new classes if provided\r\n            if (newValue) {\r\n              newValue.split(' ').forEach(className => {\r\n                if (className.trim()) {\r\n                  tomorrowButton.classList.add(className.trim());\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }\r\n        break;\r\n      default:\r\n        // Handle CSS variable attributes\r\n        if (cssVarMap[name] && this.shadowRoot) {\r\n          // Type cast 'this' to HTMLElement to access style property\r\n          (this as unknown as HTMLElement).style.setProperty(cssVarMap[name], newValue);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  private render(shadow: ShadowRoot) {\r\n    // Get today button text from attribute or use default \"امروز\"\r\n    const todayButtonText = this.getAttribute('today-button-text') || 'امروز';\r\n    // Get any additional classes for the today button\r\n    const todayButtonClass = this.getAttribute('today-button-class') || '';\r\n    // Get tomorrow button text from attribute or use default \"فردا\"\r\n    const tomorrowButtonText = this.getAttribute('tomorrow-button-text') || 'فردا';\r\n    // Get any additional classes for the tomorrow button\r\n    const tomorrowButtonClass = this.getAttribute('tomorrow-button-class') || '';\r\n    \r\n    shadow.innerHTML = `\r\n      <style>${styles}</style>\r\n      <div class=\"picker-container\">\r\n        <input type=\"text\" id=\"date-input\" readonly placeholder=\"انتخاب تاریخ\">\r\n        <div class=\"calendar\" id=\"calendar\">\r\n          <div class=\"header\">\r\n            <button id=\"prev-month\" type=\"button\" class=\"nav-button prev\"></button>\r\n            <div class=\"selectors-container\">\r\n              <select id=\"month-select\" class=\"date-select month-select\"></select>\r\n              <select id=\"year-select\" class=\"date-select year-select\"></select>\r\n            </div>\r\n            <button id=\"next-month\" type=\"button\" class=\"nav-button next\"></button>\r\n          </div>\r\n          <div class=\"day-names\" id=\"day-names\"></div>\r\n          <div class=\"days-wrapper\">\r\n            <div class=\"days\" id=\"days-container\"></div>\r\n          </div>\r\n          <div class=\"footer\">\r\n            <button id=\"today-button\" type=\"button\" class=\"date-nav-button today-button ${todayButtonClass}\">${todayButtonText}</button>\r\n            <button id=\"tomorrow-button\" type=\"button\" class=\"date-nav-button tomorrow-button ${tomorrowButtonClass}\">${tomorrowButtonText}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  toggleCalendar() {\r\n    if (this.calendar.classList.contains(\"visible\")) {\r\n      // Hide calendar\r\n      this.calendar.classList.remove(\"visible\", \"position-bottom\", \"position-top\");\r\n    } else {\r\n      // Show calendar with position calculation\r\n      this.positionCalendar();\r\n      this.calendar.classList.add(\"visible\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate and set the optimal position for the calendar\r\n   */\r\n  private positionCalendar(): void {\r\n    // Reset position classes\r\n    this.calendar.classList.remove(\"position-bottom\", \"position-top\");\r\n    \r\n    // Get measurements without causing reflow\r\n    const inputRect = this.input.getBoundingClientRect();\r\n    const windowHeight = window.innerHeight;\r\n    \r\n    // Default to position-bottom (most common)\r\n    this.calendar.classList.add(\"position-bottom\");\r\n    \r\n    // Set display block but with visibility hidden to measure without showing\r\n    const originalVisibility = this.calendar.style.visibility;\r\n    const originalDisplay = this.calendar.style.display;\r\n    this.calendar.style.visibility = 'hidden';\r\n    this.calendar.style.display = 'block';\r\n    \r\n    // Now we can measure once display is set\r\n    const calendarHeight = this.calendar.offsetHeight;\r\n    \r\n    // Check if there's enough space below\r\n    const spaceBelow = windowHeight - inputRect.bottom;\r\n    if (spaceBelow < calendarHeight) {\r\n      // Not enough space below, check if there's more space above\r\n      const spaceAbove = inputRect.top;\r\n      if (spaceAbove > spaceBelow || spaceAbove >= calendarHeight) {\r\n        // Switch to position-top\r\n        this.calendar.classList.remove(\"position-bottom\");\r\n        this.calendar.classList.add(\"position-top\");\r\n      }\r\n    }\r\n    \r\n    // Restore original styles\r\n    this.calendar.style.visibility = originalVisibility;\r\n    this.calendar.style.display = originalDisplay;\r\n  }\r\n\r\n  changeMonth(direction: number) {\r\n    // Prevent multiple transitions at once\r\n    if (this.isTransitioning) return;\r\n    this.isTransitioning = true;\r\n    \r\n    // Cache reference to calendar elements\r\n    const daysContainer = this.daysContainer;\r\n    \r\n    // Use requestAnimationFrame for smoother animations\r\n    requestAnimationFrame(() => {\r\n      // Add transition class based on direction\r\n      const slideClass = direction > 0 ? 'slide-left' : 'slide-right';\r\n      daysContainer.classList.add(slideClass);\r\n      \r\n      // Update month and year values\r\n      this.jalaliMonth = Number(this.jalaliMonth) + direction;\r\n      if (this.jalaliMonth < 1) {\r\n        this.jalaliMonth = 12;\r\n        this.jalaliYear--;\r\n      } else if (this.jalaliMonth > 12) {\r\n        this.jalaliMonth = 1;\r\n        this.jalaliYear++;\r\n      }\r\n      \r\n      // Use requestAnimationFrame for better timing\r\n      requestAnimationFrame(() => {\r\n        // Set a timeout to actually update the calendar\r\n        setTimeout(() => {\r\n          // Update month and year selects\r\n          if (this.shadowRoot) {\r\n            const monthSelect = this.shadowRoot.getElementById(\"month-select\") as HTMLSelectElement;\r\n            const yearSelect = this.shadowRoot.getElementById(\"year-select\") as HTMLSelectElement;\r\n            \r\n            if (monthSelect) monthSelect.value = this.jalaliMonth.toString();\r\n            if (yearSelect) yearSelect.value = this.jalaliYear.toString();\r\n          }\r\n          \r\n          // Clear days container and render new content\r\n          daysContainer.innerHTML = \"\";\r\n          this.renderCalendarContent();\r\n          \r\n          // Remove slide class after the animation duration\r\n          requestAnimationFrame(() => {\r\n            daysContainer.classList.remove(slideClass);\r\n            // Set a brief timeout to ensure animation is truly done\r\n            setTimeout(() => {\r\n              this.isTransitioning = false;\r\n            }, 50);\r\n          });\r\n        }, 200); // Shorter than the CSS animation duration for better feel\r\n      });\r\n    });\r\n  }\r\n\r\n  renderCalendar() {\r\n    const shadow = this.shadowRoot!;\r\n    \r\n    // Update month and year select values\r\n    const monthSelect = shadow.getElementById(\"month-select\") as HTMLSelectElement;\r\n    const yearSelect = shadow.getElementById(\"year-select\") as HTMLSelectElement;\r\n    \r\n    monthSelect.value = this.jalaliMonth.toString();\r\n    yearSelect.value = this.jalaliYear.toString();\r\n    \r\n    // Clear previous days\r\n    this.daysContainer.innerHTML = \"\";\r\n    \r\n    // Render the calendar content\r\n    this.renderCalendarContent();\r\n  }\r\n  \r\n  /**\r\n   * Renders the calendar content for the current month\r\n   */\r\n  private renderCalendarContent(): void {\r\n    // Get first day of month and number of days\r\n    const firstDayOfMonth = PersianDate.getDayOfWeek(this.jalaliYear, this.jalaliMonth, 1);\r\n    const daysInMonth = PersianDate.getDaysInMonth(this.jalaliYear, this.jalaliMonth);\r\n    \r\n    // Get today's date for highlighting\r\n    const today = new Date();\r\n    const jalaliToday = PersianDate.gregorianToJalali(\r\n      today.getFullYear(), \r\n      today.getMonth() + 1, \r\n      today.getDate()\r\n    );\r\n    \r\n    // Adjust first day of month for Persian calendar (Saturday is first day of week)\r\n    const adjustedFirstDay = (firstDayOfMonth + 1) % 7;\r\n    \r\n    // Add empty cells for days before the first day of month\r\n    for (let i = 0; i < adjustedFirstDay; i++) {\r\n      const emptyDay = document.createElement(\"div\");\r\n      emptyDay.classList.add(\"day\", \"empty\");\r\n      this.daysContainer.appendChild(emptyDay);\r\n    }\r\n\r\n    // Generate days of month\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      const dayElement = document.createElement(\"div\");\r\n      dayElement.classList.add(\"day\");\r\n      dayElement.textContent = i.toString();\r\n      \r\n      // Improve touch behavior on day elements\r\n      dayElement.addEventListener(\"touchstart\", (e) => {\r\n        // Just let it propagate to handle in the calendar's touch handlers\r\n      }, { passive: true });\r\n      \r\n      // Add click listener with proper event handling\r\n      dayElement.addEventListener(\"click\", (e) => {\r\n        e.preventDefault();  // Prevent any default actions\r\n        e.stopPropagation(); // Stop event from propagating\r\n        this.selectDate(i);\r\n      });\r\n      \r\n      // Highlight today\r\n      if (this.jalaliYear === jalaliToday[0] && this.jalaliMonth === jalaliToday[1] && i === jalaliToday[2]) {\r\n        dayElement.classList.add(\"today\");\r\n      }\r\n      \r\n      // Highlight selected date\r\n      if (this.selectedDate && \r\n          this.jalaliYear === this.selectedDate[0] && \r\n          this.jalaliMonth === this.selectedDate[1] && \r\n          i === this.selectedDate[2]) {\r\n        dayElement.classList.add(\"selected\");\r\n      }\r\n      \r\n      // Check if the day is a holiday\r\n      if (this.showHolidays) {\r\n        // Check if it's Friday (6th day in JavaScript's getDay, where 0 is Sunday)\r\n        const dayOfWeek = PersianDate.getDayOfWeek(this.jalaliYear, this.jalaliMonth, i);\r\n        if (dayOfWeek === 5) { // Friday\r\n          dayElement.classList.add(\"friday\");\r\n        }\r\n        \r\n        // Check if it's a holiday from events.json based on holiday types\r\n        if (EventUtils.isHoliday(this.jalaliMonth, i, this.holidayTypes, this.includeAllTypes)) {\r\n          dayElement.classList.add(\"holiday\");\r\n          \r\n          // Add tooltip with event titles\r\n          const events = EventUtils.getEvents(this.jalaliMonth, i, this.holidayTypes, this.includeAllTypes);\r\n          if (events.length > 0) {\r\n            const tooltip = document.createElement(\"div\");\r\n            tooltip.classList.add(\"event-tooltip\");\r\n            \r\n            events.forEach(event => {\r\n              const eventItem = document.createElement(\"div\");\r\n              eventItem.classList.add(\"event-item\");\r\n              \r\n              // Add 'holiday' class to highlight holiday events\r\n              if (event.holiday) {\r\n                eventItem.classList.add(\"holiday\");\r\n              }\r\n              \r\n              // Add type label\r\n              const typeLabel = document.createElement(\"span\");\r\n              typeLabel.classList.add(\"event-type-label\");\r\n              typeLabel.textContent = event.type;\r\n              \r\n              eventItem.appendChild(typeLabel);\r\n              \r\n              // Add event title\r\n              const titleSpan = document.createElement(\"span\");\r\n              titleSpan.textContent = event.title;\r\n              eventItem.appendChild(titleSpan);\r\n              \r\n              tooltip.appendChild(eventItem);\r\n            });\r\n            \r\n            dayElement.appendChild(tooltip);\r\n          }\r\n        }\r\n      }\r\n      \r\n      this.daysContainer.appendChild(dayElement);\r\n    }\r\n  }\r\n\r\n  selectDate(day: number) {\r\n    this.jalaliDay = day;\r\n    this.selectedDate = [this.jalaliYear, this.jalaliMonth, this.jalaliDay];\r\n    \r\n    // Format date as YYYY/MM/DD or custom format\r\n    this.formatAndSetValue();\r\n    \r\n    // Get all events for the selected date\r\n    const events = EventUtils.getEvents(this.jalaliMonth, day, this.holidayTypes, this.includeAllTypes);\r\n    \r\n    // Dispatch change event\r\n    this.dispatchEvent(new CustomEvent(\"change\", {\r\n      detail: {\r\n        jalali: this.selectedDate,\r\n        gregorian: PersianDate.jalaliToGregorian(this.jalaliYear, this.jalaliMonth, this.jalaliDay),\r\n        isHoliday: EventUtils.isHoliday(this.jalaliMonth, day, this.holidayTypes, this.includeAllTypes),\r\n        events: events\r\n      },\r\n      bubbles: true\r\n    }) as PersianDateChangeEvent);\r\n    \r\n    this.toggleCalendar();\r\n    this.renderCalendar();\r\n  }\r\n\r\n  private formatAndSetValue() {\r\n    if (!this.selectedDate) return;\r\n    \r\n    const format = this.getAttribute('format') || this.options.format || 'YYYY/MM/DD';\r\n    \r\n    let formattedDate = format\r\n      .replace('YYYY', this.selectedDate[0].toString())\r\n      .replace('MM', this.selectedDate[1].toString().padStart(2, '0'))\r\n      .replace('DD', this.selectedDate[2].toString().padStart(2, '0'));\r\n      \r\n    this.input.value = formattedDate;\r\n  }\r\n\r\n  /**\r\n   * Sets the date value programmatically\r\n   */\r\n  public setValue(year: number, month: number, day: number): void {\r\n    this.selectedDate = [year, month, day];\r\n    this.jalaliYear = year;\r\n    this.jalaliMonth = month;\r\n    this.jalaliDay = day;\r\n    this.formatAndSetValue();\r\n    this.renderCalendar();\r\n  }\r\n\r\n  /**\r\n   * Gets the currently selected date as a tuple [year, month, day]\r\n   */\r\n  public getValue(): DateTuple | null {\r\n    return this.selectedDate;\r\n  }\r\n\r\n  /**\r\n   * Checks if the currently selected date is a holiday\r\n   */\r\n  public isSelectedDateHoliday(): boolean {\r\n    if (!this.selectedDate) return false;\r\n    return EventUtils.isHoliday(this.selectedDate[1], this.selectedDate[2], this.holidayTypes, this.includeAllTypes);\r\n  }\r\n\r\n  /**\r\n   * Gets events for the currently selected date\r\n   */\r\n  public getSelectedDateEvents(): any[] {\r\n    if (!this.selectedDate) return [];\r\n    return EventUtils.getEvents(this.selectedDate[1], this.selectedDate[2], this.holidayTypes, this.includeAllTypes);\r\n  }\r\n\r\n  /**\r\n   * Clears the selected date\r\n   */\r\n  public clear() {\r\n    this.selectedDate = null;\r\n    this.input.value = '';\r\n    this.renderCalendar();\r\n  }\r\n\r\n  /**\r\n   * Initialize touch gesture support for the calendar\r\n   */\r\n  private initTouchGestures(): void {\r\n    let startX: number = 0;\r\n    let startY: number = 0;\r\n    let isDragging: boolean = false;\r\n    const threshold = 20; // Even lower threshold for more responsive swipes\r\n    let touchStartTime: number = 0;\r\n    let isSwiping = false;\r\n    \r\n    // Handle touch start - capture initial position\r\n    this.calendar.addEventListener('touchstart', (e: TouchEvent) => {\r\n      // Only handle touches when calendar is visible\r\n      if (!this.calendar.classList.contains(\"visible\")) return;\r\n      \r\n      // Store initial touch position\r\n      startX = e.touches[0].clientX;\r\n      startY = e.touches[0].clientY;\r\n      isDragging = false;\r\n      isSwiping = false;\r\n      touchStartTime = Date.now();\r\n    }, { passive: true });\r\n    \r\n    // For the entire calendar, capture touchmove events\r\n    this.calendar.addEventListener('touchmove', (e: TouchEvent) => {\r\n      // Only process if calendar is visible\r\n      if (!this.calendar.classList.contains(\"visible\")) return;\r\n      \r\n      // Calculate how far we've moved\r\n      const currentX = e.touches[0].clientX;\r\n      const currentY = e.touches[0].clientY;\r\n      const diffX = currentX - startX;\r\n      const diffY = currentY - startY;\r\n      \r\n      // If we're already swiping, always prevent default\r\n      if (isSwiping) {\r\n        e.preventDefault();\r\n        return;\r\n      }\r\n      \r\n      // If horizontal movement is greater than vertical movement and significant\r\n      if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > threshold) {\r\n        // We have a horizontal swipe inside the calendar - prevent page scrolling\r\n        e.preventDefault();\r\n        isDragging = true;\r\n        isSwiping = true;\r\n      }\r\n    }, { passive: false });\r\n    \r\n    // Handle touch end - determine if it was a swipe\r\n    this.calendar.addEventListener('touchend', (e: TouchEvent) => {\r\n      if (!this.calendar.classList.contains(\"visible\")) return;\r\n      \r\n      // Reset swiping state\r\n      const wasSwiping = isSwiping;\r\n      isSwiping = false;\r\n      \r\n      const touchEndTime = Date.now();\r\n      const touchDuration = touchEndTime - touchStartTime;\r\n      \r\n      // Only process if the touch was quick (< 300ms) or we detected dragging\r\n      if ((touchDuration < 300 || isDragging) && !this.isTransitioning) {\r\n        const endX = e.changedTouches[0].clientX;\r\n        const endY = e.changedTouches[0].clientY;\r\n        \r\n        const diffX = endX - startX;\r\n        const diffY = endY - startY;\r\n        \r\n        // Only consider horizontal movements that are larger than vertical movements\r\n        if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > threshold) {\r\n          // Determine direction based on RTL mode\r\n          const isRTL = getComputedStyle(this).getPropertyValue('--jdp-direction').trim() === 'rtl';\r\n          \r\n          // In RTL mode, swipe left moves to next month, swipe right moves to previous month\r\n          // In LTR mode, it's the opposite\r\n          if ((isRTL && diffX < 0) || (!isRTL && diffX > 0)) {\r\n            e.preventDefault(); // Prevent any default actions\r\n            e.stopPropagation(); // Stop event from propagating\r\n            this.changeMonth(1); // Next month\r\n          } else if ((isRTL && diffX > 0) || (!isRTL && diffX < 0)) {\r\n            e.preventDefault(); // Prevent any default actions\r\n            e.stopPropagation(); // Stop event from propagating\r\n            this.changeMonth(-1); // Previous month\r\n          }\r\n        }\r\n      }\r\n      \r\n      // If we were swiping, prevent any click events\r\n      if (wasSwiping) {\r\n        e.preventDefault();\r\n      }\r\n    }, { passive: false });\r\n    \r\n    // Add a touchcancel handler to reset state\r\n    this.calendar.addEventListener('touchcancel', () => {\r\n      isSwiping = false;\r\n      isDragging = false;\r\n    });\r\n    \r\n    // Improve performance by preventing events from being processed by the whole document\r\n    this.calendar.addEventListener('touchstart', (e) => {\r\n      e.stopPropagation();\r\n    }, { passive: true });\r\n    \r\n    // Improve month navigation performance\r\n    this.shadowRoot?.getElementById(\"prev-month\")?.addEventListener(\"touchstart\", (e) => {\r\n      e.stopPropagation();\r\n    }, { passive: true });\r\n    \r\n    this.shadowRoot?.getElementById(\"next-month\")?.addEventListener(\"touchstart\", (e) => {\r\n      e.stopPropagation();\r\n    }, { passive: true });\r\n  }\r\n\r\n  /**\r\n   * Navigate to today's date and select it\r\n   */\r\n  private goToToday(): void {\r\n    // Get today's date\r\n    const today = new Date();\r\n    const jalaliToday = PersianDate.gregorianToJalali(\r\n      today.getFullYear(),\r\n      today.getMonth() + 1,\r\n      today.getDate()\r\n    );\r\n    \r\n    // Update current view to today's month/year\r\n    this.jalaliYear = jalaliToday[0];\r\n    this.jalaliMonth = jalaliToday[1];\r\n    \r\n    // Render the calendar with the new month/year\r\n    this.renderCalendar();\r\n    \r\n    // Select today's date\r\n    this.selectDate(jalaliToday[2]);\r\n  }\r\n\r\n  /**\r\n   * Navigate to tomorrow's date and select it\r\n   */\r\n  private goToTomorrow(): void {\r\n    // Get tomorrow's date (add 1 day to today)\r\n    const tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    \r\n    const jalaliTomorrow = PersianDate.gregorianToJalali(\r\n        tomorrow.getFullYear(),\r\n        tomorrow.getMonth() + 1,\r\n        tomorrow.getDate()\r\n    );\r\n    \r\n    // Update current view to tomorrow's month/year\r\n    this.jalaliYear = jalaliTomorrow[0];\r\n    this.jalaliMonth = jalaliTomorrow[1];\r\n    \r\n    // Render the calendar with the new month/year\r\n    this.renderCalendar();\r\n    \r\n    // Select tomorrow's date\r\n    this.selectDate(jalaliTomorrow[2]);\r\n  }\r\n\r\n  /**\r\n   * Setup month and year selector dropdowns\r\n   */\r\n  private setupMonthYearSelectors(): void {\r\n    const shadow = this.shadowRoot!;\r\n    const monthSelect = shadow.getElementById(\"month-select\") as HTMLSelectElement;\r\n    const yearSelect = shadow.getElementById(\"year-select\") as HTMLSelectElement;\r\n    \r\n    // Clear existing options\r\n    monthSelect.innerHTML = \"\";\r\n    yearSelect.innerHTML = \"\";\r\n    \r\n    // Add month options (1-12)\r\n    const persianMonths = [\r\n      \"فروردین\", \"اردیبهشت\", \"خرداد\", \"تیر\", \"مرداد\", \"شهریور\",\r\n      \"مهر\", \"آبان\", \"آذر\", \"دی\", \"بهمن\", \"اسفند\"\r\n    ];\r\n    \r\n    persianMonths.forEach((month, index) => {\r\n      const option = document.createElement(\"option\");\r\n      option.value = (index + 1).toString();\r\n      option.textContent = month;\r\n      monthSelect.appendChild(option);\r\n    });\r\n    \r\n    // Add year options (current year - 100 to current year + 50)\r\n    const today = new Date();\r\n    const jalaliToday = PersianDate.gregorianToJalali(\r\n      today.getFullYear(), \r\n      today.getMonth() + 1, \r\n      today.getDate()\r\n    );\r\n    \r\n    const currentJalaliYear = jalaliToday[0];\r\n    const startYear = currentJalaliYear - 100;\r\n    const endYear = currentJalaliYear + 50;\r\n    \r\n    for (let year = startYear; year <= endYear; year++) {\r\n      const option = document.createElement(\"option\");\r\n      option.value = year.toString();\r\n      option.textContent = year.toString();\r\n      yearSelect.appendChild(option);\r\n    }\r\n  }\r\n} ","// Import the custom element class\r\nimport { PersianDatePickerElement } from './persian-datepicker-element';\r\n// Import the utility class\r\nimport { PersianDate } from './persian-date';\r\n// Import types from types directory\r\nimport type { \r\n  PersianDatePickerElementOptions, \r\n  PersianDateChangeEvent,\r\n  DateTuple,\r\n  CSSVariableMap,\r\n  PersianEvent\r\n} from './types';\r\n\r\n// Define the custom element\r\nif (!customElements.get('persian-datepicker-element')) {\r\n  customElements.define('persian-datepicker-element', PersianDatePickerElement);\r\n}\r\n\r\n// Export the classes and types\r\nexport { PersianDatePickerElement, PersianDate };\r\nexport type { \r\n  PersianDatePickerElementOptions, \r\n  PersianDateChangeEvent,\r\n  DateTuple,\r\n  CSSVariableMap,\r\n  PersianEvent\r\n};\r\n\r\n// Default export for convenient usage\r\nexport default PersianDatePickerElement; "],"names":[],"mappings":"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"}