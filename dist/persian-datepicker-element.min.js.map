{"version":3,"file":"persian-datepicker-element.min.js","sources":["webpack://PersianDatePickerElement/./src/persian-date.ts","webpack://PersianDatePickerElement/./src/utils/hijri-utils.ts","webpack://PersianDatePickerElement/./src/utils/event-utils.ts","webpack://PersianDatePickerElement/./src/persian-datepicker-element.ts","webpack://PersianDatePickerElement/./src/index.ts"],"sourcesContent":["/**\r\n * Jalali (Shamsi) Calendar utilities\r\n */\r\nexport const PersianDate = {\r\n  g_days_in_month: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\r\n  j_days_in_month: [31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 29],\r\n  \r\n  jalaliToGregorian: function(j_y: number, j_m: number, j_d: number): [number, number, number] {\r\n    j_y = parseInt(j_y.toString());\r\n    j_m = parseInt(j_m.toString());\r\n    j_d = parseInt(j_d.toString());\r\n    \r\n    const jy = j_y - 979;\r\n    const jm = j_m - 1;\r\n    const jd = j_d - 1;\r\n    \r\n    let j_day_no = 365 * jy + Math.floor(jy / 33) * 8 + Math.floor((jy % 33 + 3) / 4);\r\n    for (let i = 0; i < jm; ++i) j_day_no += this.j_days_in_month[i];\r\n    \r\n    j_day_no += jd;\r\n    \r\n    let g_day_no = j_day_no + 79;\r\n    \r\n    let gy = 1600 + 400 * Math.floor(g_day_no / 146097);\r\n    g_day_no = g_day_no % 146097;\r\n    \r\n    let leap = true;\r\n    if (g_day_no >= 36525) {\r\n      g_day_no--;\r\n      gy += 100 * Math.floor(g_day_no / 36524);\r\n      g_day_no = g_day_no % 36524;\r\n      \r\n      if (g_day_no >= 365) g_day_no++;\r\n      else leap = false;\r\n    }\r\n    \r\n    gy += 4 * Math.floor(g_day_no / 1461);\r\n    g_day_no %= 1461;\r\n    \r\n    if (g_day_no >= 366) {\r\n      leap = false;\r\n      g_day_no--;\r\n      gy += Math.floor(g_day_no / 365);\r\n      g_day_no = g_day_no % 365;\r\n    }\r\n    \r\n    let i = 0;\r\n    for (; g_day_no >= this.g_days_in_month[i] + (i === 1 && leap ? 1 : 0); i++) {\r\n      g_day_no -= this.g_days_in_month[i] + (i === 1 && leap ? 1 : 0);\r\n    }\r\n      \r\n    const gm = i + 1;\r\n    const gd = g_day_no + 1;\r\n    \r\n    return [gy, gm, gd];\r\n  },\r\n  \r\n  gregorianToJalali: function(g_y: number, g_m: number, g_d: number): [number, number, number] {\r\n    g_y = parseInt(g_y.toString());\r\n    g_m = parseInt(g_m.toString());\r\n    g_d = parseInt(g_d.toString());\r\n    \r\n    const gy = g_y - 1600;\r\n    const gm = g_m - 1;\r\n    const gd = g_d - 1;\r\n    \r\n    let g_day_no = 365 * gy + Math.floor((gy + 3) / 4) - Math.floor((gy + 99) / 100) + Math.floor((gy + 399) / 400);\r\n    \r\n    for (let i = 0; i < gm; ++i)\r\n      g_day_no += this.g_days_in_month[i];\r\n      \r\n    if (gm > 1 && ((gy % 4 === 0 && gy % 100 !== 0) || (gy % 400 === 0)))\r\n      g_day_no++;\r\n      \r\n    g_day_no += gd;\r\n    \r\n    let j_day_no = g_day_no - 79;\r\n    const j_np = Math.floor(j_day_no / 12053);\r\n    j_day_no = j_day_no % 12053;\r\n    \r\n    let jy = 979 + 33 * j_np + 4 * Math.floor(j_day_no / 1461);\r\n    \r\n    j_day_no %= 1461;\r\n    \r\n    if (j_day_no >= 366) {\r\n      jy += Math.floor((j_day_no - 1) / 365);\r\n      j_day_no = (j_day_no - 1) % 365;\r\n    }\r\n    \r\n    let i = 0;\r\n    for (; i < 11 && j_day_no >= this.j_days_in_month[i]; ++i) {\r\n      j_day_no -= this.j_days_in_month[i];\r\n    }\r\n    \r\n    const jm = i + 1;\r\n    const jd = j_day_no + 1;\r\n    \r\n    return [jy, jm, jd];\r\n  },\r\n  \r\n  isLeapJalaliYear: function(year: number): boolean {\r\n    const breaks = [1, 5, 9, 13, 17, 22, 26, 30];\r\n    return breaks.includes(year % 33);\r\n  },\r\n  \r\n  getDaysInMonth: function(year: number, month: number): number {\r\n    if (month < 1 || month > 12) return 0;\r\n    if (month <= 6) return 31;\r\n    if (month <= 11) return 30;\r\n    // Month 12 (Esfand)\r\n    return this.isLeapJalaliYear(year) ? 30 : 29;\r\n  },\r\n  \r\n  getMonthName: function(month: number): string {\r\n    const monthNames = [\r\n      \"فروردین\", \"اردیبهشت\", \"خرداد\", \"تیر\", \"مرداد\", \"شهریور\",\r\n      \"مهر\", \"آبان\", \"آذر\", \"دی\", \"بهمن\", \"اسفند\"\r\n    ];\r\n    return monthNames[month - 1];\r\n  },\r\n  \r\n  getDayOfWeek: function(jYear: number, jMonth: number, jDay: number): number {\r\n    const gdate = this.jalaliToGregorian(jYear, jMonth, jDay);\r\n    const date = new Date(gdate[0], gdate[1]-1, gdate[2]);\r\n    return date.getDay();\r\n  },\r\n  \r\n  /**\r\n   * Returns the number of days in a Jalali year\r\n   */\r\n  getDaysInYear: function(year: number): number {\r\n    return this.isLeapJalaliYear(year) ? 366 : 365;\r\n  },\r\n  \r\n  /**\r\n   * Validates a Jalali date\r\n   */\r\n  isValidDate: function(year: number, month: number, day: number): boolean {\r\n    if (year < 0 || month < 1 || month > 12 || day < 1) return false;\r\n    return day <= this.getDaysInMonth(year, month);\r\n  }\r\n}; ","/**\r\n * Utilities for converting between Hijri (Islamic) and Jalali (Persian) calendars\r\n * \r\n * This implementation uses the Umm al-Qura calendar system which is used in many\r\n * Islamic countries and is accurate for contemporary dates\r\n */\r\n\r\n/**\r\n * Converts Hijri date to Gregorian date\r\n * \r\n * @param hy Hijri year\r\n * @param hm Hijri month (1-12)\r\n * @param hd Hijri day (1-30)\r\n * @returns Array [year, month, day] with Gregorian date\r\n */\r\nexport function hijriToGregorian(hy: number, hm: number, hd: number): [number, number, number] {\r\n  // Ensure valid input\r\n  if (hm < 1 || hm > 12 || hd < 1 || hd > 30) {\r\n    throw new Error('Invalid Hijri date');\r\n  }\r\n  \r\n  // Days since Hijri epoch (approximately July 19, 622 CE)\r\n  // Algorithm based on Umm al-Qura calendar used in Saudi Arabia\r\n  \r\n  // Convert Hijri to days since Hijri epoch\r\n  const epochDays = Math.floor((hy - 1) * 354.367) + // Average Hijri year is 354.367 days\r\n                    Math.floor((hm - 1) * 29.5) + // Average Hijri month is 29.5 days\r\n                    (hd - 1);\r\n  \r\n  // Convert to Gregorian date (Julian days + days since Hijri epoch + Gregorian epoch adjustment)\r\n  const julianDays = epochDays + 1948439.5; // Adjustment for Hijri epoch in Julian days\r\n  \r\n  // Convert Julian days to Gregorian date\r\n  return julianDaysToGregorian(julianDays);\r\n}\r\n\r\n/**\r\n * Converts Julian days to Gregorian date\r\n * \r\n * @param julianDays Julian day count\r\n * @returns Array [year, month, day] with Gregorian date\r\n */\r\nfunction julianDaysToGregorian(julianDays: number): [number, number, number] {\r\n  const z = Math.floor(julianDays + 0.5);\r\n  const a = Math.floor((z - 1867216.25) / 36524.25);\r\n  const b = z + 1 + a - Math.floor(a / 4);\r\n  const c = b + 1524;\r\n  const d = Math.floor((c - 122.1) / 365.25);\r\n  const e = Math.floor(365.25 * d);\r\n  const f = Math.floor((c - e) / 30.6001);\r\n  \r\n  // Calculate day, month, and year\r\n  const day = Math.floor(c - e - Math.floor(30.6001 * f));\r\n  let month = f - 1 - 12 * Math.floor(f / 14);\r\n  let year = d - 4715 - Math.floor((7 + month) / 10);\r\n  \r\n  // Convert to 1-based month\r\n  if (month < 1) {\r\n    month += 12;\r\n    year -= 1;\r\n  }\r\n  \r\n  return [year, month, day];\r\n}\r\n\r\n/**\r\n * Converts Gregorian date to Jalali (Persian) date\r\n * \r\n * @param gy Gregorian year\r\n * @param gm Gregorian month (1-12)\r\n * @param gd Gregorian day (1-31)\r\n * @returns Array [year, month, day] with Jalali date\r\n */\r\nexport function gregorianToJalali(gy: number, gm: number, gd: number): [number, number, number] {\r\n  // Implementation based on jalali.js algorithm\r\n  const g_days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n  const j_days_in_month = [31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 29];\r\n  \r\n  gy = parseInt(gy.toString());\r\n  gm = parseInt(gm.toString());\r\n  gd = parseInt(gd.toString());\r\n  \r\n  // Check if year is leap year and adjust February days\r\n  const isLeapYear = (gy % 4 === 0 && gy % 100 !== 0) || (gy % 400 === 0);\r\n  g_days_in_month[1] = isLeapYear ? 29 : 28;\r\n  \r\n  // Convert to days since Gregorian epoch\r\n  let dayOfYear = gd;\r\n  for (let i = 0; i < gm - 1; i++) {\r\n    dayOfYear += g_days_in_month[i];\r\n  }\r\n  \r\n  // Calculate Julian day number\r\n  const jdn = Math.floor((gy + Math.floor((gm - 8) / 6) + 100100) * 1461 / 4)\r\n            + Math.floor(((gm + 9) % 12 + 1) * 153 / 5)\r\n            + gd - 34840408;\r\n  const d = jdn % 1461;\r\n  const jy = Math.floor(jdn / 1461) - 2820 + 474;\r\n  \r\n  // Calculate Jalali year\r\n  const jYear = jy;\r\n  \r\n  // Calculate Jalali month and day\r\n  let dayOfYearJalali = d;\r\n  if (dayOfYearJalali >= 366) {\r\n    dayOfYearJalali -= 366;\r\n    const yearsToAdd = Math.floor(dayOfYearJalali / 365);\r\n    dayOfYearJalali %= 365;\r\n  }\r\n  \r\n  let jMonth = 0;\r\n  let jDay = dayOfYearJalali;\r\n  \r\n  // Find month and day\r\n  while (jDay >= j_days_in_month[jMonth]) {\r\n    jDay -= j_days_in_month[jMonth];\r\n    jMonth++;\r\n  }\r\n  \r\n  return [jYear, jMonth + 1, jDay + 1];\r\n}\r\n\r\n/**\r\n * Converts Hijri date to Jalali date\r\n * \r\n * @param hy Hijri year\r\n * @param hm Hijri month (1-12)\r\n * @param hd Hijri day (1-30)\r\n * @returns Array [year, month, day] with Jalali date\r\n */\r\nexport function hijriToJalali(hy: number, hm: number, hd: number): [number, number, number] {\r\n  // First convert to Gregorian\r\n  const [gy, gm, gd] = hijriToGregorian(hy, hm, hd);\r\n  \r\n  // Then convert to Jalali\r\n  return gregorianToJalali(gy, gm, gd);\r\n}\r\n\r\n/**\r\n * Calculates Jalali date for a Hijri event in the current Persian year\r\n * \r\n * @param currentPersianYear Current Jalali/Persian year\r\n * @param hijriMonth Hijri month (1-12)\r\n * @param hijriDay Hijri day (1-30)\r\n * @returns Array [month, day] with Jalali date or null if the event doesn't occur in the current year\r\n */\r\nexport function getHijriEventDateInJalaliYear(currentPersianYear: number, hijriMonth: number, hijriDay: number): [number, number] | null {\r\n  // Get current date\r\n  const today = new Date();\r\n  \r\n  // Approximate current Hijri year (this is rough approximation, might be off by 1 year)\r\n  const currentHijriYear = Math.floor(currentPersianYear - 621.5 + 0.74 * (currentPersianYear - 621.5)) - 202;\r\n  \r\n  // Try current and next Hijri year (sometimes events span across Persian years)\r\n  for (let yearOffset = 0; yearOffset <= 1; yearOffset++) {\r\n    try {\r\n      const hijriYear = currentHijriYear + yearOffset;\r\n      \r\n      // Get Jalali date for this Hijri event\r\n      const [jYear, jMonth, jDay] = hijriToJalali(hijriYear, hijriMonth, hijriDay);\r\n      \r\n      // Check if the event falls in the requested Persian year\r\n      if (jYear === currentPersianYear) {\r\n        return [jMonth, jDay];\r\n      }\r\n    } catch (error) {\r\n      // Skip any conversion errors and continue\r\n      console.warn(`Error converting Hijri date (${currentHijriYear}, ${hijriMonth}, ${hijriDay})`, error);\r\n    }\r\n  }\r\n  \r\n  // Event doesn't occur in the current Persian year\r\n  return null;\r\n}\r\n\r\n/**\r\n * Gets the estimated Hijri date (Islamic date) for today\r\n * \r\n * @returns An array of [year, month, day] for today's Hijri date\r\n */\r\nexport function getCurrentHijriDate(): [number, number, number] {\r\n  // Get today's Gregorian date\r\n  const today = new Date();\r\n  const gyear = today.getFullYear();\r\n  const gmonth = today.getMonth() + 1;\r\n  const gday = today.getDate();\r\n  \r\n  // Use approximate calculation based on mathematical estimation\r\n  // (This isn't perfectly accurate but works for most contemporary dates)\r\n  \r\n  // Julian date calculation\r\n  const jd = (1461 * (gyear + 4800 + (gmonth - 14) / 12)) / 4 +\r\n           (367 * (gmonth - 2 - 12 * ((gmonth - 14) / 12))) / 12 -\r\n           (3 * ((gyear + 4900 + (gmonth - 14) / 12) / 100)) / 4 +\r\n           gday - 32075;\r\n           \r\n  // Hijri date calculation\r\n  const l = Math.floor(jd) - 1948440 + 10632;\r\n  const n = Math.floor((l - 1) / 10631);\r\n  const l1 = l - 10631 * n + 354;\r\n  const j = (Math.floor((10985 - l1) / 5316)) * (Math.floor((50 * l1) / 17719)) + \r\n           (Math.floor(l1 / 5670)) * (Math.floor((43 * l1) / 15238));\r\n  const l2 = l1 - (Math.floor((30 - j) / 15)) * (Math.floor((17719 * j) / 50)) - \r\n           (Math.floor(j / 16)) * (Math.floor((15238 * j) / 43)) + 29;\r\n           \r\n  const hmonth = Math.floor((24 * l2) / 709);\r\n  const hday = l2 - Math.floor((709 * hmonth) / 24);\r\n  const hyear = 30 * n + j - 30;\r\n  \r\n  return [hyear, hmonth, hday];\r\n}\r\n\r\nexport default {\r\n  hijriToGregorian,\r\n  gregorianToJalali,\r\n  hijriToJalali,\r\n  getHijriEventDateInJalaliYear,\r\n  getCurrentHijriDate\r\n}; ","import { PersianEvent } from '../types';\r\nimport HijriUtils from './hijri-utils';\r\nimport { PersianDate } from '../persian-date';\r\n\r\n// Fallback events in case JSON loading fails\r\nconst fallbackEvents: PersianEvent[] = [];\r\n\r\n// Initialize empty events array\r\nlet mappedEvents: PersianEvent[] = [...fallbackEvents];\r\nlet persianCalendarData: any = {\r\n  \"Persian Calendar\": [],\r\n  \"Hijri Calendar\": [],\r\n  \"Source\": { \"name\": \"Fallback Data\", \"url\": \"\" }\r\n};\r\n\r\n// Add cache and loading state\r\nlet isLoading = false;\r\nlet lastFetchYear: number | null = null;\r\nlet fetchPromise: Promise<void> | null = null;\r\n\r\n/**\r\n * Maps events from the Persian Calendar repo format to our PersianEvent format\r\n */\r\nfunction mapPersianCalendarEvents(): PersianEvent[] {\r\n  try {\r\n    let allEvents: PersianEvent[] = [];\r\n    \r\n    // Process Persian Calendar events\r\n    if (persianCalendarData && Array.isArray(persianCalendarData[\"Persian Calendar\"])) {\r\n      const persianEvents = persianCalendarData[\"Persian Calendar\"].map((event: any) => ({\r\n        title: event.title,\r\n        month: event.month,\r\n        day: event.day,\r\n        type: event.type,\r\n        holiday: event.holiday\r\n      }));\r\n      \r\n      allEvents = [...persianEvents];\r\n    }\r\n    \r\n    // Process Hijri Calendar events\r\n    if (persianCalendarData && Array.isArray(persianCalendarData[\"Hijri Calendar\"])) {\r\n      const hijriEvents = persianCalendarData[\"Hijri Calendar\"].map((event: any) => {\r\n        // Convert Hijri date to Jalali\r\n        const jalaliDate = HijriUtils.hijriToJalali(\r\n          event.year,\r\n          event.month,\r\n          event.day\r\n        );\r\n        \r\n        return {\r\n          title: event.title,\r\n          month: jalaliDate[1],\r\n          day: jalaliDate[2],\r\n          type: event.type,\r\n          holiday: event.holiday,\r\n          hijri: {\r\n            year: event.year,\r\n            month: event.month,\r\n            day: event.day\r\n          }\r\n        };\r\n      });\r\n      \r\n      allEvents = [...allEvents, ...hijriEvents];\r\n    }\r\n    \r\n    return allEvents;\r\n  } catch (error) {\r\n    console.error('Error mapping calendar events:', error);\r\n    return [...fallbackEvents];\r\n  }\r\n}\r\n\r\n/**\r\n * Loads events data from the external JSON file\r\n */\r\nasync function loadEventsData(): Promise<void> {\r\n  // If already loading, return the existing promise\r\n  if (isLoading) {\r\n    return fetchPromise!;\r\n  }\r\n\r\n  // Get current year\r\n  const today = new Date();\r\n  const jalaliToday = PersianDate.gregorianToJalali(\r\n    today.getFullYear(),\r\n    today.getMonth() + 1,\r\n    today.getDate()\r\n  );\r\n  const currentYear = jalaliToday[0];\r\n\r\n  // If we already have data for this year, don't fetch again\r\n  if (lastFetchYear === currentYear) {\r\n    return;\r\n  }\r\n\r\n  isLoading = true;\r\n  \r\n  try {\r\n    // Try to load the events.json file\r\n    const response = await fetch('data/events.json');\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n    persianCalendarData = await response.json();\r\n    \r\n    // Update mapped events with the new data\r\n    const newEvents = mapPersianCalendarEvents();\r\n    mappedEvents = [...newEvents];\r\n    \r\n    // Update last fetch year\r\n    lastFetchYear = currentYear;\r\n  } catch (error) {\r\n    console.error('Error loading events data:', error);\r\n    // Keep using fallback events\r\n    mappedEvents = [...fallbackEvents];\r\n  } finally {\r\n    isLoading = false;\r\n    fetchPromise = null;\r\n  }\r\n}\r\n\r\n/**\r\n * Event utilities for working with Persian calendar events\r\n */\r\nexport const EventUtils = {\r\n  /**\r\n   * Returns all Persian calendar events mapped from the original JSON data\r\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Afghanistan', 'AncientIran', 'International'])\r\n   * @param includeAllTypes If true, includes all event types regardless of filtering\r\n   */\r\n  getAllEvents(eventTypes?: string[], includeAllTypes: boolean = false): PersianEvent[] {\r\n    let filteredEvents = [...mappedEvents];\r\n    \r\n    // If specific event types are provided and we're not including all types, filter by those types\r\n    if (eventTypes && eventTypes.length > 0 && !includeAllTypes) {\r\n      filteredEvents = filteredEvents.filter(event => eventTypes.includes(event.type));\r\n    }\r\n    \r\n    return filteredEvents;\r\n  },\r\n\r\n  /**\r\n   * Returns all events for a given month and day\r\n   * @param month The month number (1-12)\r\n   * @param day The day number (1-31)\r\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Afghanistan', 'AncientIran', 'International'])\r\n   * @param includeAllTypes If true, includes all event types regardless of filtering\r\n   */\r\n  getEvents(month: number, day: number, eventTypes?: string[], includeAllTypes: boolean = false): PersianEvent[] {\r\n    const events = this.getAllEvents(eventTypes, includeAllTypes);\r\n    return events.filter(event => \r\n      event.month === month && \r\n      event.day === day\r\n    );\r\n  },\r\n\r\n  /**\r\n   * Checks if the specified date is a holiday\r\n   * @param month The month number (1-12)\r\n   * @param day The day number (1-31)\r\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Afghanistan', 'AncientIran', 'International'])\r\n   * @param includeAllTypes If true, includes all event types regardless of filtering\r\n   */\r\n  isHoliday(month: number, day: number, eventTypes?: string[], includeAllTypes: boolean = false): boolean {\r\n    const events = this.getEvents(month, day, eventTypes, includeAllTypes);\r\n    return events.some(event => event.holiday === true);\r\n  },\r\n\r\n  /**\r\n   * Gets holiday event titles for a specific date\r\n   * @param month The month number (1-12)\r\n   * @param day The day number (1-31)\r\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Afghanistan', 'AncientIran', 'International'])\r\n   * @param includeAllTypes If true, includes all event types regardless of filtering\r\n   */\r\n  getHolidayTitles(month: number, day: number, eventTypes?: string[], includeAllTypes: boolean = false): string[] {\r\n    const events = this.getEvents(month, day, eventTypes, includeAllTypes);\r\n    return events\r\n      .filter(event => event.holiday === true)\r\n      .map(event => event.title);\r\n  },\r\n\r\n  /**\r\n   * Gets all event titles for a specific date\r\n   * @param month The month number (1-12)\r\n   * @param day The day number (1-31)\r\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Afghanistan', 'AncientIran', 'International'])\r\n   * @param includeAllTypes If true, includes all event types regardless of filtering\r\n   */\r\n  getAllEventTitles(month: number, day: number, eventTypes?: string[], includeAllTypes: boolean = false): string[] {\r\n    const events = this.getEvents(month, day, eventTypes, includeAllTypes);\r\n    return events.map(event => event.title);\r\n  },\r\n  \r\n  /**\r\n   * Gets events of a specific type\r\n   * @param type The event type (e.g., 'Iran', 'Afghanistan', 'AncientIran', 'International')\r\n   * @param includeAllTypes If true, includes all event types\r\n   * @param holidaysOnly If true, only returns holiday events\r\n   */\r\n  getEventsByType(type: string, includeAllTypes: boolean = false, holidaysOnly: boolean = false): PersianEvent[] {\r\n    const events = includeAllTypes \r\n      ? mappedEvents \r\n      : mappedEvents.filter(event => event.type === type);\r\n    \r\n    return holidaysOnly \r\n      ? events.filter(event => event.holiday === true) \r\n      : events;\r\n  },\r\n  \r\n  /**\r\n   * Get all holidays\r\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Afghanistan', 'AncientIran', 'International'])\r\n   * @param includeAllTypes If true, includes all event types regardless of filtering\r\n   */\r\n  getAllHolidays(eventTypes?: string[], includeAllTypes: boolean = false): PersianEvent[] {\r\n    const events = this.getAllEvents(eventTypes, includeAllTypes);\r\n    return events.filter(event => event.holiday === true);\r\n  },\r\n\r\n  /**\r\n   * Get available event types\r\n   */\r\n  getEventTypes(): string[] {\r\n    const types = new Set<string>();\r\n    mappedEvents.forEach(event => types.add(event.type));\r\n    return Array.from(types);\r\n  },\r\n\r\n  /**\r\n   * Get the source data metadata\r\n   */\r\n  getSourceMetadata(): { [key: string]: string } {\r\n    return persianCalendarData.Source || {};\r\n  },\r\n  \r\n  /**\r\n   * Initialize the events data by loading from external JSON\r\n   */\r\n  async initialize(): Promise<void> {\r\n    await loadEventsData();\r\n  },\r\n\r\n  /**\r\n   * Refresh the events data to update Hijri calendar events for the current year\r\n   * This should be called when the component is initialized or the year changes\r\n   */\r\n  async refreshEvents(): Promise<PersianEvent[]> {\r\n    // Only refresh if we don't have data for the current year\r\n    const today = new Date();\r\n    const jalaliToday = PersianDate.gregorianToJalali(\r\n      today.getFullYear(),\r\n      today.getMonth() + 1,\r\n      today.getDate()\r\n    );\r\n    const currentYear = jalaliToday[0];\r\n\r\n    if (lastFetchYear !== currentYear) {\r\n      await loadEventsData();\r\n    }\r\n    \r\n    return [...mappedEvents];\r\n  }\r\n};\r\n\r\nexport default EventUtils; ","import { PersianDate } from './persian-date';\r\nimport { EventUtils } from './utils/event-utils';\r\nimport { \r\n  PersianDatePickerElementOptions, \r\n  PersianDateChangeEvent,\r\n  DateTuple\r\n} from './types';\r\n\r\n// Complete CSS style definition with all variables\r\nconst styles = `:host {\r\n  /* Color scheme */\r\n  --jdp-primary: #0891b2;\r\n  --jdp-primary-hover: #0e7490;\r\n  --jdp-primary-foreground: #ffffff;\r\n  \r\n  /* Neutral colors */\r\n  --jdp-background: #ffffff;\r\n  --jdp-foreground: #1e293b;\r\n  --jdp-muted: #f1f5f9;\r\n  --jdp-muted-foreground: #64748b;\r\n  --jdp-border: #e2e8f0;\r\n  --jdp-ring: #0284c7;\r\n  \r\n  /* Holiday colors */\r\n  --jdp-holiday-color: #ef4444;\r\n  --jdp-holiday-bg: #fee2e2;\r\n  --jdp-holiday-hover-bg: #fecaca;\r\n  \r\n  /* Range selection colors */\r\n  --jdp-range-bg: rgba(8, 145, 178, 0.1);\r\n  --jdp-range-color: var(--jdp-foreground);\r\n  --jdp-range-start-bg: var(--jdp-primary);\r\n  --jdp-range-start-color: var(--jdp-primary-foreground);\r\n  --jdp-range-end-bg: var(--jdp-primary);\r\n  --jdp-range-end-color: var(--jdp-primary-foreground);\r\n  \r\n  /* Typography */\r\n  --jdp-font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\r\n  --jdp-font-size: 14px;\r\n  --jdp-line-height: 1.5;\r\n  --jdp-font-weight: 400;\r\n  --jdp-font-weight-medium: 500;\r\n  --jdp-day-name-font-size: 12px;\r\n  --jdp-day-name-font-weight: 400;\r\n  --jdp-day-font-size: 13px;\r\n  --jdp-day-font-weight: 400;\r\n  --jdp-month-year-font-size: 14px;\r\n  --jdp-month-year-font-weight: 500;\r\n  \r\n  /* Spacing */\r\n  --jdp-spacing-xs: 4px;\r\n  --jdp-spacing-sm: 8px;\r\n  --jdp-spacing-md: 16px;\r\n  --jdp-spacing-lg: 24px;\r\n  \r\n  /* Input field */\r\n  --jdp-input-padding-x: 14px;\r\n  --jdp-input-padding-y: 10px;\r\n  --jdp-input-border-width: 1px;\r\n  --jdp-input-border-color: var(--jdp-border);\r\n  --jdp-input-border-radius: var(--jdp-border-radius);\r\n  --jdp-input-focus-ring-width: 2px;\r\n  --jdp-input-focus-ring-color: rgba(2, 132, 199, 0.25);\r\n  \r\n  /* Calendar popup */\r\n  --jdp-calendar-width: 280px;\r\n  --jdp-calendar-padding: var(--jdp-spacing-md);\r\n  --jdp-calendar-border-width: 1px;\r\n  --jdp-calendar-border-color: var(--jdp-border);\r\n  --jdp-calendar-border-radius: var(--jdp-border-radius);\r\n  --jdp-calendar-shadow: 0px 10px 38px -10px rgba(22, 23, 24, 0.35), 0px 10px 20px -15px rgba(22, 23, 24, 0.2);\r\n  --jdp-calendar-z-index: 10;\r\n  \r\n  /* Navigation buttons */\r\n  --jdp-nav-button-size: 30px;\r\n  --jdp-nav-button-bg: var(--jdp-muted);\r\n  --jdp-nav-button-bg-hover: var(--jdp-border);\r\n  --jdp-nav-button-border-radius: var(--jdp-border-radius);\r\n  --jdp-nav-arrow-size: 8px;\r\n  --jdp-nav-arrow-thickness: 2px;\r\n  --jdp-nav-arrow-color: var(--jdp-foreground);\r\n  \r\n  /* Day grid */\r\n  --jdp-day-cell-size: 32px;\r\n  --jdp-day-cell-margin: 1px;\r\n  --jdp-day-cell-border-radius: var(--jdp-border-radius);\r\n  \r\n  /* States */\r\n  --jdp-day-hover-bg: var(--jdp-muted);\r\n  --jdp-day-selected-bg: var(--jdp-primary);\r\n  --jdp-day-selected-color: var(--jdp-primary-foreground);\r\n  --jdp-day-today-border-color: var(--jdp-primary);\r\n  --jdp-day-today-border-width: 1px;\r\n  --jdp-day-disabled-opacity: 0.4;\r\n  \r\n  /* Animations */\r\n  --jdp-transition-duration: 0.2s;\r\n  --jdp-fade-from-y: -4px;\r\n  --jdp-fade-from-y-reverse: 4px;\r\n  --jdp-month-transition-duration: 0.3s;\r\n  \r\n  /* Layout */\r\n  --jdp-border-radius: 0.5rem;\r\n  --jdp-direction: rtl;\r\n  --jdp-header-gap: var(--jdp-spacing-xs);\r\n\r\n  /* Select boxes - default values that can be overridden */\r\n  --jdp-select-container-gap: 8px;\r\n  --jdp-select-trigger-height: var(--jdp-nav-button-size);\r\n  --jdp-select-trigger-bg: var(--jdp-muted);\r\n  --jdp-select-trigger-max-width: 110px;\r\n  --jdp-select-month-trigger-max-width: var(--jdp-select-trigger-max-width);\r\n  --jdp-select-year-trigger-max-width: var(--jdp-select-trigger-max-width);\r\n  --jdp-select-dropdown-width: auto;\r\n  --jdp-select-text-overflow: ellipsis;\r\n  \r\n  /* Scrollbar styling - thin and subtle */\r\n  --jdp-scrollbar-width: 4px;\r\n  --jdp-scrollbar-track: transparent;\r\n  --jdp-scrollbar-thumb: rgba(0, 0, 0, 0.15);\r\n  --jdp-scrollbar-thumb-hover: rgba(0, 0, 0, 0.25);\r\n  --jdp-scrollbar-border-radius: 4px;\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  direction: var(--jdp-direction);\r\n}\r\n\r\n.picker-container {\r\n  position: relative;\r\n  display: inline-block;\r\n  width: 100%;\r\n  font-family: var(--jdp-font-family);\r\n  font-size: var(--jdp-font-size);\r\n  line-height: var(--jdp-line-height);\r\n  font-weight: var(--jdp-font-weight);\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: var(--jdp-input-padding-y) var(--jdp-input-padding-x);\r\n  border-radius: var(--jdp-input-border-radius);\r\n  border: var(--jdp-input-border-width) solid var(--jdp-input-border-color);\r\n  font-size: var(--jdp-font-size);\r\n  line-height: var(--jdp-line-height);\r\n  font-family: inherit;\r\n  background-color: var(--jdp-background);\r\n  color: var(--jdp-foreground);\r\n  cursor: pointer;\r\n  outline: none;\r\n  transition: all var(--jdp-transition-duration) ease;\r\n  text-align: right;\r\n}\r\n\r\ninput:focus {\r\n  border-color: var(--jdp-ring);\r\n  box-shadow: 0 0 0 var(--jdp-input-focus-ring-width) var(--jdp-input-focus-ring-color);\r\n}\r\n\r\n.calendar {\r\n  display: none;\r\n  position: absolute;\r\n  right: 0;\r\n  width: var(--jdp-calendar-width);\r\n  background: var(--jdp-background);\r\n  border: var(--jdp-calendar-border-width) solid var(--jdp-calendar-border-color);\r\n  border-radius: var(--jdp-calendar-border-radius);\r\n  box-shadow: var(--jdp-calendar-shadow);\r\n  padding: var(--jdp-calendar-padding);\r\n  text-align: center;\r\n  z-index: var(--jdp-calendar-z-index);\r\n  touch-action: manipulation;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n  transform: translateZ(0);\r\n  will-change: transform;\r\n  backface-visibility: hidden;\r\n  contain: layout style;\r\n}\r\n\r\n.calendar.position-bottom {\r\n  top: calc(100% + 5px);\r\n  animation: fadeInFromTop var(--jdp-transition-duration) ease;\r\n}\r\n\r\n.calendar.position-top {\r\n  bottom: calc(100% + 5px);\r\n  animation: fadeInFromBottom var(--jdp-transition-duration) ease;\r\n}\r\n\r\n.calendar.visible {\r\n  display: block;\r\n}\r\n\r\n@keyframes fadeInFromTop {\r\n  from { opacity: 0; transform: translateY(var(--jdp-fade-from-y)); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n@keyframes fadeInFromBottom {\r\n  from { opacity: 0; transform: translateY(var(--jdp-fade-from-y-reverse)); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n.header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: var(--jdp-spacing-md);\r\n  gap: var(--jdp-header-gap, var(--jdp-spacing-xs));\r\n}\r\n\r\n.month-year {\r\n  font-weight: var(--jdp-month-year-font-weight);\r\n  font-size: var(--jdp-month-year-font-size);\r\n  color: var(--jdp-foreground);\r\n  transition: opacity var(--jdp-transition-duration) ease;\r\n}\r\n\r\n.month-year.fade {\r\n  opacity: 0;\r\n}\r\n\r\n.days-wrapper {\r\n  position: relative;\r\n  touch-action: pan-y;\r\n  overflow: visible;\r\n  z-index: 1;\r\n  contain: layout;\r\n  isolation: isolate;\r\n}\r\n\r\n.days {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  transition: transform var(--jdp-month-transition-duration) ease, opacity var(--jdp-month-transition-duration) ease;\r\n  will-change: transform, opacity;\r\n  transform: translateZ(0);\r\n  backface-visibility: hidden;\r\n  position: relative;\r\n  contain: layout;\r\n}\r\n\r\n.days.slide-left {\r\n  animation: slideInLeft var(--jdp-month-transition-duration) ease;\r\n}\r\n\r\n.days.slide-right {\r\n  animation: slideInRight var(--jdp-month-transition-duration) ease;\r\n}\r\n\r\n@keyframes slideInLeft {\r\n  from { \r\n    opacity: 0; \r\n    transform: translateX(-10%) translateZ(0);\r\n    pointer-events: none;\r\n  }\r\n  to { \r\n    opacity: 1; \r\n    transform: translateX(0) translateZ(0);\r\n    pointer-events: auto;\r\n  }\r\n}\r\n\r\n@keyframes slideInRight {\r\n  from { \r\n    opacity: 0; \r\n    transform: translateX(10%) translateZ(0); \r\n    pointer-events: none;\r\n  }\r\n  to { \r\n    opacity: 1; \r\n    transform: translateX(0) translateZ(0);\r\n    pointer-events: auto;\r\n  }\r\n}\r\n\r\n.day {\r\n  position: relative;\r\n  z-index: 1;\r\n  touch-action: manipulation;\r\n  isolation: isolate;\r\n}\r\n\r\n.day:hover {\r\n  z-index: 2;\r\n}\r\n\r\n.nav-button {\r\n  background: var(--jdp-nav-button-bg);\r\n  border: none;\r\n  border-radius: var(--jdp-nav-button-border-radius);\r\n  width: var(--jdp-nav-button-size);\r\n  height: var(--jdp-nav-button-size);\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transition: all var(--jdp-transition-duration) ease;\r\n  position: relative;\r\n  touch-action: manipulation;\r\n  will-change: transform, background-color;\r\n}\r\n\r\n.nav-button:hover {\r\n  background: var(--jdp-nav-button-bg-hover);\r\n}\r\n\r\n.nav-button:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n.nav-button::before {\r\n  content: '';\r\n  display: block;\r\n  width: var(--jdp-nav-arrow-size);\r\n  height: var(--jdp-nav-arrow-size);\r\n  border-top: var(--jdp-nav-arrow-thickness) solid var(--jdp-nav-arrow-color);\r\n  border-right: var(--jdp-nav-arrow-thickness) solid var(--jdp-nav-arrow-color);\r\n  position: absolute;\r\n}\r\n\r\n.nav-button.prev::before {\r\n  transform: rotate(45deg);\r\n  right: 11px;\r\n  left: auto;\r\n}\r\n\r\n.nav-button.next::before {\r\n  transform: rotate(225deg);\r\n  left: 11px;\r\n  right: auto;\r\n}\r\n\r\n.day-names {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n  margin-bottom: var(--jdp-spacing-sm);\r\n}\r\n\r\n.day-name {\r\n  font-size: var(--jdp-day-name-font-size);\r\n  font-weight: var(--jdp-day-name-font-weight);\r\n  color: var(--jdp-muted-foreground);\r\n  padding: var(--jdp-spacing-xs) 0;\r\n  text-align: center;\r\n}\r\n\r\n.day {\r\n  aspect-ratio: 1/1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: var(--jdp-day-cell-border-radius);\r\n  font-size: var(--jdp-day-font-size);\r\n  font-weight: var(--jdp-day-font-weight);\r\n  cursor: pointer;\r\n  transition: var(--jdp-transition-duration) ease;\r\n  margin: var(--jdp-day-cell-margin);\r\n  position: relative;\r\n  touch-action: manipulation;\r\n  -webkit-tap-highlight-color: transparent;\r\n  -webkit-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n.day:hover:not(.empty):not(.disabled) {\r\n  background: var(--jdp-day-hover-bg);\r\n}\r\n\r\n.day.selected {\r\n  background: var(--jdp-day-selected-bg);\r\n  color: var(--jdp-day-selected-color);\r\n}\r\n\r\n.day.today:not(.selected) {\r\n  border: var(--jdp-day-today-border-width) solid var(--jdp-day-today-border-color);\r\n}\r\n\r\n.day.empty {\r\n  cursor: default;\r\n}\r\n\r\n.day.disabled {\r\n  opacity: var(--jdp-day-disabled-opacity);\r\n  cursor: not-allowed;\r\n}\r\n\r\n/* Holiday styles */\r\n.day.holiday:not(.selected) {\r\n  color: var(--jdp-holiday-color);\r\n  background-color: var(--jdp-holiday-bg);\r\n  font-weight: var(--jdp-font-weight-medium);\r\n}\r\n\r\n.day.holiday:hover:not(.selected):not(.disabled) {\r\n  background-color: var(--jdp-holiday-hover-bg);\r\n}\r\n\r\n/* Special styling for holidays within a range */\r\n.day.holiday.in-range {\r\n  background-color: var(--jdp-range-bg);\r\n  color: var(--jdp-range-color);\r\n}\r\n\r\n.day.holiday.range-start,\r\n.day.holiday.range-end {\r\n  background-color: var(--jdp-range-start-bg);\r\n  color: var(--jdp-range-start-color);\r\n}\r\n\r\n.day.friday {\r\n  color: var(--jdp-holiday-color);\r\n}\r\n\r\n.event-tooltip {\r\n  position: absolute;\r\n  background: var(--jdp-background);\r\n  border: 1px solid var(--jdp-border);\r\n  border-radius: var(--jdp-border-radius);\r\n  padding: var(--jdp-spacing-sm);\r\n  width: 200px;\r\n  box-shadow: var(--jdp-calendar-shadow);\r\n  text-align: right;\r\n  font-size: 12px;\r\n  opacity: 0;\r\n  visibility: hidden;\r\n  transition: opacity var(--jdp-transition-duration) ease, visibility var(--jdp-transition-duration) ease;\r\n  pointer-events: none;\r\n  bottom: 120%;\r\n  right: 0;\r\n  transform: translateY(-5px);\r\n  z-index: 9999;\r\n}\r\n\r\n.event-tooltip.tooltip-visible {\r\n  opacity: 1;\r\n  visibility: visible;\r\n  pointer-events: auto;\r\n  background: var(--jdp-background);\r\n}\r\n\r\n/* Mobile-specific tooltip positioning */\r\n@media (max-width: 768px) {\r\n  .event-tooltip {\r\n    position: fixed;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n    width: 90%;\r\n    max-width: 300px;\r\n    max-height: 80vh;\r\n    overflow-y: auto;\r\n    bottom: auto;\r\n    right: auto;\r\n    background: var(--jdp-background);\r\n    z-index: 9999;\r\n  }\r\n\r\n  .event-tooltip::before {\r\n    content: '';\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    z-index: -1;\r\n  }\r\n}\r\n\r\n.event-item {\r\n  margin-bottom: 4px;\r\n  padding-bottom: 4px;\r\n  border-bottom: 1px solid var(--jdp-border);\r\n  color: var(--jdp-foreground);\r\n  background: var(--jdp-background);\r\n}\r\n\r\n.event-item:last-child {\r\n  margin-bottom: 0;\r\n  padding-bottom: 0;\r\n  border-bottom: none;\r\n}\r\n\r\n.event-item.holiday {\r\n  color: var(--jdp-holiday-color);\r\n}\r\n\r\n.event-type-label {\r\n  display: inline-block;\r\n  font-size: 10px;\r\n  padding: 1px 4px;\r\n  border-radius: 3px;\r\n  margin-right: 4px;\r\n  background-color: var(--jdp-muted);\r\n  color: var(--jdp-muted-foreground);\r\n}\r\n\r\n/* Today button styling */\r\n.footer {\r\n  margin-top: var(--jdp-spacing-md);\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.date-nav-button {\r\n  background: var(--jdp-muted);\r\n  border: none;\r\n  border-radius: var(--jdp-border-radius);\r\n  padding: var(--jdp-spacing-xs) var(--jdp-spacing-md);\r\n  font-family: inherit;\r\n  font-size: var(--jdp-font-size);\r\n  color: var(--jdp-foreground);\r\n  cursor: pointer;\r\n  transition: all var(--jdp-transition-duration) ease;\r\n  touch-action: manipulation;\r\n  -webkit-tap-highlight-color: transparent;\r\n}\r\n\r\n.date-nav-button:hover {\r\n  background: var(--jdp-nav-button-bg-hover);\r\n}\r\n\r\n.date-nav-button:active {\r\n  transform: translateY(1px);\r\n}\r\n\r\n/* Month/Year selectors - scoped to the component */\r\n:host .selectors-container {\r\n  display: flex;\r\n  gap: var(--jdp-select-container-gap, 8px);\r\n  position: relative;\r\n  align-items: var(--jdp-select-container-align, center);\r\n  justify-content: var(--jdp-select-container-justify, space-between);\r\n  width: 100%;\r\n  max-width: calc(100% - var(--jdp-nav-button-size) * 2 - var(--jdp-spacing-sm));\r\n  margin: 0 var(--jdp-spacing-xs);\r\n}\r\n\r\n:host .custom-select {\r\n  position: relative;\r\n  user-select: none;\r\n  width: 100%;\r\n  margin: 0 var(--jdp-spacing-xs, 2px);\r\n}\r\n\r\n:host .month-select {\r\n  margin-left: var(--jdp-month-select-margin-left, 0);\r\n  margin-right: var(--jdp-month-select-margin-right, 0);\r\n}\r\n\r\n:host .year-select {\r\n  margin-left: var(--jdp-year-select-margin-left, 0);\r\n  margin-right: var(--jdp-year-select-margin-right, 0);\r\n}\r\n\r\n:host .select-trigger {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: var(--jdp-select-trigger-justify, center);\r\n  gap: 0 4px;\r\n  width: 100%;\r\n  height: var(--jdp-select-trigger-height, var(--jdp-nav-button-size));\r\n  min-height: var(--jdp-nav-button-size);\r\n  background-color: var(--jdp-select-trigger-bg, var(--jdp-muted));\r\n  border: var(--jdp-select-trigger-border-width, 1px) solid var(--jdp-select-trigger-border-color, var(--jdp-border));\r\n  border-radius: var(--jdp-select-trigger-border-radius, var(--jdp-border-radius));\r\n  color: var(--jdp-select-trigger-color, var(--jdp-foreground));\r\n  font-family: inherit;\r\n  font-size: var(--jdp-select-trigger-font-size, var(--jdp-font-size));\r\n  line-height: 1;\r\n  padding: 0 var(--jdp-select-trigger-padding-x, 0);\r\n  cursor: pointer;\r\n  transition: all var(--jdp-transition-duration) ease;\r\n  text-align: var(--jdp-select-trigger-text-align, center);\r\n  min-width: var(--jdp-select-trigger-min-width, initial);\r\n  outline: none;\r\n  font-weight: var(--jdp-select-trigger-font-weight, 500);\r\n  box-sizing: border-box;\r\n  max-width: var(--jdp-select-trigger-max-width, 110px);\r\n}\r\n\r\n:host .month-select .select-trigger {\r\n  max-width: var(--jdp-select-month-trigger-max-width, var(--jdp-select-trigger-max-width));\r\n}\r\n\r\n:host .year-select .select-trigger {\r\n  max-width: var(--jdp-select-year-trigger-max-width, var(--jdp-select-trigger-max-width));\r\n}\r\n\r\n:host .select-trigger span:first-child {\r\n  white-space: nowrap;\r\n  overflow: var(--jdp-select-trigger-overflow, visible);\r\n  text-overflow: var(--jdp-select-text-overflow, ellipsis);\r\n  max-width: calc(100% - 24px);\r\n  display: inline-block;\r\n  text-align: center;\r\n  flex: 1;\r\n}\r\n\r\n:host .select-trigger:hover {\r\n  background-color: var(--jdp-select-trigger-bg-hover, rgba(0, 0, 0, 0.05));\r\n  border-color: var(--jdp-select-trigger-border-hover, var(--jdp-border));\r\n}\r\n\r\n:host .select-trigger:focus-visible {\r\n  outline: 2px solid var(--jdp-select-trigger-focus-ring-color, var(--jdp-ring));\r\n  outline-offset: var(--jdp-select-trigger-focus-ring-offset, 2px);\r\n}\r\n\r\n:host .select-icon {\r\n  margin-left: var(--jdp-select-icon-margin, var(--jdp-spacing-xs));\r\n  display: var(--jdp-select-icon-display, none);\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: transform 0.2s ease;\r\n  width: var(--jdp-select-icon-size, 12px);\r\n  height: var(--jdp-select-icon-size, 12px);\r\n  opacity: var(--jdp-select-icon-opacity, 0.7);\r\n  flex-shrink: 0;\r\n}\r\n\r\n:host .select-icon svg {\r\n  width: var(--jdp-select-icon-size, 12px);\r\n  height: var(--jdp-select-icon-size, 12px);\r\n}\r\n\r\n:host .select-content.open .select-icon {\r\n  transform: rotate(180deg);\r\n}\r\n\r\n:host .select-content {\r\n  position: var(--jdp-select-content-position, absolute);\r\n  top: calc(100% + var(--jdp-select-content-top-offset, 5px));\r\n  left: 0;\r\n  width: var(--jdp-select-dropdown-width, 100%);\r\n  min-width: 100%;\r\n  background-color: var(--jdp-select-content-bg, var(--jdp-background));\r\n  border: var(--jdp-select-content-border-width, 1px) solid var(--jdp-select-content-border-color, var(--jdp-border));\r\n  border-radius: var(--jdp-select-content-border-radius, var(--jdp-border-radius));\r\n  box-shadow: var(--jdp-select-content-shadow, 0 4px 8px rgba(0,0,0,0.1));\r\n  z-index: var(--jdp-select-content-z-index, 20);\r\n  overflow-y: auto;\r\n  max-height: var(--jdp-select-content-max-height, 200px);\r\n  display: none;\r\n  padding: var(--jdp-select-content-padding-y, 0.25rem) var(--jdp-select-content-padding-x, 0);\r\n  scroll-behavior: smooth;\r\n  \r\n  /* Custom scrollbar styling */\r\n  scrollbar-width: var(--jdp-scrollbar-width-size, none);\r\n  scrollbar-color: var(--jdp-scrollbar-thumb, rgba(0, 0, 0, 0.15)) var(--jdp-scrollbar-track, transparent);\r\n}\r\n\r\n/* Webkit-based browsers (Chrome, Safari, Edge) */\r\n:host .select-content::-webkit-scrollbar {\r\n  width: var(--jdp-scrollbar-width, 4px);\r\n}\r\n\r\n:host .select-content::-webkit-scrollbar-track {\r\n  background: var(--jdp-scrollbar-track, transparent);\r\n  border-radius: var(--jdp-scrollbar-border-radius, 4px);\r\n}\r\n\r\n:host .select-content::-webkit-scrollbar-thumb {\r\n  background-color: var(--jdp-scrollbar-thumb, rgba(0, 0, 0, 0.15));\r\n  border-radius: var(--jdp-scrollbar-border-radius, 4px);\r\n}\r\n\r\n:host .select-content::-webkit-scrollbar-thumb:hover {\r\n  background-color: var(--jdp-scrollbar-thumb-hover, rgba(0, 0, 0, 0.25));\r\n}\r\n\r\n:host .select-content.open {\r\n  display: block;\r\n  animation: fadeInSelect var(--jdp-select-content-animation-duration, var(--jdp-transition-duration)) ease;\r\n}\r\n\r\n:host .month-select-content {\r\n  width: var(--jdp-select-month-width, var(--jdp-select-dropdown-width, auto));\r\n  min-width: 100%;\r\n}\r\n\r\n:host .year-select-content {\r\n  width: var(--jdp-select-year-width, var(--jdp-select-dropdown-width, auto));\r\n  min-width: 100%;\r\n}\r\n\r\n:host .select-item {\r\n  padding: var(--jdp-select-item-padding-y, 0.5rem) var(--jdp-select-item-padding-x, 0.75rem);\r\n  cursor: pointer;\r\n  transition: background-color var(--jdp-transition-duration) ease;\r\n  border-radius: var(--jdp-select-item-border-radius, var(--jdp-select-trigger-border-radius, var(--jdp-border-radius)));\r\n  margin: var(--jdp-select-item-margin, 0 0.25rem);\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  max-width: var(--jdp-select-item-max-width, 100%);\r\n  box-sizing: border-box;\r\n  text-align: var(--jdp-select-item-text-align, center);\r\n}\r\n\r\n:host .select-item:hover {\r\n  background-color: var(--jdp-select-item-hover-bg, var(--jdp-day-hover-bg));\r\n}\r\n\r\n:host .select-item.selected {\r\n  background-color: var(--jdp-select-item-selected-bg, var(--jdp-primary));\r\n  color: var(--jdp-select-item-selected-color, var(--jdp-primary-foreground));\r\n  font-weight: var(--jdp-select-item-selected-font-weight, var(--jdp-font-weight-medium));\r\n  border-radius: var(--jdp-select-item-selected-border-radius, var(--jdp-select-trigger-border-radius, var(--jdp-border-radius)));\r\n}\r\n\r\n@keyframes fadeInSelect {\r\n  from { opacity: 0; transform: translateY(-5px); }\r\n  to { opacity: 1; transform: translateY(0); }\r\n}\r\n\r\n/* RTL specific styles */\r\n:host([rtl=\"true\"]) .select-icon,\r\n:host([dir=\"rtl\"]) .select-icon {\r\n  margin-left: 0;\r\n  margin-right: var(--jdp-select-icon-margin, var(--jdp-spacing-xs));\r\n}\r\n\r\n:host([rtl=\"true\"]) .select-item,\r\n:host([dir=\"rtl\"]) .select-item {\r\n  text-align: var(--jdp-select-item-text-align, right);\r\n}\r\n\r\n/* Dark mode support using CSS media query for scrollbar */\r\n@media (prefers-color-scheme: dark) {\r\n  :host {\r\n    --jdp-scrollbar-thumb: rgba(124, 124, 124, 0.15);\r\n    --jdp-scrollbar-thumb-hover: rgba(41, 41, 41, 0.25);\r\n  }\r\n}\r\n\r\n/* Allow manual dark mode toggle via class-based approach */\r\n:host(.dark-theme) {\r\n    --jdp-scrollbar-thumb: rgba(124, 124, 124, 0.15);\r\n    --jdp-scrollbar-thumb-hover: rgba(41, 41, 41, 0.25);\r\n}\r\n\r\n/* Range selection styles */\r\n.day.in-range {\r\n  background-color: var(--jdp-range-bg);\r\n  color: var(--jdp-range-color);\r\n  position: relative;\r\n  z-index: 1;\r\n}\r\n\r\n.day.range-start,\r\n.day.range-end {\r\n  background-color: var(--jdp-range-start-bg);\r\n  color: var(--jdp-range-start-color);\r\n  position: relative;\r\n  z-index: 2;\r\n}\r\n\r\n.day.range-start {\r\n  border-radius: var(--jdp-border-radius) 0 0 var(--jdp-border-radius);\r\n}\r\n\r\n.day.range-end {\r\n  border-radius: 0 var(--jdp-border-radius) var(--jdp-border-radius) 0;\r\n}\r\n\r\n/* RTL specific range styles */\r\n:host([rtl=\"true\"]) .day.range-start,\r\n:host([dir=\"rtl\"]) .day.range-start {\r\n  border-radius: 0 var(--jdp-border-radius) var(--jdp-border-radius) 0;\r\n}\r\n\r\n:host([rtl=\"true\"]) .day.range-end,\r\n:host([dir=\"rtl\"]) .day.range-end {\r\n  border-radius: var(--jdp-border-radius) 0 0 var(--jdp-border-radius);\r\n}\r\n\r\n/* Special handling for single day range */\r\n.day.range-start.range-end {\r\n  border-radius: var(--jdp-border-radius);\r\n}\r\n\r\n/* Ensure range styles take precedence over other styles */\r\n.day.in-range:not(.range-start):not(.range-end) {\r\n  background-color: var(--jdp-range-bg);\r\n  color: var(--jdp-range-color);\r\n}\r\n\r\n/* Handle disabled dates in range */\r\n.day.disabled.in-range {\r\n  opacity: 0.4;\r\n  background-color: var(--jdp-range-bg);\r\n  color: var(--jdp-range-color);\r\n}\r\n\r\n/* Handle holidays in range */\r\n.day.holiday.in-range:not(.range-start):not(.range-end) {\r\n  background-color: var(--jdp-range-bg);\r\n  color: var(--jdp-range-color);\r\n}\r\n\r\n.day.holiday.range-start,\r\n.day.holiday.range-end {\r\n  background-color: var(--jdp-range-start-bg);\r\n  color: var(--jdp-range-start-color);\r\n}\r\n`;\r\n\r\n// Default holiday types\r\nconst DEFAULT_HOLIDAY_TYPES = ['Iran','AncientIran', 'International'];\r\n\r\n/**\r\n * Jalali Date Picker Web Component\r\n * \r\n * A customizable date picker that follows the Jalali (Persian) calendar.\r\n * Features include:\r\n * - Month and year dropdown navigation with 150-year range\r\n * - Quick today and tomorrow navigation buttons\r\n * - Touch gesture support for swiping between months\r\n * - Holiday highlighting with customizable types\r\n * - Full RTL support\r\n * - Customizable styling with global CSS variables\r\n * - Shadcn-like UI with ability to toggle visibility of UI elements\r\n * - Consistent UI sizing with properly aligned select boxes and buttons\r\n * \r\n * Usage:\r\n * ```html\r\n * <!-- Basic usage -->\r\n * <persian-datepicker-element></persian-datepicker-element>\r\n * \r\n * <!-- With attributes -->\r\n * <persian-datepicker-element placeholder=\"انتخاب تاریخ\" format=\"YYYY/MM/DD\"></persian-datepicker-element>\r\n * \r\n * <!-- With holiday types -->\r\n * <persian-datepicker-element holiday-types=\"Iran,Afghanistan,AncientIran,International\"></persian-datepicker-element>\r\n * \r\n * <!-- With all holiday types -->\r\n * <persian-datepicker-element holiday-types=\"all\"></persian-datepicker-element>\r\n * \r\n * <!-- With custom Today button text -->\r\n * <persian-datepicker-element today-button-text=\"Go to Today\"></persian-datepicker-element>\r\n * \r\n * <!-- With custom Tomorrow button text -->\r\n * <persian-datepicker-element tomorrow-button-text=\"Next Day\"></persian-datepicker-element>\r\n * \r\n * <!-- With custom button styling -->\r\n * <persian-datepicker-element today-button-class=\"primary rounded\" tomorrow-button-class=\"secondary rounded\"></persian-datepicker-element>\r\n * \r\n * <!-- With styling customization -->\r\n * <persian-datepicker-element style=\"--jdp-primary: #3b82f6; --jdp-font-family: 'Vazir', sans-serif;\"></persian-datepicker-element>\r\n *\r\n * <!-- Hiding specific UI elements -->\r\n * <persian-datepicker-element \r\n *   show-prev-button=\"false\"\r\n *   show-next-button=\"false\"\r\n *   show-tomorrow-button=\"false\"\r\n * ></persian-datepicker-element>\r\n * ```\r\n * \r\n * @element persian-datepicker-element\r\n * \r\n * @attr {string} placeholder - Placeholder text for the input field\r\n * @attr {string} format - Date format (e.g., \"YYYY/MM/DD\")\r\n * @attr {boolean} rtl - Whether to use RTL direction\r\n * @attr {boolean} show-holidays - Whether to highlight holidays\r\n * @attr {string} holiday-types - Comma-separated list of holiday types to display (e.g., \"Iran,Afghanistan,AncientIran,International\" or \"all\" to show all available types)\r\n * @attr {string} today-button-text - Custom text for the Today button (default: \"امروز\")\r\n * @attr {string} today-button-class - Additional CSS classes for the Today button\r\n * @attr {string} tomorrow-button-text - Custom text for the Tomorrow button (default: \"فردا\")\r\n * @attr {string} tomorrow-button-class - Additional CSS classes for the Tomorrow button\r\n * \r\n * @attr {boolean} show-month-selector - Whether to show the month selector (default: true)\r\n * @attr {boolean} show-year-selector - Whether to show the year selector (default: true)\r\n * @attr {boolean} show-prev-button - Whether to show the previous month button (default: true)\r\n * @attr {boolean} show-next-button - Whether to show the next month button (default: true)\r\n * @attr {boolean} show-today-button - Whether to show the Today button (default: true)\r\n * @attr {boolean} show-tomorrow-button - Whether to show the Tomorrow button (default: true)\r\n * \r\n * Styling:\r\n * The component can be styled using CSS variables. These can be set globally in your CSS\r\n * or directly on the element using the style attribute. See the component's CSS file\r\n * for the complete list of available CSS variables.\r\n */\r\nexport class PersianDatePickerElement extends HTMLElement {\r\n  // Private DOM elements\r\n  private input!: HTMLInputElement;\r\n  private calendar!: HTMLDivElement;\r\n  private daysContainer!: HTMLDivElement;\r\n  private dayNamesContainer!: HTMLDivElement;\r\n  \r\n  // Date state\r\n  private jalaliYear: number = 0;\r\n  private jalaliMonth: number = 0;\r\n  private jalaliDay: number = 0;\r\n  private selectedDate: DateTuple | null = null;\r\n  \r\n  // Range selection state\r\n  private isRangeMode: boolean = false;\r\n  private rangeStart: DateTuple | null = null;\r\n  private rangeEnd: DateTuple | null = null;\r\n  private isSelectingRange: boolean = false;\r\n  \r\n  // Configuration\r\n  private options: PersianDatePickerElementOptions;\r\n  private showHolidays: boolean = true;\r\n  private holidayTypes: string[] = [...DEFAULT_HOLIDAY_TYPES];\r\n  private includeAllTypes: boolean = false;\r\n  private isTransitioning: boolean = false;\r\n  private _documentClickHandler: EventListener = () => {};\r\n  \r\n  // Static property to track currently open calendar instance\r\n  private static openCalendarInstance: PersianDatePickerElement | null = null;\r\n  \r\n  // Persian month names - defined once to avoid recreation\r\n  private readonly persianMonths = [\r\n    \"فروردین\", \"اردیبهشت\", \"خرداد\", \"تیر\", \"مرداد\", \"شهریور\",\r\n    \"مهر\", \"آبان\", \"آذر\", \"دی\", \"بهمن\", \"اسفند\"\r\n  ];\r\n\r\n  // Add mapping for holiday type labels\r\n  private readonly holidayTypeLabels: { [key: string]: string } = {\r\n    'Iran': 'ایران',\r\n    'Afghanistan': 'افغانستان',\r\n    'AncientIran': 'ایران باستان',\r\n    'International': 'بین‌المللی'\r\n  };\r\n\r\n  // Add format and limits properties\r\n  private format: string = 'YYYY/MM/DD';\r\n  private minDate: DateTuple | null = null;\r\n  private maxDate: DateTuple | null = null;\r\n  private disabledDatesFn: ((year: number, month: number, day: number) => boolean) | null = null;\r\n\r\n  // Add helper function to convert numbers to Persian numerals\r\n  private toPersianNum(num: number | string): string {\r\n    const persianDigits = ['۰', '۱', '۲', '۳', '۴', '۵', '۶', '۷', '۸', '۹'];\r\n    return num.toString().replace(/\\d/g, x => persianDigits[parseInt(x)]);\r\n  }\r\n\r\n  static get observedAttributes() {\r\n    return [\r\n      'placeholder', \r\n      'rtl', \r\n      'format', \r\n      'show-holidays',\r\n      'holiday-types',\r\n      'today-button-text',\r\n      'today-button-class',\r\n      'tomorrow-button-text',\r\n      'tomorrow-button-class',\r\n      'min-date',\r\n      'max-date',\r\n      'disabled-dates',\r\n      'range-mode', // Add new attribute\r\n      // UI visibility props\r\n      'show-month-selector',\r\n      'show-year-selector',\r\n      'show-prev-button',\r\n      'show-next-button',\r\n      'show-today-button',\r\n      'show-tomorrow-button'\r\n    ];\r\n  }\r\n\r\n  constructor(options: PersianDatePickerElementOptions = {}) {\r\n    super();\r\n    this.options = options;\r\n    \r\n    // Create shadow DOM and render initial structure\r\n    const shadow = this.attachShadow({ mode: \"open\" });\r\n    this.render(shadow);\r\n    \r\n    // Set holiday types if provided in options\r\n    if (options.holidayTypes) {\r\n      this.setHolidayTypes(options.holidayTypes);\r\n    }\r\n  }\r\n\r\n  async connectedCallback() {\r\n    try {\r\n      if (!this.shadowRoot) {\r\n        console.error(\"Shadow root not available\");\r\n        return;\r\n      }\r\n\r\n      // Initialize DOM references\r\n      this.initializeDomReferences();\r\n      \r\n      // Initialize with today's date\r\n      this.initializeCurrentDate();\r\n      \r\n      // Initialize events data\r\n      await EventUtils.initialize();\r\n      \r\n      // Setup initial UI components\r\n      this.initializeUIComponents();\r\n      \r\n      // Set up event listeners\r\n      this.addEventListeners();\r\n      \r\n      // Initialize touch gesture support\r\n      this.initTouchGestures();\r\n      \r\n      // Update the UI with the current date\r\n      this.renderCalendar();\r\n    } catch (error) {\r\n      console.error(\"Error in connectedCallback:\", error);\r\n    }\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    // Clean up event listeners to prevent memory leaks\r\n    if (this._documentClickHandler) {\r\n      document.removeEventListener(\"click\", this._documentClickHandler);\r\n    }\r\n    \r\n    // Clean up the openCalendarInstance if this element is being removed\r\n    if (PersianDatePickerElement.openCalendarInstance === this) {\r\n      PersianDatePickerElement.openCalendarInstance = null;\r\n    }\r\n    \r\n    // Clean up any references that could cause memory leaks\r\n    const elements = [this.input, this.calendar, this.daysContainer, this.dayNamesContainer];\r\n    elements.forEach(element => {\r\n      if (element) {\r\n        const clone = element.cloneNode(false);\r\n        if (element.parentNode) {\r\n          element.parentNode.replaceChild(clone, element);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle attribute changes\r\n   */\r\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n    if (oldValue === newValue) return;\r\n    \r\n    // Early return if element is not fully initialized\r\n    if (!this.shadowRoot) return;\r\n    \r\n    switch (name) {\r\n      case 'placeholder':\r\n        if (this.input) this.input.placeholder = newValue || '';\r\n        break;\r\n        \r\n      case 'rtl':\r\n        const rtl = newValue !== null && newValue !== 'false';\r\n        this.style.setProperty('--jdp-direction', rtl ? 'rtl' : 'ltr');\r\n        break;\r\n        \r\n      case 'show-holidays':\r\n        this.showHolidays = newValue !== null && newValue !== 'false';\r\n        if (this.calendar) {\r\n          this.renderCalendar();\r\n        }\r\n        break;\r\n        \r\n      case 'holiday-types':\r\n        if (newValue) {\r\n          this.setHolidayTypes(newValue);\r\n        } else {\r\n          this.holidayTypes = [...DEFAULT_HOLIDAY_TYPES];\r\n          this.includeAllTypes = false;\r\n        }\r\n        if (this.calendar) {\r\n          this.renderCalendar();\r\n        }\r\n        break;\r\n        \r\n      case 'format':\r\n        if (newValue && this.isValidFormat(newValue)) {\r\n          this.format = newValue;\r\n          // Ensure the format is applied immediately\r\n          if (this.selectedDate) {\r\n            this.formatAndSetValue();\r\n          }\r\n        }\r\n        break;\r\n\r\n      case 'min-date':\r\n        if (newValue) {\r\n          try {\r\n            const [year, month, day] = JSON.parse(newValue);\r\n            this.setMinDate(year, month, day);\r\n          } catch (e) {\r\n            console.error('Invalid min-date format');\r\n          }\r\n        } else {\r\n          this.minDate = null;\r\n        }\r\n        if (this.calendar) {\r\n          this.renderCalendar();\r\n        }\r\n        break;\r\n\r\n      case 'max-date':\r\n        if (newValue) {\r\n          try {\r\n            const [year, month, day] = JSON.parse(newValue);\r\n            this.setMaxDate(year, month, day);\r\n          } catch (e) {\r\n            console.error('Invalid max-date format');\r\n          }\r\n        } else {\r\n          this.maxDate = null;\r\n        }\r\n        if (this.calendar) {\r\n          this.renderCalendar();\r\n        }\r\n        break;\r\n\r\n      case 'disabled-dates':\r\n        if (newValue) {\r\n          const disabledFn = (window as any)[newValue];\r\n          if (typeof disabledFn === 'function') {\r\n            this.disabledDatesFn = disabledFn;\r\n          }\r\n        } else {\r\n          this.disabledDatesFn = null;\r\n        }\r\n        if (this.calendar) {\r\n          this.renderCalendar();\r\n        }\r\n        break;\r\n        \r\n      case 'today-button-text':\r\n      case 'tomorrow-button-text':\r\n        this.updateButtonText(name, newValue);\r\n        break;\r\n        \r\n      case 'today-button-class':\r\n      case 'tomorrow-button-class':\r\n        this.updateButtonClass(name, newValue);\r\n        break;\r\n        \r\n      case 'range-mode':\r\n        this.isRangeMode = newValue !== null && newValue !== 'false';\r\n        if (this.calendar) {\r\n          this.renderCalendar();\r\n        }\r\n        break;\r\n        \r\n      // Visibility attributes that require re-rendering\r\n      case 'show-month-selector':\r\n      case 'show-year-selector':\r\n      case 'show-prev-button':\r\n      case 'show-next-button':\r\n      case 'show-today-button':\r\n      case 'show-tomorrow-button':\r\n        // Re-create the shadow DOM with updated visibility settings\r\n        if (this.shadowRoot) {\r\n          this.render(this.shadowRoot);\r\n          // Re-initialize after re-rendering\r\n          this.initializeDomReferences();\r\n          this.initializeUIComponents();\r\n          this.addEventListeners();\r\n          this.renderCalendar();\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Helper to update button text from attributes\r\n   */\r\n  private updateButtonText(attrName: string, newValue: string): void {\r\n    if (!this.shadowRoot) return;\r\n    \r\n    const buttonId = attrName === 'today-button-text' ? 'today-button' : 'tomorrow-button';\r\n    const defaultText = attrName === 'today-button-text' ? 'امروز' : 'فردا';\r\n    \r\n    const button = this.shadowRoot.getElementById(buttonId);\r\n    if (button) {\r\n      button.textContent = newValue || defaultText;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Helper to update button class from attributes\r\n   */\r\n  private updateButtonClass(attrName: string, newValue: string): void {\r\n    if (!this.shadowRoot) return;\r\n    \r\n    const buttonId = attrName === 'today-button-class' ? 'today-button' : 'tomorrow-button';\r\n    const baseClass = attrName === 'today-button-class' ? 'today-button' : 'tomorrow-button';\r\n    \r\n    const button = this.shadowRoot.getElementById(buttonId);\r\n    if (button) {\r\n      // Reset to base class\r\n      button.className = `date-nav-button ${baseClass}`;\r\n      \r\n      // Add new classes if provided\r\n      if (newValue) {\r\n        newValue.split(' ').forEach(className => {\r\n          if (className.trim()) {\r\n            button.classList.add(className.trim());\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize DOM references for the component\r\n   */\r\n  private initializeDomReferences(): void {\r\n    if (!this.shadowRoot) return;\r\n    \r\n    // Get required DOM elements\r\n    this.input = this.shadowRoot.getElementById(\"date-input\") as HTMLInputElement;\r\n    this.calendar = this.shadowRoot.getElementById(\"calendar\") as HTMLDivElement;\r\n    this.daysContainer = this.shadowRoot.getElementById(\"days-container\") as HTMLDivElement;\r\n    this.dayNamesContainer = this.shadowRoot.getElementById(\"day-names\") as HTMLDivElement;\r\n\r\n    if (!this.input || !this.calendar || !this.daysContainer || !this.dayNamesContainer) {\r\n      throw new Error(\"Failed to initialize required elements\");\r\n    }\r\n    \r\n    // Set placeholder if provided in options\r\n    if (this.options.placeholder) {\r\n      this.input.placeholder = this.options.placeholder;\r\n    } else {\r\n      // Apply placeholder from attribute if set\r\n      const placeholder = this.getAttribute('placeholder');\r\n      if (placeholder) {\r\n        this.input.placeholder = placeholder;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the current date to today's Jalali date\r\n   */\r\n  private initializeCurrentDate(): void {\r\n    const today = new Date();\r\n    const jalaliToday = PersianDate.gregorianToJalali(\r\n      today.getFullYear(),\r\n      today.getMonth() + 1,\r\n      today.getDate()\r\n    );\r\n\r\n    this.jalaliYear = jalaliToday[0];\r\n    this.jalaliMonth = jalaliToday[1];\r\n    this.jalaliDay = jalaliToday[2];\r\n    this.selectedDate = null;\r\n  }\r\n\r\n  /**\r\n   * Initialize UI components like day names and selectors\r\n   */\r\n  private initializeUIComponents(): void {\r\n    // Initialize day names\r\n    this.initializeDayNames();\r\n    \r\n    // Setup month and year selectors\r\n    this.setupMonthYearSelectors();\r\n    \r\n    // Refresh events for correct Jalali dates\r\n    EventUtils.refreshEvents();\r\n  }\r\n\r\n  /**\r\n   * Helper to initialize day names\r\n   */\r\n  private initializeDayNames(): void {\r\n    if (!this.dayNamesContainer) return;\r\n    \r\n    // Clear any existing content\r\n    this.dayNamesContainer.innerHTML = \"\";\r\n    \r\n    // Initialize the day names (Saturday to Friday in Persian)\r\n    const dayNames = [\"ش\", \"ی\", \"د\", \"س\", \"چ\", \"پ\", \"ج\"];\r\n    dayNames.forEach(name => {\r\n      const dayNameEl = document.createElement(\"div\");\r\n      dayNameEl.classList.add(\"day-name\");\r\n      dayNameEl.textContent = name;\r\n      this.dayNamesContainer.appendChild(dayNameEl);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Setup month and year selector dropdowns\r\n   */\r\n  private setupMonthYearSelectors(): void {\r\n    if (!this.shadowRoot) return;\r\n    \r\n    // Get elements\r\n    const monthSelectTrigger = this.shadowRoot.getElementById(\"month-select-trigger\") as HTMLButtonElement | null;\r\n    const yearSelectTrigger = this.shadowRoot.getElementById(\"year-select-trigger\") as HTMLButtonElement | null;\r\n    const monthSelectValue = this.shadowRoot.getElementById(\"month-select-value\") as HTMLSpanElement | null;\r\n    const yearSelectValue = this.shadowRoot.getElementById(\"year-select-value\") as HTMLSpanElement | null;\r\n    const monthSelectContent = this.shadowRoot.getElementById(\"month-select-content\") as HTMLDivElement | null;\r\n    const yearSelectContent = this.shadowRoot.getElementById(\"year-select-content\") as HTMLDivElement | null;\r\n    \r\n    // Exit early if any element is missing\r\n    if (!monthSelectTrigger || !yearSelectTrigger || !monthSelectValue || \r\n        !yearSelectValue || !monthSelectContent || !yearSelectContent) {\r\n      console.error(\"Failed to initialize month/year selectors\");\r\n      return;\r\n    }\r\n    \r\n    // Clear existing options\r\n    monthSelectContent.innerHTML = \"\";\r\n    yearSelectContent.innerHTML = \"\";\r\n    \r\n    // Setup month options\r\n    this.persianMonths.forEach((month, index) => {\r\n      const monthValue = index + 1;\r\n      const monthItem = document.createElement(\"div\");\r\n      monthItem.classList.add(\"select-item\");\r\n      monthItem.textContent = month;\r\n      monthItem.dataset.value = monthValue.toString();\r\n      \r\n      if (monthValue === this.jalaliMonth) {\r\n        monthItem.classList.add(\"selected\");\r\n        monthSelectValue.textContent = month;\r\n      }\r\n      \r\n      monthItem.addEventListener(\"click\", (e) => {\r\n        e.stopPropagation(); // Stop event propagation\r\n        this.handleMonthChange(monthValue, month);\r\n        this.closeAllDropdowns();\r\n      });\r\n      \r\n      monthSelectContent.appendChild(monthItem);\r\n    });\r\n    \r\n    // Setup year options\r\n    // Get current year range\r\n    const today = new Date();\r\n    const jalaliToday = PersianDate.gregorianToJalali(\r\n      today.getFullYear(), \r\n      today.getMonth() + 1, \r\n      today.getDate()\r\n    );\r\n    \r\n    const currentJalaliYear = jalaliToday[0];\r\n    const startYear = currentJalaliYear - 100;\r\n    const endYear = currentJalaliYear + 50;\r\n    \r\n    for (let year = startYear; year <= endYear; year++) {\r\n      const yearItem = document.createElement(\"div\");\r\n      yearItem.classList.add(\"select-item\");\r\n      yearItem.textContent = this.toPersianNum(year);\r\n      yearItem.dataset.value = year.toString();\r\n      \r\n      if (year === this.jalaliYear) {\r\n        yearItem.classList.add(\"selected\");\r\n        yearSelectValue.textContent = this.toPersianNum(year);\r\n      }\r\n      \r\n      yearItem.addEventListener(\"click\", (e) => {\r\n        e.stopPropagation(); // Stop event propagation\r\n        this.handleYearChange(year);\r\n        this.closeAllDropdowns();\r\n      });\r\n      \r\n      yearSelectContent.appendChild(yearItem);\r\n    }\r\n    \r\n    // Add toggle event listeners to triggers\r\n    monthSelectTrigger.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n      this.toggleDropdown(monthSelectContent);\r\n    });\r\n    \r\n    yearSelectTrigger.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n      this.toggleDropdown(yearSelectContent);\r\n    });\r\n    \r\n    // Prevent event bubbling from the content containers\r\n    monthSelectContent.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n    });\r\n    \r\n    yearSelectContent.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n    });\r\n  }\r\n\r\n  // Add all needed event listeners\r\n  private addEventListeners(): void {\r\n    if (!this.shadowRoot || !this.input || !this.calendar) return;\r\n    \r\n    // Input click event to toggle calendar\r\n    this.input.addEventListener(\"click\", this.handleInputClick);\r\n    \r\n    // Button event listeners\r\n    this.setupNavigationButtons();\r\n    \r\n    // Prevent clicks inside the calendar from bubbling up\r\n    this.calendar.addEventListener(\"click\", e => e.stopPropagation());\r\n    \r\n    // Close dropdowns when clicking on empty space in calendar\r\n    this.calendar.addEventListener(\"click\", e => {\r\n      const target = e.target as HTMLElement;\r\n      // If the click was not on a select-trigger element or select-content element, close all dropdowns\r\n      if (!target.closest('.select-trigger') && !target.closest('.select-content')) {\r\n        this.closeAllDropdowns();\r\n      }\r\n    });\r\n    \r\n    // Document click handler to close calendar when clicking outside\r\n    this._documentClickHandler = this.handleDocumentClick.bind(this);\r\n    document.addEventListener(\"click\", this._documentClickHandler);\r\n  }\r\n\r\n  /**\r\n   * Handle input field click\r\n   */\r\n  private handleInputClick = (e: MouseEvent): void => {\r\n    e.stopPropagation();\r\n    this.toggleCalendar();\r\n  }\r\n\r\n  /**\r\n   * Handle document clicks to close the calendar when clicking outside\r\n   */\r\n  private handleDocumentClick = (e: Event): void => {\r\n    if (!this.calendar || !this.calendar.classList.contains(\"visible\")) return;\r\n    \r\n    const path = e.composedPath();\r\n    if (!path.includes(this)) {\r\n      this.closeAllDropdowns();\r\n      this.toggleCalendar();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup navigation buttons (prev, next, today, tomorrow)\r\n   */\r\n  private setupNavigationButtons(): void {\r\n    if (!this.shadowRoot) return;\r\n    \r\n    const prevMonthBtn = this.shadowRoot.getElementById(\"prev-month\");\r\n    const nextMonthBtn = this.shadowRoot.getElementById(\"next-month\");\r\n    const todayBtn = this.shadowRoot.getElementById(\"today-button\");\r\n    const tomorrowBtn = this.shadowRoot.getElementById(\"tomorrow-button\");\r\n    \r\n    // Helper function to add click handler with stopPropagation\r\n    const addClickHandler = (element: HTMLElement | null, handler: () => void): void => {\r\n      if (element) {\r\n        element.addEventListener(\"click\", (e) => {\r\n          e.stopPropagation();\r\n          \r\n          // Close any open dropdowns when navigation buttons are clicked\r\n          this.closeAllDropdowns();\r\n          \r\n          handler();\r\n        });\r\n      }\r\n    };\r\n    \r\n    addClickHandler(prevMonthBtn, () => this.changeMonth(-1));\r\n    addClickHandler(nextMonthBtn, () => this.changeMonth(1));\r\n    addClickHandler(todayBtn, () => this.goToToday());\r\n    addClickHandler(tomorrowBtn, () => this.goToTomorrow());\r\n  }\r\n\r\n  /**\r\n   * Sets the holiday types to be displayed\r\n   * @param types - Comma-separated string or array of holiday types (e.g., \"Iran,Afghanistan,AncientIran,International\")\r\n   */\r\n  setHolidayTypes(types: string | string[]): void {\r\n    if (typeof types === 'string') {\r\n      // Special case for \"all\" which includes all types\r\n      if (types.toLowerCase() === 'all') {\r\n        this.includeAllTypes = true;\r\n        this.holidayTypes = [...EventUtils.getEventTypes()]; // Get all available types\r\n        return;\r\n      }\r\n      \r\n      // Parse comma-separated values\r\n      this.holidayTypes = types.split(',').map(t => t.trim()).filter(Boolean);\r\n    } else if (Array.isArray(types)) {\r\n      this.holidayTypes = [...types];\r\n    } else {\r\n      this.holidayTypes = [...DEFAULT_HOLIDAY_TYPES];\r\n    }\r\n    \r\n    // Set includeAllTypes to false by default\r\n    this.includeAllTypes = false;\r\n    \r\n    // If the calendar is already rendered, update it\r\n    if (this.calendar) {\r\n      this.renderCalendar();\r\n    }\r\n  }\r\n  \r\n  /**\r\n   * Gets the current holiday types being displayed\r\n   */\r\n  getHolidayTypes(): string[] {\r\n    return [...this.holidayTypes];\r\n  }\r\n  \r\n  /**\r\n   * Checks if all types are being shown\r\n   */\r\n  isShowingAllTypes(): boolean {\r\n    return this.includeAllTypes;\r\n  }\r\n\r\n  /**\r\n   * Render the initial component HTML\r\n   */\r\n  private render(shadow: ShadowRoot) {\r\n    // Get button text from attributes or use defaults\r\n    const todayButtonText = this.getAttribute('today-button-text') || 'امروز';\r\n    const todayButtonClass = this.getAttribute('today-button-class') || '';\r\n    const tomorrowButtonText = this.getAttribute('tomorrow-button-text') || 'فردا';\r\n    const tomorrowButtonClass = this.getAttribute('tomorrow-button-class') || '';\r\n    \r\n    // Check visibility attributes (defaults to true if not specified)\r\n    const showMonthSelector = this.getAttribute('show-month-selector') !== 'false';\r\n    const showYearSelector = this.getAttribute('show-year-selector') !== 'false';\r\n    const showPrevButton = this.getAttribute('show-prev-button') !== 'false';\r\n    const showNextButton = this.getAttribute('show-next-button') !== 'false';\r\n    const showTodayButton = this.getAttribute('show-today-button') !== 'false';\r\n    const showTomorrowButton = this.getAttribute('show-tomorrow-button') !== 'false';\r\n    \r\n    // SVG for dropdown icon\r\n    const chevronSVG = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"m6 9 6 6 6-6\"/></svg>`;\r\n    \r\n    shadow.innerHTML = `\r\n      <style>${styles}</style>\r\n      <div class=\"picker-container\">\r\n        <input type=\"text\" id=\"date-input\" readonly placeholder=\"انتخاب تاریخ\">\r\n        <div class=\"calendar\" id=\"calendar\">\r\n          <div class=\"header\">\r\n            ${showPrevButton ? `<button id=\"prev-month\" type=\"button\" class=\"nav-button prev\"></button>` : ''}\r\n            <div class=\"selectors-container\">\r\n              ${showMonthSelector ? `\r\n              <div class=\"custom-select month-select\" id=\"month-select-container\">\r\n                <button type=\"button\" class=\"select-trigger\" id=\"month-select-trigger\">\r\n                  <span id=\"month-select-value\"></span>\r\n                  <span class=\"select-icon\">${chevronSVG}</span>\r\n                </button>\r\n                <div class=\"select-content month-select-content\" id=\"month-select-content\"></div>\r\n              </div>\r\n              ` : ''}\r\n              ${showYearSelector ? `\r\n              <div class=\"custom-select year-select\" id=\"year-select-container\">\r\n                <button type=\"button\" class=\"select-trigger\" id=\"year-select-trigger\">\r\n                  <span id=\"year-select-value\"></span>\r\n                  <span class=\"select-icon\">${chevronSVG}</span>\r\n                </button>\r\n                <div class=\"select-content year-select-content\" id=\"year-select-content\"></div>\r\n              </div>\r\n              ` : ''}\r\n            </div>\r\n            ${showNextButton ? `<button id=\"next-month\" type=\"button\" class=\"nav-button next\"></button>` : ''}\r\n          </div>\r\n          <div class=\"day-names\" id=\"day-names\"></div>\r\n          <div class=\"days-wrapper\">\r\n            <div class=\"days\" id=\"days-container\"></div>\r\n          </div>\r\n          <div class=\"footer\">\r\n            ${showTodayButton ? `<button id=\"today-button\" type=\"button\" class=\"date-nav-button today-button ${todayButtonClass}\">${todayButtonText}</button>` : ''}\r\n            ${showTomorrowButton ? `<button id=\"tomorrow-button\" type=\"button\" class=\"date-nav-button tomorrow-button ${tomorrowButtonClass}\">${tomorrowButtonText}</button>` : ''}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  /**\r\n   * Toggle calendar visibility\r\n   */\r\n  toggleCalendar() {\r\n    // First close any open dropdowns\r\n    this.closeAllDropdowns();\r\n    \r\n    // Check if this calendar is already open\r\n    if (this.calendar.classList.contains(\"visible\")) {\r\n      // Hide calendar\r\n      this.calendar.classList.remove(\"visible\", \"position-bottom\", \"position-top\");\r\n      \r\n      // Clear the static reference if this instance is being closed\r\n      if (PersianDatePickerElement.openCalendarInstance === this) {\r\n        PersianDatePickerElement.openCalendarInstance = null;\r\n      }\r\n    } else {\r\n      // Close any already open calendar instance\r\n      if (PersianDatePickerElement.openCalendarInstance && \r\n          PersianDatePickerElement.openCalendarInstance !== this) {\r\n        PersianDatePickerElement.openCalendarInstance.toggleCalendar();\r\n      }\r\n      \r\n      // Show calendar with position calculation\r\n      this.positionCalendar();\r\n      this.calendar.classList.add(\"visible\");\r\n      \r\n      // Set this as the currently open instance\r\n      PersianDatePickerElement.openCalendarInstance = this;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate and set the optimal position for the calendar\r\n   */\r\n  private positionCalendar(): void {\r\n    if (!this.input || !this.calendar) return;\r\n    \r\n    // Reset position classes\r\n    this.calendar.classList.remove(\"position-bottom\", \"position-top\");\r\n    \r\n    // Get measurements without causing reflow\r\n    const inputRect = this.input.getBoundingClientRect();\r\n    const windowHeight = window.innerHeight;\r\n    \r\n    // Default to position-bottom (most common)\r\n    this.calendar.classList.add(\"position-bottom\");\r\n    \r\n    // Set display block but with visibility hidden to measure without showing\r\n    const originalVisibility = this.calendar.style.visibility;\r\n    const originalDisplay = this.calendar.style.display;\r\n    this.calendar.style.visibility = 'hidden';\r\n    this.calendar.style.display = 'block';\r\n    \r\n    // Now we can measure once display is set\r\n    const calendarHeight = this.calendar.offsetHeight;\r\n    \r\n    // Check if there's enough space below\r\n    const spaceBelow = windowHeight - inputRect.bottom;\r\n    if (spaceBelow < calendarHeight) {\r\n      // Not enough space below, check if there's more space above\r\n      const spaceAbove = inputRect.top;\r\n      if (spaceAbove > spaceBelow || spaceAbove >= calendarHeight) {\r\n        // Switch to position-top\r\n        this.calendar.classList.remove(\"position-bottom\");\r\n        this.calendar.classList.add(\"position-top\");\r\n      }\r\n    }\r\n    \r\n    // Restore original styles\r\n    this.calendar.style.visibility = originalVisibility;\r\n    this.calendar.style.display = originalDisplay;\r\n  }\r\n\r\n  /**\r\n   * Change to previous or next month\r\n   */\r\n  changeMonth(direction: number) {\r\n    // Prevent multiple transitions at once\r\n    if (this.isTransitioning) return;\r\n    this.isTransitioning = true;\r\n    \r\n    // Cache reference to calendar elements\r\n    const daysContainer = this.daysContainer;\r\n    \r\n    // Add transition class based on direction\r\n    const slideClass = direction > 0 ? 'slide-left' : 'slide-right';\r\n    daysContainer.classList.add(slideClass);\r\n    \r\n    // Update month and year values\r\n    this.jalaliMonth = Number(this.jalaliMonth) + direction;\r\n    if (this.jalaliMonth < 1) {\r\n      this.jalaliMonth = 12;\r\n      this.jalaliYear--;\r\n    } else if (this.jalaliMonth > 12) {\r\n      this.jalaliMonth = 1;\r\n      this.jalaliYear++;\r\n    }\r\n    \r\n    // Use requestAnimationFrame for better timing and smoother animation\r\n    requestAnimationFrame(() => {\r\n      // Set a timeout to actually update the calendar\r\n      setTimeout(() => {\r\n        // Update month/year selectors\r\n        this.updateMonthYearSelectors();\r\n        \r\n        // Clear days container and render new content\r\n        daysContainer.innerHTML = \"\";\r\n        this.renderCalendarContent();\r\n        \r\n        // Remove slide class after the animation duration\r\n        requestAnimationFrame(() => {\r\n          daysContainer.classList.remove(slideClass);\r\n          \r\n          // Set a brief timeout to ensure animation is truly done\r\n          setTimeout(() => {\r\n            this.isTransitioning = false;\r\n          }, 50);\r\n        });\r\n      }, 200); // Shorter than the CSS animation duration for better feel\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update the month and year selector UI elements\r\n   */\r\n  private updateMonthYearSelectors(): void {\r\n    if (!this.shadowRoot) return;\r\n    \r\n    const monthSelectValue = this.shadowRoot.getElementById(\"month-select-value\") as HTMLSpanElement;\r\n    const yearSelectValue = this.shadowRoot.getElementById(\"year-select-value\") as HTMLSpanElement;\r\n    \r\n    if (monthSelectValue) {\r\n      monthSelectValue.textContent = this.persianMonths[this.jalaliMonth - 1];\r\n    }\r\n    \r\n    if (yearSelectValue) {\r\n      yearSelectValue.textContent = this.toPersianNum(this.jalaliYear);\r\n    }\r\n    \r\n    // Update selected items in dropdowns\r\n    const monthItems = this.shadowRoot.querySelectorAll(\".month-select-content .select-item\");\r\n    monthItems.forEach(item => {\r\n      if (item.getAttribute(\"data-value\") === this.jalaliMonth.toString()) {\r\n        item.classList.add(\"selected\");\r\n      } else {\r\n        item.classList.remove(\"selected\");\r\n      }\r\n    });\r\n    \r\n    const yearItems = this.shadowRoot.querySelectorAll(\".year-select-content .select-item\");\r\n    yearItems.forEach(item => {\r\n      if (item.getAttribute(\"data-value\") === this.jalaliYear.toString()) {\r\n        item.classList.add(\"selected\");\r\n      } else {\r\n        item.classList.remove(\"selected\");\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Render the calendar with current month/year\r\n   */\r\n  renderCalendar() {\r\n    if (!this.shadowRoot || !this.daysContainer) return;\r\n    \r\n    // Update month and year selectors\r\n    this.updateMonthYearSelectors();\r\n\r\n    // Clear previous days\r\n    this.daysContainer.innerHTML = \"\";\r\n\r\n    // Render the calendar content\r\n    this.renderCalendarContent();\r\n  }\r\n  \r\n  /**\r\n   * Renders the calendar content for the current month\r\n   */\r\n  private renderCalendarContent(): void {\r\n    if (!this.daysContainer) return;\r\n    \r\n    // Get first day of month and number of days\r\n    const firstDayOfMonth = PersianDate.getDayOfWeek(this.jalaliYear, this.jalaliMonth, 1);\r\n    const daysInMonth = PersianDate.getDaysInMonth(this.jalaliYear, this.jalaliMonth);\r\n    \r\n    // Get today's date for highlighting\r\n    const today = new Date();\r\n    const jalaliToday = PersianDate.gregorianToJalali(\r\n      today.getFullYear(), \r\n      today.getMonth() + 1, \r\n      today.getDate()\r\n    );\r\n    \r\n    // Adjust first day of month for Persian calendar (Saturday is first day of week)\r\n    const adjustedFirstDay = (firstDayOfMonth + 1) % 7;\r\n    \r\n    // Clear the container\r\n    this.daysContainer.innerHTML = \"\";\r\n    \r\n    // Add empty cells for days before the first day of month\r\n    for (let i = 0; i < adjustedFirstDay; i++) {\r\n      const emptyDay = document.createElement(\"div\");\r\n      emptyDay.classList.add(\"day\", \"empty\");\r\n      this.daysContainer.appendChild(emptyDay);\r\n    }\r\n\r\n    // Generate days of month\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      const dayElement = document.createElement(\"div\");\r\n      dayElement.classList.add(\"day\");\r\n      dayElement.textContent = this.toPersianNum(i);\r\n      \r\n      // Check if date is in range and not disabled\r\n      const isInRange = this.isDateInRange(this.jalaliYear, this.jalaliMonth, i);\r\n      const isDisabled = this.isDateDisabled(this.jalaliYear, this.jalaliMonth, i);\r\n      \r\n      if (!isInRange || isDisabled) {\r\n        dayElement.classList.add(\"disabled\");\r\n        dayElement.style.opacity = \"0.4\";\r\n        dayElement.style.cursor = \"not-allowed\";\r\n      } else {\r\n        // Add hover handler for tooltips\r\n        this.setupDayTooltips(dayElement);\r\n        \r\n        // Add click handler\r\n        this.setupDayClickHandler(dayElement, i);\r\n      }\r\n      \r\n      // Highlight today\r\n      if (this.jalaliYear === jalaliToday[0] && this.jalaliMonth === jalaliToday[1] && i === jalaliToday[2]) {\r\n        dayElement.classList.add(\"today\");\r\n      }\r\n      \r\n      // Handle range selection highlighting\r\n      if (this.isRangeMode) {\r\n        const currentDate: DateTuple = [this.jalaliYear, this.jalaliMonth, i];\r\n        \r\n        // First remove any existing range classes\r\n        dayElement.classList.remove(\"in-range\", \"range-start\", \"range-end\");\r\n        \r\n        if (this.rangeStart && this.rangeEnd) {\r\n          // Complete range - check if current date is between start and end\r\n          const isInRange = this.compareDates(currentDate, this.rangeStart) >= 0 && \r\n                           this.compareDates(currentDate, this.rangeEnd) <= 0;\r\n          \r\n          // Handle start date\r\n          if (this.compareDates(currentDate, this.rangeStart) === 0) {\r\n            dayElement.classList.add(\"range-start\");\r\n            // If start and end are the same date, add both classes\r\n            if (this.compareDates(currentDate, this.rangeEnd) === 0) {\r\n              dayElement.classList.add(\"range-end\");\r\n            }\r\n          }\r\n          // Handle end date\r\n          else if (this.compareDates(currentDate, this.rangeEnd) === 0) {\r\n            dayElement.classList.add(\"range-end\");\r\n          }\r\n          // Handle dates in between\r\n          else if (isInRange) {\r\n            dayElement.classList.add(\"in-range\");\r\n          }\r\n        } else if (this.rangeStart && !this.rangeEnd) {\r\n          // Selecting range - only highlight start date\r\n          if (this.compareDates(currentDate, this.rangeStart) === 0) {\r\n            dayElement.classList.add(\"range-start\");\r\n          }\r\n        }\r\n      } else if (this.selectedDate && \r\n          this.jalaliYear === this.selectedDate[0] && \r\n          this.jalaliMonth === this.selectedDate[1] && \r\n          i === this.selectedDate[2]) {\r\n        dayElement.classList.add(\"selected\");\r\n      }\r\n      \r\n      // Add holiday information if enabled\r\n      if (this.showHolidays) {\r\n        this.addHolidayInfo(dayElement, i);\r\n      }\r\n      \r\n      this.daysContainer.appendChild(dayElement);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compare two dates in [year, month, day] format\r\n   * Returns -1 if date1 < date2, 0 if date1 = date2, 1 if date1 > date2\r\n   */\r\n  private compareDates(date1: DateTuple, date2: DateTuple): number {\r\n    // First compare years\r\n    if (date1[0] !== date2[0]) {\r\n      return date1[0] - date2[0];\r\n    }\r\n    \r\n    // Then compare months\r\n    if (date1[1] !== date2[1]) {\r\n      return date1[1] - date2[1];\r\n    }\r\n    \r\n    // Finally compare days\r\n    return date1[2] - date2[2];\r\n  }\r\n\r\n  /**\r\n   * Set up tooltip handling for a day element\r\n   */\r\n  private setupDayTooltips(dayElement: HTMLElement): void {\r\n    // Add hover handler for desktop tooltips\r\n    dayElement.addEventListener(\"mouseenter\", () => {\r\n      const tooltip = dayElement.querySelector('.event-tooltip');\r\n      if (tooltip) {\r\n        tooltip.classList.add(\"tooltip-visible\");\r\n      }\r\n    });\r\n    \r\n    dayElement.addEventListener(\"mouseleave\", () => {\r\n      const tooltip = dayElement.querySelector('.event-tooltip');\r\n      if (tooltip) {\r\n        tooltip.classList.remove(\"tooltip-visible\");\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set up click handling for a day element\r\n   */\r\n  private setupDayClickHandler(dayElement: HTMLElement, day: number): void {\r\n    let lastTapTime = 0;\r\n    \r\n    dayElement.addEventListener(\"click\", (e) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      \r\n      const currentTime = new Date().getTime();\r\n      const tapLength = currentTime - lastTapTime;\r\n      \r\n      // Handle touch events differently\r\n      if ('ontouchstart' in window || navigator.maxTouchPoints > 0) {\r\n        if (tapLength < 500 && tapLength > 0) {\r\n          // Double tap detected - show tooltip\r\n          const tooltip = dayElement.querySelector('.event-tooltip');\r\n          if (tooltip) {\r\n            const tooltips = this.shadowRoot?.querySelectorAll('.event-tooltip.tooltip-visible');\r\n            tooltips?.forEach(t => t.classList.remove(\"tooltip-visible\"));\r\n            tooltip.classList.add(\"tooltip-visible\");\r\n          }\r\n        } else {\r\n          // Single tap - handle range or single selection\r\n          this.handleRangeSelection(day);\r\n        }\r\n      } else {\r\n        // For non-mobile, handle range or single selection\r\n        this.handleRangeSelection(day);\r\n      }\r\n      \r\n      lastTapTime = currentTime;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add holiday information to a day element\r\n   * Returns true if the day is a holiday\r\n   */\r\n  private addHolidayInfo(dayElement: HTMLElement, day: number): boolean {\r\n    let isHoliday = false;\r\n    \r\n    // Check if it's Friday (6th day in JavaScript's getDay, where 0 is Sunday)\r\n    const dayOfWeek = PersianDate.getDayOfWeek(this.jalaliYear, this.jalaliMonth, day);\r\n    if (dayOfWeek === 5) { // Friday\r\n      dayElement.classList.add(\"friday\");\r\n      isHoliday = true;\r\n    }\r\n    \r\n    // Check if it's a holiday from events.json based on holiday types\r\n    if (EventUtils.isHoliday(this.jalaliMonth, day, this.holidayTypes, this.includeAllTypes)) {\r\n      dayElement.classList.add(\"holiday\");\r\n      isHoliday = true;\r\n      \r\n      // Add tooltip with event titles\r\n      const events = EventUtils.getEvents(this.jalaliMonth, day, this.holidayTypes, this.includeAllTypes);\r\n      if (events.length > 0) {\r\n        const tooltip = this.createEventTooltip(events);\r\n        dayElement.appendChild(tooltip);\r\n      }\r\n    }\r\n    \r\n    return isHoliday;\r\n  }\r\n\r\n  /**\r\n   * Create tooltip element for events\r\n   */\r\n  private createEventTooltip(events: any[]): HTMLElement {\r\n    const tooltip = document.createElement(\"div\");\r\n    tooltip.classList.add(\"event-tooltip\");\r\n    \r\n    events.forEach(event => {\r\n      const eventItem = document.createElement(\"div\");\r\n      eventItem.classList.add(\"event-item\");\r\n      \r\n      // Add 'holiday' class for holiday events\r\n      if (event.holiday) {\r\n        eventItem.classList.add(\"holiday\");\r\n      }\r\n      \r\n      // Add type label with Persian text\r\n      const typeLabel = document.createElement(\"span\");\r\n      typeLabel.classList.add(\"event-type-label\");\r\n      typeLabel.textContent = this.holidayTypeLabels[event.type] || event.type;\r\n      eventItem.appendChild(typeLabel);\r\n      \r\n      // Add event title\r\n      const titleSpan = document.createElement(\"span\");\r\n      titleSpan.textContent = event.title;\r\n      eventItem.appendChild(titleSpan);\r\n      \r\n      tooltip.appendChild(eventItem);\r\n    });\r\n    \r\n    return tooltip;\r\n  }\r\n\r\n  /**\r\n   * Navigate to a specific date (today or tomorrow)\r\n   */\r\n  private navigateToDate(dateToUse: Date): void {\r\n    // Convert to Jalali date\r\n    const jalaliDate = PersianDate.gregorianToJalali(\r\n      dateToUse.getFullYear(),\r\n      dateToUse.getMonth() + 1,\r\n      dateToUse.getDate()\r\n    );\r\n    \r\n    const previousYear = this.jalaliYear;\r\n    \r\n    // Update current view to the specified date's month/year\r\n    this.jalaliYear = jalaliDate[0];\r\n    this.jalaliMonth = jalaliDate[1];\r\n    \r\n    // If the year has changed, refresh the events\r\n    if (previousYear !== this.jalaliYear) {\r\n      EventUtils.refreshEvents();\r\n    }\r\n    \r\n    // Render the calendar with the new month/year\r\n    this.renderCalendar();\r\n    \r\n    // Select the date\r\n    this.selectDate(jalaliDate[2]);\r\n  }\r\n\r\n  /**\r\n   * Navigate to today's date and select it\r\n   */\r\n  private goToToday(): void {\r\n    this.navigateToDate(new Date());\r\n  }\r\n\r\n  /**\r\n   * Navigate to tomorrow's date and select it\r\n   */\r\n  private goToTomorrow(): void {\r\n    const tomorrow = new Date();\r\n    tomorrow.setDate(tomorrow.getDate() + 1);\r\n    this.navigateToDate(tomorrow);\r\n  }\r\n\r\n  /**\r\n   * Select a specific date\r\n   */\r\n  selectDate(day: number) {\r\n    this.jalaliDay = day;\r\n    this.selectedDate = [this.jalaliYear, this.jalaliMonth, this.jalaliDay];\r\n    \r\n    // Format and display the date\r\n    this.formatAndSetValue();\r\n    \r\n    // Get all events for the selected date\r\n    const events = EventUtils.getEvents(this.jalaliMonth, day, this.holidayTypes, this.includeAllTypes);\r\n    \r\n    // Format the date according to the current format\r\n    const formattedDate = this.formatDate(this.selectedDate, this.format);\r\n    \r\n    // Dispatch change event\r\n    this.dispatchEvent(new CustomEvent(\"change\", {\r\n      detail: {\r\n        jalali: this.selectedDate,\r\n        gregorian: PersianDate.jalaliToGregorian(this.jalaliYear, this.jalaliMonth, this.jalaliDay),\r\n        isHoliday: EventUtils.isHoliday(this.jalaliMonth, day, this.holidayTypes, this.includeAllTypes),\r\n        events: events,\r\n        formattedDate: formattedDate\r\n      },\r\n      bubbles: true\r\n    }) as PersianDateChangeEvent);\r\n    \r\n    // Close any open dropdowns before hiding the calendar\r\n    this.closeAllDropdowns();\r\n    \r\n    this.toggleCalendar();\r\n    this.renderCalendar();\r\n  }\r\n\r\n  /**\r\n   * Format the selected date and set input value\r\n   */\r\n  private formatAndSetValue() {\r\n    if (this.isRangeMode) {\r\n      if (!this.rangeStart || !this.rangeEnd) {\r\n        this.input.value = '';\r\n        return;\r\n      }\r\n\r\n      const formatRange = (date: DateTuple) => {\r\n        const [year, month, day] = date;\r\n        return this.formatDate(date, this.format);\r\n      };\r\n\r\n      this.input.value = `${formatRange(this.rangeStart)} - ${formatRange(this.rangeEnd)}`;\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedDate) {\r\n      this.input.value = '';\r\n      return;\r\n    }\r\n\r\n    this.input.value = this.formatDate(this.selectedDate, this.format);\r\n  }\r\n\r\n  /**\r\n   * Format a date tuple according to the specified format\r\n   */\r\n  private formatDate(date: DateTuple, format: string): string {\r\n    if (!date) return '';\r\n    \r\n    const [year, month, day] = date;\r\n    \r\n    // Handle special formats first\r\n    const specialFormat = this.handleSpecialFormat(format, year, month, day);\r\n    if (specialFormat !== null) {\r\n      return specialFormat;\r\n    }\r\n    \r\n    // Handle general format\r\n    return this.handleGeneralFormat(format, year, month, day);\r\n  }\r\n\r\n  /**\r\n   * Handle special predefined formats\r\n   */\r\n  private handleSpecialFormat(format: string, year: number, month: number, day: number): string | null {\r\n    type SpecialFormat = 'YYYY/MM/DD' | 'YYYY-MM-DD' | 'YYYY/MM/DDth';\r\n    const specialFormats: Record<SpecialFormat, () => string> = {\r\n      'YYYY/MM/DD': () => `${this.toPersianNum(year)}/${this.toPersianNum(month.toString().padStart(2, '0'))}/${this.toPersianNum(day.toString().padStart(2, '0'))}`,\r\n      'YYYY-MM-DD': () => `${this.toPersianNum(year)}-${this.toPersianNum(month.toString().padStart(2, '0'))}-${this.toPersianNum(day.toString().padStart(2, '0'))}`,\r\n      'YYYY/MM/DDth': () => `${this.toPersianNum(year)}/${this.toPersianNum(month.toString().padStart(2, '0'))}/${this.toPersianNum(day)}ام`\r\n    };\r\n\r\n    return (specialFormats[format as SpecialFormat]?.() || null);\r\n  }\r\n\r\n  /**\r\n   * Handle general format with tokens\r\n   */\r\n  private handleGeneralFormat(format: string, year: number, month: number, day: number): string {\r\n    // Split format into components while preserving spaces\r\n    const components = format.split(/(\\s+)/);\r\n    const parts: string[] = [];\r\n    \r\n    for (let i = 0; i < components.length; i++) {\r\n      const component = components[i];\r\n      \r\n      if (!component.trim()) {\r\n        parts.push(component);\r\n        continue;\r\n      }\r\n      \r\n      let processedComponent = this.replaceFormatTokens(component, year, month, day);\r\n      parts.push(processedComponent);\r\n      \r\n      if (i < components.length - 1 && components[i + 1].trim()) {\r\n        parts.push(' ');\r\n      }\r\n    }\r\n    \r\n    return parts.join('');\r\n  }\r\n\r\n  /**\r\n   * Replace format tokens in a component\r\n   */\r\n  private replaceFormatTokens(component: string, year: number, month: number, day: number): string {\r\n    let processed = component;\r\n    \r\n    // Replace format tokens in the correct order\r\n    if (processed.includes('MMMM')) {\r\n      processed = processed.replace('MMMM', this.persianMonths[month - 1]);\r\n    } else if (processed.includes('MMM')) {\r\n      processed = processed.replace('MMM', this.persianMonths[month - 1].substring(0, 3));\r\n    }\r\n    \r\n    processed = processed.replace('YYYY', this.toPersianNum(year));\r\n    processed = processed.replace('MM', this.toPersianNum(month.toString().padStart(2, '0')));\r\n    processed = processed.replace('DD', this.toPersianNum(day.toString().padStart(2, '0')));\r\n    processed = processed.replace('dddd', this.getWeekdayName(year, month, day));\r\n    \r\n    // Handle ordinal suffix\r\n    if (processed.includes('th')) {\r\n      processed = processed.replace('th', 'ام');\r\n    }\r\n    \r\n    return processed;\r\n  }\r\n\r\n  private isValidFormat(format: string): boolean {\r\n    // Check if format contains at least one of the required patterns\r\n    const hasYear = format.includes('YYYY');\r\n    const hasMonth = format.includes('MM');\r\n    const hasDay = format.includes('DD');\r\n\r\n    // Check for invalid patterns\r\n    const invalidPatterns = /[^YMD\\/\\-\\. dth]/g;\r\n    const hasInvalidPatterns = invalidPatterns.test(format);\r\n\r\n    // Allow special formats\r\n    if (format === 'YYYY/MM' || format === 'DD/MM' || format === 'DD.MM.YYYY' || format === 'YYYY/MM/DDth') {\r\n      return true;\r\n    }\r\n\r\n    // For other formats, require at least two components\r\n    const componentCount = [hasYear, hasMonth, hasDay].filter(Boolean).length;\r\n    return componentCount >= 2 && !hasInvalidPatterns;\r\n  }\r\n\r\n  private getWeekdayName(year: number, month: number, day: number): string {\r\n    const weekdays = ['شنبه', 'یکشنبه', 'دوشنبه', 'سه‌شنبه', 'چهارشنبه', 'پنج‌شنبه', 'جمعه'];\r\n    const date = new Date(year, month - 1, day);\r\n    const weekday = date.getDay();\r\n    return weekdays[weekday];\r\n  }\r\n\r\n  /**\r\n   * Handle month change from dropdown\r\n   */\r\n  private handleMonthChange(month: number, monthName: string): void {\r\n    if (this.jalaliMonth === month) return;\r\n    \r\n    this.jalaliMonth = month;\r\n    this.renderCalendar();\r\n  }\r\n\r\n  /**\r\n   * Handle year change from dropdown\r\n   */\r\n  private handleYearChange(year: number): void {\r\n    if (this.jalaliYear === year) return;\r\n    \r\n    const previousYear = this.jalaliYear;\r\n    this.jalaliYear = year;\r\n    \r\n    // If the year has changed, refresh the events\r\n    if (previousYear !== year) {\r\n      EventUtils.refreshEvents();\r\n    }\r\n    \r\n    this.renderCalendar();\r\n  }\r\n\r\n  /**\r\n   * Sets the date value programmatically\r\n   */\r\n  public setValue(year: number, month: number, day: number): void {\r\n    this.selectedDate = [year, month, day];\r\n    this.jalaliYear = year;\r\n    this.jalaliMonth = month;\r\n    this.jalaliDay = day;\r\n    this.formatAndSetValue();\r\n    this.renderCalendar();\r\n  }\r\n\r\n  /**\r\n   * Gets the currently selected date as a tuple [year, month, day]\r\n   */\r\n  public getValue(): DateTuple | null {\r\n    return this.selectedDate ? [...this.selectedDate] : null;\r\n  }\r\n\r\n  /**\r\n   * Checks if the currently selected date is a holiday\r\n   */\r\n  public isSelectedDateHoliday(): boolean {\r\n    if (!this.selectedDate) return false;\r\n    return EventUtils.isHoliday(\r\n      this.selectedDate[1],\r\n      this.selectedDate[2],\r\n      this.holidayTypes,\r\n      this.includeAllTypes\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Gets events for the currently selected date\r\n   */\r\n  public getSelectedDateEvents(): any[] {\r\n    if (!this.selectedDate) return [];\r\n    return [...EventUtils.getEvents(\r\n      this.selectedDate[1],\r\n      this.selectedDate[2],\r\n      this.holidayTypes,\r\n      this.includeAllTypes\r\n    )];\r\n  }\r\n\r\n  /**\r\n   * Clears the selected date\r\n   */\r\n  public clear(): void {\r\n    if (this.isRangeMode) {\r\n      this.rangeStart = null;\r\n      this.rangeEnd = null;\r\n    } else {\r\n      this.selectedDate = null;\r\n    }\r\n    this.input.value = '';\r\n    this.renderCalendar();\r\n  }\r\n\r\n  /**\r\n   * Initialize touch gesture support for the calendar\r\n   */\r\n  private initTouchGestures(): void {\r\n    if (!this.calendar || !this.shadowRoot) return;\r\n    \r\n    let startX: number = 0;\r\n    let startY: number = 0;\r\n    let isDragging: boolean = false;\r\n    const threshold = 20;\r\n    let touchStartTime: number = 0;\r\n    let isSwiping = false;\r\n    \r\n    // Helper for touch event handler setup - fixed type issues\r\n    const setupTouchHandler = <K extends keyof HTMLElementEventMap>(\r\n      element: HTMLElement | null, \r\n      eventType: K, \r\n      handler: (e: HTMLElementEventMap[K]) => void, \r\n      options?: AddEventListenerOptions\r\n    ): void => {\r\n      if (element) {\r\n        element.addEventListener(eventType, handler as EventListener, options);\r\n      }\r\n    };\r\n    \r\n    // Handle touch start\r\n    const handleTouchStart = (e: TouchEvent): void => {\r\n      if (!this.calendar?.classList.contains(\"visible\")) return;\r\n      \r\n      startX = e.touches[0].clientX;\r\n      startY = e.touches[0].clientY;\r\n      isDragging = false;\r\n      isSwiping = false;\r\n      touchStartTime = Date.now();\r\n      e.stopPropagation();\r\n    };\r\n    \r\n    // Handle touch move\r\n    const handleTouchMove = (e: TouchEvent): void => {\r\n      if (!this.calendar?.classList.contains(\"visible\")) return;\r\n      \r\n      const currentX = e.touches[0].clientX;\r\n      const currentY = e.touches[0].clientY;\r\n      const diffX = currentX - startX;\r\n      const diffY = currentY - startY;\r\n      \r\n      // If already swiping, prevent default\r\n      if (isSwiping) {\r\n        e.preventDefault();\r\n        return;\r\n      }\r\n      \r\n      // Detect horizontal swipe\r\n      if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > threshold) {\r\n        e.preventDefault();\r\n        isDragging = true;\r\n        isSwiping = true;\r\n      }\r\n    };\r\n    \r\n    // Handle touch end\r\n    const handleTouchEnd = (e: TouchEvent): void => {\r\n      if (!this.calendar?.classList.contains(\"visible\")) return;\r\n      \r\n      const wasSwiping = isSwiping;\r\n      isSwiping = false;\r\n      \r\n      const touchEndTime = Date.now();\r\n      const touchDuration = touchEndTime - touchStartTime;\r\n      \r\n      // Process if touch was quick or we detected dragging\r\n      if ((touchDuration < 300 || isDragging) && !this.isTransitioning) {\r\n        const endX = e.changedTouches[0].clientX;\r\n        const endY = e.changedTouches[0].clientY;\r\n        \r\n        const diffX = endX - startX;\r\n        const diffY = endY - startY;\r\n        \r\n        // Consider only significant horizontal movements\r\n        if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > threshold) {\r\n          // Determine direction based on RTL mode\r\n          const isRTL = getComputedStyle(this).getPropertyValue('--jdp-direction').trim() === 'rtl';\r\n          \r\n          if ((isRTL && diffX < 0) || (!isRTL && diffX > 0)) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.changeMonth(1); // Next month\r\n          } else if ((isRTL && diffX > 0) || (!isRTL && diffX < 0)) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n            this.changeMonth(-1); // Previous month\r\n          }\r\n        }\r\n      }\r\n      \r\n      // Prevent click events if we were swiping\r\n      if (wasSwiping) {\r\n        e.preventDefault();\r\n      }\r\n    };\r\n    \r\n    // Handle touch cancel\r\n    const handleTouchCancel = (): void => {\r\n      isSwiping = false;\r\n      isDragging = false;\r\n    };\r\n    \r\n    // Set up calendar touch events\r\n    // Use explicit 'touchstart' type instead of string\r\n    this.calendar.addEventListener('touchstart', handleTouchStart as EventListener, { passive: true });\r\n    this.calendar.addEventListener('touchmove', handleTouchMove as EventListener, { passive: false });\r\n    this.calendar.addEventListener('touchend', handleTouchEnd as EventListener, { passive: false });\r\n    this.calendar.addEventListener('touchcancel', handleTouchCancel as EventListener);\r\n    \r\n    // Set up navigation button touch handlers\r\n    const prevMonthBtn = this.shadowRoot.getElementById(\"prev-month\");\r\n    const nextMonthBtn = this.shadowRoot.getElementById(\"next-month\");\r\n    \r\n    if (prevMonthBtn) {\r\n      prevMonthBtn.addEventListener('touchstart', (e: Event) => e.stopPropagation(), { passive: true });\r\n    }\r\n    \r\n    if (nextMonthBtn) {\r\n      nextMonthBtn.addEventListener('touchstart', (e: Event) => e.stopPropagation(), { passive: true });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Helper method to close all dropdowns\r\n   */\r\n  private closeAllDropdowns(): void {\r\n    if (!this.shadowRoot) return;\r\n    \r\n    const dropdowns = this.shadowRoot.querySelectorAll(\".select-content\");\r\n    dropdowns.forEach(dropdown => {\r\n      dropdown.classList.remove(\"open\");\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Helper method to toggle dropdown visibility\r\n   */\r\n  private toggleDropdown(dropdown: HTMLElement | null): void {\r\n    if (!dropdown) return;\r\n    \r\n    // Check if this dropdown is already open\r\n    const isCurrentlyOpen = dropdown.classList.contains(\"open\");\r\n    \r\n    // Close all dropdowns\r\n    this.closeAllDropdowns();\r\n    \r\n    // If the dropdown wasn't open, open it now\r\n    // This creates a toggle effect\r\n    if (!isCurrentlyOpen) {\r\n      // Open the dropdown\r\n      dropdown.classList.add(\"open\");\r\n      \r\n      // Find the selected item in this dropdown and scroll to it\r\n      // Use requestAnimationFrame for better timing with rendering\r\n      requestAnimationFrame(() => {\r\n        const selectedItem = dropdown.querySelector(\".select-item.selected\") as HTMLElement;\r\n        if (selectedItem) {\r\n          // Calculate the optimal scroll position - center the selected item\r\n          const scrollTop = selectedItem.offsetTop - \r\n            (dropdown.clientHeight / 2) + (selectedItem.clientHeight / 2);\r\n          \r\n          // Apply the scroll position\r\n          dropdown.scrollTop = Math.max(0, scrollTop);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Programmatically open the calendar\r\n   * Will close any other open calendar instances\r\n   */\r\n  public open(): void {\r\n    if (!this.calendar.classList.contains(\"visible\")) {\r\n      this.toggleCalendar();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Programmatically close the calendar\r\n   */\r\n  public close(): void {\r\n    if (this.calendar.classList.contains(\"visible\")) {\r\n      this.toggleCalendar();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set minimum date\r\n   */\r\n  public setMinDate(year: number, month: number, day: number): void {\r\n    this.minDate = [year, month, day];\r\n    if (this.calendar) {\r\n      this.renderCalendar();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set maximum date\r\n   */\r\n  public setMaxDate(year: number, month: number, day: number): void {\r\n    this.maxDate = [year, month, day];\r\n    if (this.calendar) {\r\n      this.renderCalendar();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if a date is within the allowed range\r\n   */\r\n  private isDateInRange(year: number, month: number, day: number): boolean {\r\n    if (!this.minDate && !this.maxDate) return true;\r\n    \r\n    const date = [year, month, day];\r\n    \r\n    if (this.minDate && date < this.minDate) return false;\r\n    if (this.maxDate && date > this.maxDate) return false;\r\n    \r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Check if a date is disabled\r\n   */\r\n  private isDateDisabled(year: number, month: number, day: number): boolean {\r\n    if (!this.disabledDatesFn) return false;\r\n    return this.disabledDatesFn(year, month, day);\r\n  }\r\n\r\n  private handleRangeSelection(day: number): void {\r\n    if (!this.isRangeMode) {\r\n      this.selectDate(day);\r\n      return;\r\n    }\r\n\r\n    const currentDate: DateTuple = [this.jalaliYear, this.jalaliMonth, day];\r\n\r\n    if (!this.isSelectingRange) {\r\n      // Start new range\r\n      this.rangeStart = currentDate;\r\n      this.rangeEnd = null;\r\n      this.isSelectingRange = true;\r\n    } else {\r\n      // Complete range\r\n      this.rangeEnd = currentDate;\r\n      this.isSelectingRange = false;\r\n\r\n      // Ensure range is in correct order (start before end)\r\n      if (this.rangeStart && this.rangeEnd) {\r\n        const comparison = this.compareDates(this.rangeStart, this.rangeEnd);\r\n        if (comparison > 0) {\r\n          // Swap start and end if they're in wrong order\r\n          [this.rangeStart, this.rangeEnd] = [this.rangeEnd, this.rangeStart];\r\n        }\r\n      }\r\n\r\n      // Format and display the range\r\n      this.formatAndSetValue();\r\n      \r\n      // Dispatch change event with range data\r\n      this.dispatchEvent(new CustomEvent(\"change\", {\r\n        detail: {\r\n          range: {\r\n            start: this.rangeStart,\r\n            end: this.rangeEnd\r\n          },\r\n          isRange: true\r\n        },\r\n        bubbles: true\r\n      }));\r\n      \r\n      // Close calendar\r\n      this.closeAllDropdowns();\r\n      this.toggleCalendar();\r\n    }\r\n\r\n    // Force a re-render of the calendar to update the range highlighting\r\n    this.renderCalendar();\r\n  }\r\n\r\n  // Add new methods for range selection\r\n  public setRange(start: DateTuple, end: DateTuple): void {\r\n    if (!this.isRangeMode) return;\r\n    \r\n    // Ensure range is in correct order\r\n    if (start > end) {\r\n      [start, end] = [end, start];\r\n    }\r\n    \r\n    this.rangeStart = [...start];\r\n    this.rangeEnd = [...end];\r\n    this.formatAndSetValue();\r\n    this.renderCalendar();\r\n  }\r\n\r\n  public getRange(): { start: DateTuple | null; end: DateTuple | null } {\r\n    return {\r\n      start: this.rangeStart ? [...this.rangeStart] : null,\r\n      end: this.rangeEnd ? [...this.rangeEnd] : null\r\n    };\r\n  }\r\n}\r\n\r\n// Register the custom element with the browser\r\n// Note: This is intentionally commented out because registration is handled in index.ts\r\n// Uncomment if you need standalone registration without index.ts\r\n// if (typeof window !== 'undefined' && !customElements.get('persian-datepicker-element')) {\r\n//   customElements.define('persian-datepicker-element', PersianDatePickerElement);\r\n// }\r\n\r\n// Export the class for direct usage\r\n","// Import the custom element class\r\nimport { PersianDatePickerElement } from './persian-datepicker-element';\r\n// Import the utility class\r\nimport { PersianDate } from './persian-date';\r\n// Import types from types directory\r\nimport type { \r\n  PersianDatePickerElementOptions, \r\n  PersianDateChangeEvent,\r\n  DateTuple,\r\n  PersianEvent\r\n} from './types';\r\n\r\n// Declare global window interface extension for TypeScript\r\ndeclare global {\r\n  interface Window {\r\n    PersianDatePickerElement?: typeof PersianDatePickerElement;\r\n  }\r\n}\r\n\r\n// Try to register the custom element with the browser\r\n// First check if we're in a browser environment and if customElements API exists\r\nconst isBrowser = typeof window !== 'undefined';\r\nconst hasCustomElements = isBrowser && typeof customElements !== 'undefined';\r\n\r\nif (hasCustomElements) {\r\n  // Only register if it's not already registered\r\n  if (!customElements.get('persian-datepicker-element')) {\r\n    try {\r\n      customElements.define('persian-datepicker-element', PersianDatePickerElement);\r\n      console.info('persian-datepicker-element registered successfully');\r\n    } catch (error) {\r\n      console.error('Error registering persian-datepicker-element:', error);\r\n    }\r\n  }\r\n}\r\n\r\n// Export the classes and types\r\nexport { PersianDatePickerElement, PersianDate };\r\nexport type { \r\n  PersianDatePickerElementOptions, \r\n  PersianDateChangeEvent,\r\n  DateTuple,\r\n  PersianEvent\r\n};\r\n\r\n// Default export for convenient usage\r\nexport default PersianDatePickerElement; "],"names":[],"mappings":"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"}