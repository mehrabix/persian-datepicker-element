{"version":3,"file":"persian-datepicker-element.min.js","sources":["webpack://PersianDatePickerElement/./src/persian-date.ts","webpack://PersianDatePickerElement/./src/utils/hijri-utils.ts","webpack://PersianDatePickerElement/./src/utils/event-utils.ts","webpack://PersianDatePickerElement/./src/persian-datepicker-element.ts","webpack://PersianDatePickerElement/./src/index.ts"],"sourcesContent":["/**\r\n * Jalali (Shamsi) Calendar utilities\r\n */\r\nexport const PersianDate = {\r\n  g_days_in_month: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\r\n  j_days_in_month: [31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 29],\r\n  \r\n  jalaliToGregorian: function(j_y: number, j_m: number, j_d: number): [number, number, number] {\r\n    j_y = parseInt(j_y.toString());\r\n    j_m = parseInt(j_m.toString());\r\n    j_d = parseInt(j_d.toString());\r\n    \r\n    const jy = j_y - 979;\r\n    const jm = j_m - 1;\r\n    const jd = j_d - 1;\r\n    \r\n    let j_day_no = 365 * jy + Math.floor(jy / 33) * 8 + Math.floor((jy % 33 + 3) / 4);\r\n    for (let i = 0; i < jm; ++i) j_day_no += this.j_days_in_month[i];\r\n    \r\n    j_day_no += jd;\r\n    \r\n    let g_day_no = j_day_no + 79;\r\n    \r\n    let gy = 1600 + 400 * Math.floor(g_day_no / 146097);\r\n    g_day_no = g_day_no % 146097;\r\n    \r\n    let leap = true;\r\n    if (g_day_no >= 36525) {\r\n      g_day_no--;\r\n      gy += 100 * Math.floor(g_day_no / 36524);\r\n      g_day_no = g_day_no % 36524;\r\n      \r\n      if (g_day_no >= 365) g_day_no++;\r\n      else leap = false;\r\n    }\r\n    \r\n    gy += 4 * Math.floor(g_day_no / 1461);\r\n    g_day_no %= 1461;\r\n    \r\n    if (g_day_no >= 366) {\r\n      leap = false;\r\n      g_day_no--;\r\n      gy += Math.floor(g_day_no / 365);\r\n      g_day_no = g_day_no % 365;\r\n    }\r\n    \r\n    let i = 0;\r\n    for (; g_day_no >= this.g_days_in_month[i] + (i === 1 && leap ? 1 : 0); i++) {\r\n      g_day_no -= this.g_days_in_month[i] + (i === 1 && leap ? 1 : 0);\r\n    }\r\n      \r\n    const gm = i + 1;\r\n    const gd = g_day_no + 1;\r\n    \r\n    return [gy, gm, gd];\r\n  },\r\n  \r\n  gregorianToJalali: function(g_y: number, g_m: number, g_d: number): [number, number, number] {\r\n    g_y = parseInt(g_y.toString());\r\n    g_m = parseInt(g_m.toString());\r\n    g_d = parseInt(g_d.toString());\r\n    \r\n    const gy = g_y - 1600;\r\n    const gm = g_m - 1;\r\n    const gd = g_d - 1;\r\n    \r\n    let g_day_no = 365 * gy + Math.floor((gy + 3) / 4) - Math.floor((gy + 99) / 100) + Math.floor((gy + 399) / 400);\r\n    \r\n    for (let i = 0; i < gm; ++i)\r\n      g_day_no += this.g_days_in_month[i];\r\n      \r\n    if (gm > 1 && ((gy % 4 === 0 && gy % 100 !== 0) || (gy % 400 === 0)))\r\n      g_day_no++;\r\n      \r\n    g_day_no += gd;\r\n    \r\n    let j_day_no = g_day_no - 79;\r\n    const j_np = Math.floor(j_day_no / 12053);\r\n    j_day_no = j_day_no % 12053;\r\n    \r\n    let jy = 979 + 33 * j_np + 4 * Math.floor(j_day_no / 1461);\r\n    \r\n    j_day_no %= 1461;\r\n    \r\n    if (j_day_no >= 366) {\r\n      jy += Math.floor((j_day_no - 1) / 365);\r\n      j_day_no = (j_day_no - 1) % 365;\r\n    }\r\n    \r\n    let i = 0;\r\n    for (; i < 11 && j_day_no >= this.j_days_in_month[i]; ++i) {\r\n      j_day_no -= this.j_days_in_month[i];\r\n    }\r\n    \r\n    const jm = i + 1;\r\n    const jd = j_day_no + 1;\r\n    \r\n    return [jy, jm, jd];\r\n  },\r\n  \r\n  isLeapJalaliYear: function(year: number): boolean {\r\n    const breaks = [1, 5, 9, 13, 17, 22, 26, 30];\r\n    return breaks.includes(year % 33);\r\n  },\r\n  \r\n  getDaysInMonth: function(year: number, month: number): number {\r\n    if (month < 1 || month > 12) return 0;\r\n    if (month <= 6) return 31;\r\n    if (month <= 11) return 30;\r\n    // Month 12 (Esfand)\r\n    return this.isLeapJalaliYear(year) ? 30 : 29;\r\n  },\r\n  \r\n  getMonthName: function(month: number): string {\r\n    const monthNames = [\r\n      \"فروردین\", \"اردیبهشت\", \"خرداد\", \"تیر\", \"مرداد\", \"شهریور\",\r\n      \"مهر\", \"آبان\", \"آذر\", \"دی\", \"بهمن\", \"اسفند\"\r\n    ];\r\n    return monthNames[month - 1];\r\n  },\r\n  \r\n  getDayOfWeek: function(jYear: number, jMonth: number, jDay: number): number {\r\n    const gdate = this.jalaliToGregorian(jYear, jMonth, jDay);\r\n    const date = new Date(gdate[0], gdate[1]-1, gdate[2]);\r\n    return date.getDay();\r\n  },\r\n  \r\n  /**\r\n   * Returns the number of days in a Jalali year\r\n   */\r\n  getDaysInYear: function(year: number): number {\r\n    return this.isLeapJalaliYear(year) ? 366 : 365;\r\n  },\r\n  \r\n  /**\r\n   * Validates a Jalali date\r\n   */\r\n  isValidDate: function(year: number, month: number, day: number): boolean {\r\n    if (year < 0 || month < 1 || month > 12 || day < 1) return false;\r\n    return day <= this.getDaysInMonth(year, month);\r\n  }\r\n}; ","/**\r\n * Utilities for converting between Hijri (Islamic) and Jalali (Persian) calendars\r\n * \r\n * This implementation uses the Umm al-Qura calendar system which is used in many\r\n * Islamic countries and is accurate for contemporary dates\r\n */\r\n\r\n/**\r\n * Converts Hijri date to Gregorian date\r\n * \r\n * @param hy Hijri year\r\n * @param hm Hijri month (1-12)\r\n * @param hd Hijri day (1-30)\r\n * @returns Array [year, month, day] with Gregorian date\r\n */\r\nexport function hijriToGregorian(hy: number, hm: number, hd: number): [number, number, number] {\r\n  // Ensure valid input\r\n  if (hm < 1 || hm > 12 || hd < 1 || hd > 30) {\r\n    throw new Error('Invalid Hijri date');\r\n  }\r\n  \r\n  // Days since Hijri epoch (approximately July 19, 622 CE)\r\n  // Algorithm based on Umm al-Qura calendar used in Saudi Arabia\r\n  \r\n  // Convert Hijri to days since Hijri epoch\r\n  const epochDays = Math.floor((hy - 1) * 354.367) + // Average Hijri year is 354.367 days\r\n                    Math.floor((hm - 1) * 29.5) + // Average Hijri month is 29.5 days\r\n                    (hd - 1);\r\n  \r\n  // Convert to Gregorian date (Julian days + days since Hijri epoch + Gregorian epoch adjustment)\r\n  const julianDays = epochDays + 1948439.5; // Adjustment for Hijri epoch in Julian days\r\n  \r\n  // Convert Julian days to Gregorian date\r\n  return julianDaysToGregorian(julianDays);\r\n}\r\n\r\n/**\r\n * Converts Julian days to Gregorian date\r\n * \r\n * @param julianDays Julian day count\r\n * @returns Array [year, month, day] with Gregorian date\r\n */\r\nfunction julianDaysToGregorian(julianDays: number): [number, number, number] {\r\n  const z = Math.floor(julianDays + 0.5);\r\n  const a = Math.floor((z - 1867216.25) / 36524.25);\r\n  const b = z + 1 + a - Math.floor(a / 4);\r\n  const c = b + 1524;\r\n  const d = Math.floor((c - 122.1) / 365.25);\r\n  const e = Math.floor(365.25 * d);\r\n  const f = Math.floor((c - e) / 30.6001);\r\n  \r\n  // Calculate day, month, and year\r\n  const day = Math.floor(c - e - Math.floor(30.6001 * f));\r\n  let month = f - 1 - 12 * Math.floor(f / 14);\r\n  let year = d - 4715 - Math.floor((7 + month) / 10);\r\n  \r\n  // Convert to 1-based month\r\n  if (month < 1) {\r\n    month += 12;\r\n    year -= 1;\r\n  }\r\n  \r\n  return [year, month, day];\r\n}\r\n\r\n/**\r\n * Converts Gregorian date to Jalali (Persian) date\r\n * \r\n * @param gy Gregorian year\r\n * @param gm Gregorian month (1-12)\r\n * @param gd Gregorian day (1-31)\r\n * @returns Array [year, month, day] with Jalali date\r\n */\r\nexport function gregorianToJalali(gy: number, gm: number, gd: number): [number, number, number] {\r\n  // Implementation based on jalali.js algorithm\r\n  const g_days_in_month = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n  const j_days_in_month = [31, 31, 31, 31, 31, 31, 30, 30, 30, 30, 30, 29];\r\n  \r\n  gy = parseInt(gy.toString());\r\n  gm = parseInt(gm.toString());\r\n  gd = parseInt(gd.toString());\r\n  \r\n  // Check if year is leap year and adjust February days\r\n  const isLeapYear = (gy % 4 === 0 && gy % 100 !== 0) || (gy % 400 === 0);\r\n  g_days_in_month[1] = isLeapYear ? 29 : 28;\r\n  \r\n  // Convert to days since Gregorian epoch\r\n  let dayOfYear = gd;\r\n  for (let i = 0; i < gm - 1; i++) {\r\n    dayOfYear += g_days_in_month[i];\r\n  }\r\n  \r\n  // Calculate Julian day number\r\n  const jdn = Math.floor((gy + Math.floor((gm - 8) / 6) + 100100) * 1461 / 4)\r\n            + Math.floor(((gm + 9) % 12 + 1) * 153 / 5)\r\n            + gd - 34840408;\r\n  const d = jdn % 1461;\r\n  const jy = Math.floor(jdn / 1461) - 2820 + 474;\r\n  \r\n  // Calculate Jalali year\r\n  const jYear = jy;\r\n  \r\n  // Calculate Jalali month and day\r\n  let dayOfYearJalali = d;\r\n  if (dayOfYearJalali >= 366) {\r\n    dayOfYearJalali -= 366;\r\n    const yearsToAdd = Math.floor(dayOfYearJalali / 365);\r\n    dayOfYearJalali %= 365;\r\n  }\r\n  \r\n  let jMonth = 0;\r\n  let jDay = dayOfYearJalali;\r\n  \r\n  // Find month and day\r\n  while (jDay >= j_days_in_month[jMonth]) {\r\n    jDay -= j_days_in_month[jMonth];\r\n    jMonth++;\r\n  }\r\n  \r\n  return [jYear, jMonth + 1, jDay + 1];\r\n}\r\n\r\n/**\r\n * Converts Hijri date to Jalali date\r\n * \r\n * @param hy Hijri year\r\n * @param hm Hijri month (1-12)\r\n * @param hd Hijri day (1-30)\r\n * @returns Array [year, month, day] with Jalali date\r\n */\r\nexport function hijriToJalali(hy: number, hm: number, hd: number): [number, number, number] {\r\n  // First convert to Gregorian\r\n  const [gy, gm, gd] = hijriToGregorian(hy, hm, hd);\r\n  \r\n  // Then convert to Jalali\r\n  return gregorianToJalali(gy, gm, gd);\r\n}\r\n\r\n/**\r\n * Calculates Jalali date for a Hijri event in the current Persian year\r\n * \r\n * @param currentPersianYear Current Jalali/Persian year\r\n * @param hijriMonth Hijri month (1-12)\r\n * @param hijriDay Hijri day (1-30)\r\n * @returns Array [month, day] with Jalali date or null if the event doesn't occur in the current year\r\n */\r\nexport function getHijriEventDateInJalaliYear(currentPersianYear: number, hijriMonth: number, hijriDay: number): [number, number] | null {\r\n  // Get current date\r\n  const today = new Date();\r\n  \r\n  // Approximate current Hijri year (this is rough approximation, might be off by 1 year)\r\n  const currentHijriYear = Math.floor(currentPersianYear - 621.5 + 0.74 * (currentPersianYear - 621.5)) - 202;\r\n  \r\n  // Try current and next Hijri year (sometimes events span across Persian years)\r\n  for (let yearOffset = 0; yearOffset <= 1; yearOffset++) {\r\n    try {\r\n      const hijriYear = currentHijriYear + yearOffset;\r\n      \r\n      // Get Jalali date for this Hijri event\r\n      const [jYear, jMonth, jDay] = hijriToJalali(hijriYear, hijriMonth, hijriDay);\r\n      \r\n      // Check if the event falls in the requested Persian year\r\n      if (jYear === currentPersianYear) {\r\n        return [jMonth, jDay];\r\n      }\r\n    } catch (error) {\r\n      // Skip any conversion errors and continue\r\n      console.warn(`Error converting Hijri date (${currentHijriYear}, ${hijriMonth}, ${hijriDay})`, error);\r\n    }\r\n  }\r\n  \r\n  // Event doesn't occur in the current Persian year\r\n  return null;\r\n}\r\n\r\n/**\r\n * Gets the estimated Hijri date (Islamic date) for today\r\n * \r\n * @returns An array of [year, month, day] for today's Hijri date\r\n */\r\nexport function getCurrentHijriDate(): [number, number, number] {\r\n  // Get today's Gregorian date\r\n  const today = new Date();\r\n  const gyear = today.getFullYear();\r\n  const gmonth = today.getMonth() + 1;\r\n  const gday = today.getDate();\r\n  \r\n  // Use approximate calculation based on mathematical estimation\r\n  // (This isn't perfectly accurate but works for most contemporary dates)\r\n  \r\n  // Julian date calculation\r\n  const jd = (1461 * (gyear + 4800 + (gmonth - 14) / 12)) / 4 +\r\n           (367 * (gmonth - 2 - 12 * ((gmonth - 14) / 12))) / 12 -\r\n           (3 * ((gyear + 4900 + (gmonth - 14) / 12) / 100)) / 4 +\r\n           gday - 32075;\r\n           \r\n  // Hijri date calculation\r\n  const l = Math.floor(jd) - 1948440 + 10632;\r\n  const n = Math.floor((l - 1) / 10631);\r\n  const l1 = l - 10631 * n + 354;\r\n  const j = (Math.floor((10985 - l1) / 5316)) * (Math.floor((50 * l1) / 17719)) + \r\n           (Math.floor(l1 / 5670)) * (Math.floor((43 * l1) / 15238));\r\n  const l2 = l1 - (Math.floor((30 - j) / 15)) * (Math.floor((17719 * j) / 50)) - \r\n           (Math.floor(j / 16)) * (Math.floor((15238 * j) / 43)) + 29;\r\n           \r\n  const hmonth = Math.floor((24 * l2) / 709);\r\n  const hday = l2 - Math.floor((709 * hmonth) / 24);\r\n  const hyear = 30 * n + j - 30;\r\n  \r\n  return [hyear, hmonth, hday];\r\n}\r\n\r\nexport default {\r\n  hijriToGregorian,\r\n  gregorianToJalali,\r\n  hijriToJalali,\r\n  getHijriEventDateInJalaliYear,\r\n  getCurrentHijriDate\r\n}; ","import { PersianEvent } from '../types';\n// Import the original JSON file from the Persian Calendar repo\nimport persianCalendarData from '../data/persian-calendar-repo/PersianCalendar/data/events.json';\n// Import the Hijri utilities for date conversion\nimport HijriUtils from './hijri-utils';\nimport { PersianDate } from '../persian-date';\n\n// Fallback events in case JSON loading fails\nconst fallbackEvents: PersianEvent[] = [\n  { title: 'عید نوروز', month: 1, day: 1, type: 'Iran', holiday: true },\n  { title: 'روز طبیعت', month: 1, day: 13, type: 'Iran', holiday: true },\n  { title: 'عید فطر', month: 4, day: 5, type: 'Religious', holiday: true },\n  { title: 'عید قربان', month: 6, day: 10, type: 'Religious', holiday: true },\n  { title: 'تاسوعا', month: 7, day: 9, type: 'Religious', holiday: true },\n  { title: 'عاشورا', month: 7, day: 10, type: 'Religious', holiday: true },\n];\n\n/**\n * Maps events from the Persian Calendar repo format to our PersianEvent format\n */\nfunction mapPersianCalendarEvents(): PersianEvent[] {\n  try {\n    let allEvents: PersianEvent[] = [];\n    \n    // Process Persian Calendar events\n    if (persianCalendarData && Array.isArray(persianCalendarData[\"Persian Calendar\"])) {\n      const persianEvents = persianCalendarData[\"Persian Calendar\"].map((event: any) => ({\n        title: event.title,\n        month: event.month,\n        day: event.day,\n        type: event.type,\n        holiday: event.holiday\n      }));\n      \n      allEvents = [...persianEvents];\n    }\n    \n    // Process Hijri Calendar events - Convert them to current Jalali year\n    if (persianCalendarData && Array.isArray(persianCalendarData[\"Hijri Calendar\"])) {\n      // Get current Jalali year\n      const today = new Date();\n      const jalaliToday = PersianDate.gregorianToJalali(\n        today.getFullYear(),\n        today.getMonth() + 1,\n        today.getDate()\n      );\n      const currentJalaliYear = jalaliToday[0];\n      \n      // Process each Hijri event\n      const hijriEvents: PersianEvent[] = [];\n      \n      persianCalendarData[\"Hijri Calendar\"].forEach((event: any) => {\n        // Convert Hijri date to Jalali for current year\n        const jalaliDate = HijriUtils.getHijriEventDateInJalaliYear(\n          currentJalaliYear, \n          event.month, \n          event.day\n        );\n        \n        // Only add the event if it occurs in the current Jalali year\n        if (jalaliDate) {\n          const [jMonth, jDay] = jalaliDate;\n          \n          hijriEvents.push({\n            title: event.title,\n            month: jMonth,\n            day: jDay,\n            type: event.type,\n            holiday: event.holiday,\n            // Add original Hijri date for reference\n            originalHijriMonth: event.month,\n            originalHijriDay: event.day\n          });\n        }\n      });\n      \n      // Add converted Hijri events to all events\n      allEvents = [...allEvents, ...hijriEvents];\n    }\n    \n    if (allEvents.length === 0) {\n      console.warn('Persian Calendar data not found in expected format, using fallback events');\n      return fallbackEvents;\n    }\n    \n    return allEvents;\n  } catch (error) {\n    console.error('Error mapping Persian Calendar events:', error);\n    return fallbackEvents;\n  }\n}\n\n// Cache the mapped events to avoid reprocessing on every call\nconst mappedEvents = mapPersianCalendarEvents();\n\n/**\n * Event utilities for working with Persian calendar events\n */\nexport const EventUtils = {\n  /**\n   * Returns all Persian calendar events mapped from the original JSON data\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Religious'])\n   * @param includeAllTypes If true, includes all event types regardless of filtering\n   */\n  getAllEvents(eventTypes?: string[], includeAllTypes: boolean = false): PersianEvent[] {\n    let filteredEvents = [...mappedEvents];\n    \n    // If specific event types are provided and we're not including all types, filter by those types\n    if (eventTypes && eventTypes.length > 0 && !includeAllTypes) {\n      filteredEvents = filteredEvents.filter(event => eventTypes.includes(event.type));\n    }\n    \n    return filteredEvents;\n  },\n\n  /**\n   * Returns all events for a given month and day\n   * @param month The month number (1-12)\n   * @param day The day number (1-31)\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Religious'])\n   * @param includeAllTypes If true, includes all event types regardless of filtering\n   */\n  getEvents(month: number, day: number, eventTypes?: string[], includeAllTypes: boolean = false): PersianEvent[] {\n    const events = this.getAllEvents(eventTypes, includeAllTypes);\n    return events.filter(event => \n      event.month === month && \n      event.day === day\n    );\n  },\n\n  /**\n   * Checks if the specified date is a holiday\n   * @param month The month number (1-12)\n   * @param day The day number (1-31)\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Religious'])\n   * @param includeAllTypes If true, includes all event types regardless of filtering\n   */\n  isHoliday(month: number, day: number, eventTypes?: string[], includeAllTypes: boolean = false): boolean {\n    const events = this.getEvents(month, day, eventTypes, includeAllTypes);\n    return events.some(event => event.holiday === true);\n  },\n\n  /**\n   * Gets holiday event titles for a specific date\n   * @param month The month number (1-12)\n   * @param day The day number (1-31)\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Religious'])\n   * @param includeAllTypes If true, includes all event types regardless of filtering\n   */\n  getHolidayTitles(month: number, day: number, eventTypes?: string[], includeAllTypes: boolean = false): string[] {\n    const events = this.getEvents(month, day, eventTypes, includeAllTypes);\n    return events\n      .filter(event => event.holiday === true)\n      .map(event => event.title);\n  },\n\n  /**\n   * Gets all event titles for a specific date\n   * @param month The month number (1-12)\n   * @param day The day number (1-31)\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Religious'])\n   * @param includeAllTypes If true, includes all event types regardless of filtering\n   */\n  getAllEventTitles(month: number, day: number, eventTypes?: string[], includeAllTypes: boolean = false): string[] {\n    const events = this.getEvents(month, day, eventTypes, includeAllTypes);\n    return events.map(event => event.title);\n  },\n  \n  /**\n   * Gets events of a specific type\n   * @param type The event type (e.g., 'Iran', 'Religious')\n   * @param includeAllTypes If true, includes all event types\n   * @param holidaysOnly If true, only returns holiday events\n   */\n  getEventsByType(type: string, includeAllTypes: boolean = false, holidaysOnly: boolean = false): PersianEvent[] {\n    const events = includeAllTypes \n      ? mappedEvents \n      : mappedEvents.filter(event => event.type === type);\n    \n    return holidaysOnly \n      ? events.filter(event => event.holiday === true) \n      : events;\n  },\n  \n  /**\n   * Get all holidays\n   * @param eventTypes Optional array of event types to filter by (e.g., ['Iran', 'Religious'])\n   * @param includeAllTypes If true, includes all event types regardless of filtering\n   */\n  getAllHolidays(eventTypes?: string[], includeAllTypes: boolean = false): PersianEvent[] {\n    const events = this.getAllEvents(eventTypes, includeAllTypes);\n    return events.filter(event => event.holiday === true);\n  },\n\n  /**\n   * Get available event types\n   */\n  getEventTypes(): string[] {\n    const types = new Set<string>();\n    mappedEvents.forEach(event => types.add(event.type));\n    return Array.from(types);\n  },\n\n  /**\n   * Get the source data metadata\n   */\n  getSourceMetadata(): { [key: string]: string } {\n    return persianCalendarData.Source || {};\n  },\n  \n  /**\n   * Refresh the events data to update Hijri calendar events for the current year\n   * This should be called when the component is initialized or the year changes\n   */\n  refreshEvents(): PersianEvent[] {\n    // Recalculate all events (especially Hijri events for current year)\n    const refreshedEvents = mapPersianCalendarEvents();\n    \n    // Replace the cached events with the new ones\n    while (mappedEvents.length > 0) {\n      mappedEvents.pop();\n    }\n    \n    refreshedEvents.forEach(event => mappedEvents.push(event));\n    \n    return [...mappedEvents];\n  }\n};\n\nexport default EventUtils; ","import { PersianDate } from './persian-date';\nimport { EventUtils } from './utils/event-utils';\nimport { \n  PersianDatePickerElementOptions, \n  PersianDateChangeEvent,\n  DateTuple,\n  CSSVariableMap\n} from './types';\n\n// Import the CSS as a string\nconst styles = `:host {\n  /* Color scheme */\n  --jdp-primary: #0891b2;\n  --jdp-primary-hover: #0e7490;\n  --jdp-primary-foreground: #ffffff;\n  \n  /* Neutral colors */\n  --jdp-background: #ffffff;\n  --jdp-foreground: #1e293b;\n  --jdp-muted: #f1f5f9;\n  --jdp-muted-foreground: #64748b;\n  --jdp-border: #e2e8f0;\n  --jdp-ring: #0284c7;\n  \n  /* Holiday colors */\n  --jdp-holiday-color: #ef4444;\n  --jdp-holiday-bg: #fee2e2;\n  --jdp-holiday-hover-bg: #fecaca;\n  \n  /* Typography */\n  --jdp-font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\n  --jdp-font-size: 14px;\n  --jdp-line-height: 1.5;\n  --jdp-font-weight: 400;\n  --jdp-font-weight-medium: 500;\n  \n  /* Day name typography */\n  --jdp-day-name-font-size: 12px;\n  --jdp-day-name-font-weight: 400;\n  \n  /* Day cell typography */\n  --jdp-day-font-size: 13px;\n  --jdp-day-font-weight: 400;\n  \n  /* Month year typography */\n  --jdp-month-year-font-size: 14px;\n  --jdp-month-year-font-weight: 500;\n  \n  /* Spacing */\n  --jdp-spacing-xs: 4px;\n  --jdp-spacing-sm: 8px;\n  --jdp-spacing-md: 16px;\n  --jdp-spacing-lg: 24px;\n  \n  /* Input field */\n  --jdp-input-padding-x: 14px;\n  --jdp-input-padding-y: 10px;\n  --jdp-input-border-width: 1px;\n  --jdp-input-border-color: var(--jdp-border);\n  --jdp-input-border-radius: var(--jdp-border-radius);\n  --jdp-input-focus-ring-width: 2px;\n  --jdp-input-focus-ring-color: rgba(2, 132, 199, 0.25);\n  \n  /* Calendar popup */\n  --jdp-calendar-width: 280px;\n  --jdp-calendar-padding: var(--jdp-spacing-md);\n  --jdp-calendar-border-width: 1px;\n  --jdp-calendar-border-color: var(--jdp-border);\n  --jdp-calendar-border-radius: var(--jdp-border-radius);\n  --jdp-calendar-shadow: 0px 10px 38px -10px rgba(22, 23, 24, 0.35), 0px 10px 20px -15px rgba(22, 23, 24, 0.2);\n  --jdp-calendar-z-index: 10;\n  \n  /* Navigation buttons */\n  --jdp-nav-button-size: 30px;\n  --jdp-nav-button-bg: var(--jdp-muted);\n  --jdp-nav-button-bg-hover: var(--jdp-border);\n  --jdp-nav-button-border-radius: var(--jdp-border-radius);\n  --jdp-nav-arrow-size: 8px;\n  --jdp-nav-arrow-thickness: 2px;\n  --jdp-nav-arrow-color: var(--jdp-foreground);\n  \n  /* Day grid */\n  --jdp-day-cell-size: 32px;\n  --jdp-day-cell-margin: 1px;\n  --jdp-day-cell-border-radius: var(--jdp-border-radius);\n  \n  /* States */\n  --jdp-day-hover-bg: var(--jdp-muted);\n  --jdp-day-selected-bg: var(--jdp-primary);\n  --jdp-day-selected-color: var(--jdp-primary-foreground);\n  --jdp-day-today-border-color: var(--jdp-primary);\n  --jdp-day-today-border-width: 1px;\n  --jdp-day-disabled-opacity: 0.4;\n  \n  /* Animations */\n  --jdp-transition-duration: 0.2s;\n  --jdp-fade-from-y: -4px;\n  --jdp-fade-from-y-reverse: 4px;\n  --jdp-month-transition-duration: 0.3s;\n  \n  /* Layout */\n  --jdp-border-radius: 0.5rem;\n  --jdp-direction: rtl;\n}\n\n* {\n  box-sizing: border-box;\n  direction: var(--jdp-direction);\n}\n\n.picker-container {\n  position: relative;\n  display: inline-block;\n  width: 100%;\n  font-family: var(--jdp-font-family);\n  font-size: var(--jdp-font-size);\n  line-height: var(--jdp-line-height);\n  font-weight: var(--jdp-font-weight);\n}\n\ninput {\n  width: 100%;\n  padding: var(--jdp-input-padding-y) var(--jdp-input-padding-x);\n  border-radius: var(--jdp-input-border-radius);\n  border: var(--jdp-input-border-width) solid var(--jdp-input-border-color);\n  font-size: var(--jdp-font-size);\n  line-height: var(--jdp-line-height);\n  font-family: inherit;\n  background-color: var(--jdp-background);\n  color: var(--jdp-foreground);\n  cursor: pointer;\n  outline: none;\n  transition: all var(--jdp-transition-duration) ease;\n  text-align: right;\n}\n\ninput:focus {\n  border-color: var(--jdp-ring);\n  box-shadow: 0 0 0 var(--jdp-input-focus-ring-width) var(--jdp-input-focus-ring-color);\n}\n\n.calendar {\n  display: none;\n  position: absolute;\n  right: 0;\n  width: var(--jdp-calendar-width);\n  background: var(--jdp-background);\n  border: var(--jdp-calendar-border-width) solid var(--jdp-calendar-border-color);\n  border-radius: var(--jdp-calendar-border-radius);\n  box-shadow: var(--jdp-calendar-shadow);\n  padding: var(--jdp-calendar-padding);\n  text-align: center;\n  z-index: var(--jdp-calendar-z-index);\n  touch-action: manipulation; /* Allow pan-y but prevent browser handling of horizontal swipes */\n  -webkit-overflow-scrolling: none; /* Prevent iOS scrolling */\n  -webkit-user-select: none; /* Prevent text selection during swipe */\n  user-select: none;\n  transform: translateZ(0); /* Hardware acceleration */\n  will-change: transform; /* Hint to browser */\n  backface-visibility: hidden; /* Prevent flickering */\n  contain: layout style; /* Improve performance by isolating the container */\n}\n\n.calendar.position-bottom {\n  top: calc(100% + 5px);\n  animation: fadeInFromTop var(--jdp-transition-duration) ease;\n}\n\n.calendar.position-top {\n  bottom: calc(100% + 5px);\n  animation: fadeInFromBottom var(--jdp-transition-duration) ease;\n}\n\n.calendar.visible {\n  display: block;\n}\n\n@keyframes fadeInFromTop {\n  from { opacity: 0; transform: translateY(var(--jdp-fade-from-y)); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n@keyframes fadeInFromBottom {\n  from { opacity: 0; transform: translateY(var(--jdp-fade-from-y-reverse)); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: var(--jdp-spacing-md);\n}\n\n.month-year {\n  font-weight: var(--jdp-month-year-font-weight);\n  font-size: var(--jdp-month-year-font-size);\n  color: var(--jdp-foreground);\n  transition: opacity var(--jdp-transition-duration) ease;\n}\n\n.month-year.fade {\n  opacity: 0;\n}\n\n.days-wrapper {\n  position: relative;\n  touch-action: pan-y; /* Allow vertical scrolling but handle horizontal ourselves */\n  overflow: visible; /* Allow event tooltips to be visible outside the container */\n  z-index: 1; /* Ensure tooltips are visible above other elements */\n  contain: layout; /* Improve performance */\n  isolation: isolate; /* Create new stacking context */\n}\n\n.days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  transition: transform var(--jdp-month-transition-duration) ease, opacity var(--jdp-month-transition-duration) ease;\n  will-change: transform, opacity; /* Hint to browser */\n  transform: translateZ(0); /* Hardware acceleration */\n  backface-visibility: hidden; /* Prevent flickering */\n  position: relative; /* Position for correct animation */\n  contain: layout; /* Improve performance */\n}\n\n.days.slide-left, .days.slide-right {\n  /* Keep animation isolated within container without cutting off tooltips */\n  isolation: isolate;\n}\n\n.days.slide-left {\n  animation: slideInLeft var(--jdp-month-transition-duration) ease;\n}\n\n.days.slide-right {\n  animation: slideInRight var(--jdp-month-transition-duration) ease;\n}\n\n@keyframes slideInLeft {\n  from { \n    opacity: 0; \n    transform: translateX(-10%) translateZ(0);\n    pointer-events: none; /* Don't capture events during animation */ \n  }\n  to { \n    opacity: 1; \n    transform: translateX(0) translateZ(0);\n    pointer-events: auto; /* Restore events after animation */  \n  }\n}\n\n@keyframes slideInRight {\n  from { \n    opacity: 0; \n    transform: translateX(10%) translateZ(0); \n    pointer-events: none; /* Don't capture events during animation */\n  }\n  to { \n    opacity: 1; \n    transform: translateX(0) translateZ(0);\n    pointer-events: auto; /* Restore events after animation */ \n  }\n}\n\n/* Ensure tooltips stay visible even during animations */\n.day {\n  position: relative; /* Required for tooltip positioning */\n  z-index: 1; /* Base z-index */\n  touch-action: manipulation; /* Improve touch behavior */\n  isolation: isolate; /* Create new stacking context for each day */\n}\n\n.day:hover {\n  z-index: 2; /* Raise z-index on hover to keep tooltip on top */\n}\n\n.nav-button {\n  background: var(--jdp-nav-button-bg);\n  border: none;\n  border-radius: var(--jdp-nav-button-border-radius);\n  width: var(--jdp-nav-button-size);\n  height: var(--jdp-nav-button-size);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all var(--jdp-transition-duration) ease;\n  position: relative;\n  touch-action: manipulation; /* Improve touch behavior */\n  will-change: transform, background-color; /* Optimize navigation button animations */\n}\n\n.nav-button:hover {\n  background: var(--jdp-nav-button-bg-hover);\n}\n\n.nav-button:active {\n  transform: translateY(1px);\n}\n\n.nav-button::before {\n  content: '';\n  display: block;\n  width: var(--jdp-nav-arrow-size);\n  height: var(--jdp-nav-arrow-size);\n  border-top: var(--jdp-nav-arrow-thickness) solid var(--jdp-nav-arrow-color);\n  border-right: var(--jdp-nav-arrow-thickness) solid var(--jdp-nav-arrow-color);\n  position: absolute;\n}\n\n.nav-button.prev::before {\n  transform: rotate(45deg);\n  right: 11px;\n  left: auto;\n}\n\n.nav-button.next::before {\n  transform: rotate(225deg);\n  left: 11px;\n  right: auto;\n}\n\n.day-names {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  margin-bottom: var(--jdp-spacing-sm);\n}\n\n.day-name {\n  font-size: var(--jdp-day-name-font-size);\n  font-weight: var(--jdp-day-name-font-weight);\n  color: var(--jdp-muted-foreground);\n  padding: var(--jdp-spacing-xs) 0;\n  text-align: center;\n}\n\n.day {\n  aspect-ratio: 1/1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--jdp-day-cell-border-radius);\n  font-size: var(--jdp-day-font-size);\n  font-weight: var(--jdp-day-font-weight);\n  cursor: pointer;\n  transition: var(--jdp-transition-duration) ease;\n  margin: var(--jdp-day-cell-margin);\n  position: relative;\n  touch-action: manipulation; /* Add touch action manipulation */\n  -webkit-tap-highlight-color: transparent; /* Remove tap highlight color on mobile */\n  -webkit-user-select: none; /* Prevent text selection */\n  user-select: none;\n}\n\n.day:hover:not(.empty):not(.disabled) {\n  background: var(--jdp-day-hover-bg);\n}\n\n.day.selected {\n  background: var(--jdp-day-selected-bg);\n  color: var(--jdp-day-selected-color);\n}\n\n.day.today:not(.selected) {\n  border: var(--jdp-day-today-border-width) solid var(--jdp-day-today-border-color);\n}\n\n.day.empty {\n  cursor: default;\n}\n\n.day.disabled {\n  opacity: var(--jdp-day-disabled-opacity);\n  cursor: not-allowed;\n}\n\n/* Holiday styles */\n.day.holiday:not(.selected) {\n  color: var(--jdp-holiday-color);\n  background-color: var(--jdp-holiday-bg);\n  font-weight: var(--jdp-font-weight-medium);\n}\n\n.day.holiday:hover:not(.selected):not(.disabled) {\n  background-color: var(--jdp-holiday-hover-bg);\n}\n\n.day.friday {\n  color: var(--jdp-holiday-color);\n}\n\n.event-tooltip {\n  position: absolute;\n  background: var(--jdp-background);\n  border: 1px solid var(--jdp-border);\n  border-radius: var(--jdp-border-radius);\n  padding: var(--jdp-spacing-sm);\n  width: 200px;\n  box-shadow: var(--jdp-calendar-shadow);\n  text-align: right;\n  font-size: 12px;\n  opacity: 0;\n  visibility: hidden;\n  transition: opacity var(--jdp-transition-duration) ease, visibility var(--jdp-transition-duration) ease;\n  pointer-events: none;\n  bottom: 120%;\n  right: 0;\n  transform: translateY(-5px);\n  z-index: 9999; /* Increased z-index to ensure it's always on top */\n}\n\n.event-tooltip.tooltip-visible {\n  opacity: 1;\n  visibility: visible;\n  pointer-events: auto;\n  background: var(--jdp-background);\n}\n\n/* Mobile-specific tooltip positioning */\n@media (max-width: 768px) {\n  .event-tooltip {\n    position: fixed;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: 90%;\n    max-width: 300px;\n    max-height: 80vh;\n    overflow-y: auto;\n    bottom: auto;\n    right: auto;\n    background: var(--jdp-background);\n    z-index: 9999; /* Ensure high z-index on mobile too */\n  }\n\n  /* Add a semi-transparent overlay behind the tooltip */\n  .event-tooltip::before {\n    content: '';\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    z-index: -1;\n  }\n\n  /* Style the close button */\n  .tooltip-close-button {\n    margin-top: 8px;\n    padding: 6px 12px;\n    background: var(--jdp-muted);\n    border: 1px solid var(--jdp-border);\n    border-radius: var(--jdp-border-radius);\n    font-size: 12px;\n    width: 100%;\n    text-align: center;\n    cursor: pointer;\n    color: var(--jdp-foreground);\n    transition: all var(--jdp-transition-duration) ease;\n  }\n\n  .tooltip-close-button:hover {\n    background: var(--jdp-nav-button-bg-hover);\n  }\n\n  .tooltip-close-button:active {\n    transform: translateY(1px);\n  }\n}\n\n.event-item {\n  margin-bottom: 4px;\n  padding-bottom: 4px;\n  border-bottom: 1px solid var(--jdp-border);\n  color: var(--jdp-foreground);\n  background: var(--jdp-background); /* Ensure event items have white background */\n}\n\n.event-item:last-child {\n  margin-bottom: 0;\n  padding-bottom: 0;\n  border-bottom: none;\n}\n\n.event-item.holiday {\n  color: var(--jdp-holiday-color);\n}\n\n.event-type-label {\n  display: inline-block;\n  font-size: 10px;\n  padding: 1px 4px;\n  border-radius: 3px;\n  margin-right: 4px;\n  background-color: var(--jdp-muted);\n  color: var(--jdp-muted-foreground);\n}\n\n/* Today button styling */\n.footer {\n  margin-top: var(--jdp-spacing-md);\n  display: flex;\n  justify-content: space-between;\n}\n\n.date-nav-button {\n  background: var(--jdp-muted);\n  border: none;\n  border-radius: var(--jdp-border-radius);\n  padding: var(--jdp-spacing-xs) var(--jdp-spacing-md);\n  font-family: inherit;\n  font-size: var(--jdp-font-size);\n  color: var(--jdp-foreground);\n  cursor: pointer;\n  transition: all var(--jdp-transition-duration) ease;\n  touch-action: manipulation;\n  -webkit-tap-highlight-color: transparent;\n}\n\n.date-nav-button:hover {\n  background: var(--jdp-nav-button-bg-hover);\n}\n\n.date-nav-button:active {\n  transform: translateY(1px);\n}\n\n.today-button {\n  /* Inherits from date-nav-button */\n}\n\n.tomorrow-button {\n  /* Inherits from date-nav-button */\n}\n\n/* Month/Year selectors */\n.selectors-container {\n  display: flex;\n  gap: var(--jdp-spacing-xs);\n}\n\n.date-select {\n  background-color: var(--jdp-muted);\n  border: none;\n  border-radius: var(--jdp-border-radius);\n  color: var(--jdp-foreground);\n  font-family: inherit;\n  font-size: var(--jdp-font-size);\n  padding: var(--jdp-spacing-xs) var(--jdp-spacing-sm);\n  cursor: pointer;\n  appearance: none;\n  -webkit-appearance: none;\n  background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='6' fill='none'%3E%3Cpath fill='%2364748b' d='M0 0h12L6 6z'/%3E%3C/svg%3E\");\n  background-repeat: no-repeat;\n  background-position: left 8px center;\n  padding-left: 24px;\n  text-align: center;\n  transition: background-color var(--jdp-transition-duration) ease;\n}\n\n.date-select:hover {\n  background-color: var(--jdp-nav-button-bg-hover);\n}\n\n.month-select {\n  width: 100px;\n}\n\n.year-select {\n  width: 70px;\n}\n\n/* RTL specific styles for selectors */\n:host([rtl=\"true\"]) .date-select,\n:host([dir=\"rtl\"]) .date-select {\n  background-position: right 8px center;\n  padding-right: 24px;\n  padding-left: var(--jdp-spacing-sm);\n}\n`;\n\n/**\n * Default holiday types to show in the datepicker\n */\nconst DEFAULT_HOLIDAY_TYPES = ['Iran', 'Religious'];\n\n/**\n * Jalali Date Picker Web Component\n * \n * A customizable date picker that follows the Jalali (Persian) calendar.\n * Features include:\n * - Month and year dropdown navigation with 150-year range\n * - Quick today and tomorrow navigation buttons\n * - Touch gesture support for swiping between months\n * - Holiday highlighting with customizable types\n * - Full RTL support\n * - Customizable styling\n * \n * Usage:\n * ```html\n * <!-- Basic usage -->\n * <persian-datepicker-element></persian-datepicker-element>\n * \n * <!-- With attributes -->\n * <persian-datepicker-element placeholder=\"انتخاب تاریخ\" format=\"YYYY/MM/DD\"></persian-datepicker-element>\n * \n * <!-- With holiday types -->\n * <persian-datepicker-element holiday-types=\"Iran,Religious\"></persian-datepicker-element>\n * \n * <!-- With all holiday types -->\n * <persian-datepicker-element holiday-types=\"all\"></persian-datepicker-element>\n * \n * <!-- With custom Today button text -->\n * <persian-datepicker-element today-button-text=\"Go to Today\"></persian-datepicker-element>\n * \n * <!-- With custom Tomorrow button text -->\n * <persian-datepicker-element tomorrow-button-text=\"Next Day\"></persian-datepicker-element>\n * \n * <!-- With custom button styling -->\n * <persian-datepicker-element today-button-class=\"primary rounded\" tomorrow-button-class=\"secondary rounded\"></persian-datepicker-element>\n * \n * <!-- With styling customization -->\n * <persian-datepicker-element style=\"--jdp-primary: #3b82f6; --jdp-font-family: 'Vazir', sans-serif;\"></persian-datepicker-element>\n * ```\n * \n * @element persian-datepicker-element\n * \n * @attr {string} placeholder - Placeholder text for the input field\n * @attr {string} format - Date format (e.g., \"YYYY/MM/DD\")\n * @attr {boolean} rtl - Whether to use RTL direction\n * @attr {boolean} show-holidays - Whether to highlight holidays\n * @attr {string} holiday-types - Comma-separated list of holiday types to display\n * @attr {string} today-button-text - Custom text for the Today button (default: \"امروز\")\n * @attr {string} today-button-class - Additional CSS classes for the Today button\n * @attr {string} tomorrow-button-text - Custom text for the Tomorrow button (default: \"فردا\")\n * @attr {string} tomorrow-button-class - Additional CSS classes for the Tomorrow button\n * @attr {string} primary-color - Primary color for selected dates\n * @attr {string} primary-hover - Hover color for interactive elements\n * @attr {string} background-color - Background color for the calendar\n * @attr {string} foreground-color - Text color\n * @attr {string} border-color - Border color\n * @attr {string} border-radius - Border radius for rounded corners\n * @attr {string} font-family - Font family\n * @attr {string} holiday-color - Text color for holidays\n * @attr {string} holiday-bg - Background color for holidays\n */\nexport class PersianDatePickerElement extends HTMLElement {\n  private input: HTMLInputElement;\n  private calendar: HTMLDivElement;\n  private monthYearLabel: HTMLSelectElement;\n  private daysContainer: HTMLDivElement;\n  private dayNamesContainer: HTMLDivElement;\n  private jalaliYear: number;\n  private jalaliMonth: number;\n  private jalaliDay: number;\n  private selectedDate: DateTuple | null;\n  private options: PersianDatePickerElementOptions;\n  private showHolidays: boolean = true;\n  private holidayTypes: string[] = [...DEFAULT_HOLIDAY_TYPES];\n  private includeAllTypes: boolean = false;\n  private isTransitioning: boolean = false;\n\n  static get observedAttributes() {\n    return [\n      'placeholder', \n      'rtl', \n      'format', \n      'show-holidays',\n      'holiday-types',\n      'today-button-text',\n      'today-button-class',\n      'tomorrow-button-text',\n      'tomorrow-button-class',\n      // CSS variable attributes\n      'primary-color', \n      'primary-hover',\n      'background-color',\n      'foreground-color',\n      'border-color',\n      'border-radius',\n      'font-family',\n      'holiday-color',\n      'holiday-bg'\n    ];\n  }\n\n  constructor(options: PersianDatePickerElementOptions = {}) {\n    super();\n    this.options = options;\n    const shadow = this.attachShadow({ mode: \"open\" });\n\n    // Create the component's HTML structure\n    this.render(shadow);\n\n    // Apply any custom CSS variables provided in options\n    if (options.cssVariables) {\n      this.applyCustomCssVariables(options.cssVariables);\n    }\n\n    // Set holiday types if provided in options\n    if (options.holidayTypes) {\n      this.setHolidayTypes(options.holidayTypes);\n    }\n\n    // Get DOM references\n    this.input = shadow.getElementById(\"date-input\") as HTMLInputElement;\n    this.calendar = shadow.getElementById(\"calendar\") as HTMLDivElement;\n    this.monthYearLabel = shadow.getElementById(\"month-select\") as HTMLSelectElement;\n    this.daysContainer = shadow.getElementById(\"days-container\") as HTMLDivElement;\n    this.dayNamesContainer = shadow.getElementById(\"day-names\") as HTMLDivElement;\n    \n    // Setup month and year selectors\n    this.setupMonthYearSelectors();\n\n    // Initialize the day names (Saturday to Friday in Persian)\n    const dayNames = [\"ش\", \"ی\", \"د\", \"س\", \"چ\", \"پ\", \"ج\"];\n    dayNames.forEach(name => {\n      const dayNameEl = document.createElement(\"div\");\n      dayNameEl.classList.add(\"day-name\");\n      dayNameEl.textContent = name;\n      this.dayNamesContainer.appendChild(dayNameEl);\n    });\n\n    // Get today's Jalali date\n    const today = new Date();\n    const jalaliToday = PersianDate.gregorianToJalali(\n      today.getFullYear(),\n      today.getMonth() + 1,\n      today.getDate()\n    );\n\n    this.jalaliYear = jalaliToday[0];\n    this.jalaliMonth = jalaliToday[1];\n    this.jalaliDay = jalaliToday[2];\n    this.selectedDate = null;\n    \n    // Refresh events to ensure Hijri events are mapped to correct Jalali dates\n    EventUtils.refreshEvents();\n\n    // Set placeholder if provided in options\n    if (this.options.placeholder) {\n      this.input.placeholder = this.options.placeholder;\n    }\n\n    // Event listeners\n    this.input.addEventListener(\"click\", () => this.toggleCalendar());\n    shadow.getElementById(\"prev-month\")!.addEventListener(\"click\", () => this.changeMonth(-1));\n    shadow.getElementById(\"next-month\")!.addEventListener(\"click\", () => this.changeMonth(1));\n    shadow.getElementById(\"today-button\")!.addEventListener(\"click\", () => this.goToToday());\n    shadow.getElementById(\"tomorrow-button\")!.addEventListener(\"click\", () => this.goToTomorrow());\n    \n    // Add event listeners for month and year select dropdowns\n    const monthSelect = shadow.getElementById(\"month-select\") as HTMLSelectElement;\n    const yearSelect = shadow.getElementById(\"year-select\") as HTMLSelectElement;\n    \n    monthSelect.addEventListener(\"change\", () => {\n      this.jalaliMonth = parseInt(monthSelect.value);\n      this.renderCalendar();\n    });\n    \n    yearSelect.addEventListener(\"change\", () => {\n      const previousYear = this.jalaliYear;\n      this.jalaliYear = parseInt(yearSelect.value);\n      \n      // If the year has changed, refresh the Hijri events\n      if (previousYear !== this.jalaliYear) {\n        EventUtils.refreshEvents();\n      }\n      \n      this.renderCalendar();\n    });\n\n    // Close calendar when clicking outside\n    document.addEventListener(\"click\", (e) => {\n      if (!e.composedPath().includes(this) && this.calendar.classList.contains(\"visible\")) {\n        this.toggleCalendar();\n      }\n    });\n\n    // Touch swipe gestures for calendar navigation\n    this.initTouchGestures();\n\n    this.renderCalendar();\n  }\n\n  /**\n   * Apply custom CSS variables to the component\n   */\n  private applyCustomCssVariables(variables: CSSVariableMap): void {\n    if (!variables) return;\n    \n    Object.entries(variables).forEach(([key, value]) => {\n      this.style.setProperty(key, String(value));\n    });\n  }\n\n  /**\n   * Sets the holiday types to be displayed\n   * @param types Holiday types as a string (comma-separated) or an array of strings\n   */\n  setHolidayTypes(types: string | string[]): void {\n    if (typeof types === 'string') {\n      // Special case for \"all\" which includes all types\n      if (types.toLowerCase() === 'all') {\n        this.includeAllTypes = true;\n        this.holidayTypes = [...EventUtils.getEventTypes()]; // Get all available types\n        return;\n      }\n      \n      // Parse comma-separated values\n      this.holidayTypes = types.split(',').map(t => t.trim()).filter(Boolean);\n    } else if (Array.isArray(types)) {\n      this.holidayTypes = [...types];\n    } else {\n      this.holidayTypes = [...DEFAULT_HOLIDAY_TYPES];\n    }\n    \n    // Set includeAllTypes to false by default\n    this.includeAllTypes = false;\n    \n    // If the calendar is already rendered, update it\n    if (this.calendar) {\n      this.renderCalendar();\n    }\n  }\n  \n  /**\n   * Gets the current holiday types being displayed\n   */\n  getHolidayTypes(): string[] {\n    return [...this.holidayTypes];\n  }\n  \n  /**\n   * Checks if all types (including excluded ones) are being shown\n   */\n  isShowingAllTypes(): boolean {\n    return this.includeAllTypes;\n  }\n\n  // Handle attribute changes\n  attributeChangedCallback(name: string, oldValue: string, newValue: string) {\n    if (oldValue === newValue) return;\n    \n    // Map of attribute names to CSS variable names\n    const cssVarMap: Record<string, string> = {\n      'primary-color': '--jdp-primary',\n      'primary-hover': '--jdp-primary-hover',\n      'background-color': '--jdp-background',\n      'foreground-color': '--jdp-foreground',\n      'border-color': '--jdp-border',\n      'border-radius': '--jdp-border-radius',\n      'font-family': '--jdp-font-family',\n      'holiday-color': '--jdp-holiday-color',\n      'holiday-bg': '--jdp-holiday-bg'\n    };\n    \n    switch (name) {\n      case 'placeholder':\n        if (this.input) this.input.placeholder = newValue;\n        break;\n      case 'rtl':\n        if (this.shadowRoot) {\n          const rtl = newValue !== null && newValue !== 'false';\n          // Type cast 'this' to HTMLElement to access style property\n          (this as unknown as HTMLElement).style.setProperty('--jdp-direction', rtl ? 'rtl' : 'ltr');\n        }\n        break;\n      case 'show-holidays':\n        this.showHolidays = newValue !== null && newValue !== 'false';\n        if (this.calendar) {\n          this.renderCalendar();\n        }\n        break;\n      case 'holiday-types':\n        if (newValue) {\n          this.setHolidayTypes(newValue);\n        } else {\n          this.holidayTypes = [...DEFAULT_HOLIDAY_TYPES];\n          this.includeAllTypes = false;\n        }\n        if (this.calendar) {\n          this.renderCalendar();\n        }\n        break;\n      case 'today-button-text':\n        // Update Today button text if it exists\n        if (this.shadowRoot) {\n          const todayButton = this.shadowRoot.getElementById('today-button');\n          if (todayButton) {\n            todayButton.textContent = newValue || 'امروز';\n          }\n        }\n        break;\n      case 'today-button-class':\n        // Update Today button class if it exists\n        if (this.shadowRoot) {\n          const todayButton = this.shadowRoot.getElementById('today-button');\n          if (todayButton) {\n            // Remove all classes except the base today-button class\n            todayButton.className = 'today-button';\n            // Add new classes if provided\n            if (newValue) {\n              newValue.split(' ').forEach(className => {\n                if (className.trim()) {\n                  todayButton.classList.add(className.trim());\n                }\n              });\n            }\n          }\n        }\n        break;\n      case 'tomorrow-button-text':\n        // Update Tomorrow button text if it exists\n        if (this.shadowRoot) {\n          const tomorrowButton = this.shadowRoot.getElementById('tomorrow-button');\n          if (tomorrowButton) {\n            tomorrowButton.textContent = newValue || 'فردا';\n          }\n        }\n        break;\n      case 'tomorrow-button-class':\n        // Update Tomorrow button class if it exists\n        if (this.shadowRoot) {\n          const tomorrowButton = this.shadowRoot.getElementById('tomorrow-button');\n          if (tomorrowButton) {\n            // Remove all classes except the base tomorrow-button class\n            tomorrowButton.className = 'tomorrow-button';\n            // Add new classes if provided\n            if (newValue) {\n              newValue.split(' ').forEach(className => {\n                if (className.trim()) {\n                  tomorrowButton.classList.add(className.trim());\n                }\n              });\n            }\n          }\n        }\n        break;\n      default:\n        // Handle CSS variable attributes\n        if (cssVarMap[name] && this.shadowRoot) {\n          // Type cast 'this' to HTMLElement to access style property\n          (this as unknown as HTMLElement).style.setProperty(cssVarMap[name], newValue);\n        }\n        break;\n    }\n  }\n\n  private render(shadow: ShadowRoot) {\n    // Get today button text from attribute or use default \"امروز\"\n    const todayButtonText = this.getAttribute('today-button-text') || 'امروز';\n    // Get any additional classes for the today button\n    const todayButtonClass = this.getAttribute('today-button-class') || '';\n    // Get tomorrow button text from attribute or use default \"فردا\"\n    const tomorrowButtonText = this.getAttribute('tomorrow-button-text') || 'فردا';\n    // Get any additional classes for the tomorrow button\n    const tomorrowButtonClass = this.getAttribute('tomorrow-button-class') || '';\n    \n    shadow.innerHTML = `\n      <style>${styles}</style>\n      <div class=\"picker-container\">\n        <input type=\"text\" id=\"date-input\" readonly placeholder=\"انتخاب تاریخ\">\n        <div class=\"calendar\" id=\"calendar\">\n          <div class=\"header\">\n            <button id=\"prev-month\" type=\"button\" class=\"nav-button prev\"></button>\n            <div class=\"selectors-container\">\n              <select id=\"month-select\" class=\"date-select month-select\"></select>\n              <select id=\"year-select\" class=\"date-select year-select\"></select>\n            </div>\n            <button id=\"next-month\" type=\"button\" class=\"nav-button next\"></button>\n          </div>\n          <div class=\"day-names\" id=\"day-names\"></div>\n          <div class=\"days-wrapper\">\n          <div class=\"days\" id=\"days-container\"></div>\n          </div>\n          <div class=\"footer\">\n            <button id=\"today-button\" type=\"button\" class=\"date-nav-button today-button ${todayButtonClass}\">${todayButtonText}</button>\n            <button id=\"tomorrow-button\" type=\"button\" class=\"date-nav-button tomorrow-button ${tomorrowButtonClass}\">${tomorrowButtonText}</button>\n          </div>\n        </div>\n      </div>\n    `;\n  }\n\n  toggleCalendar() {\n    if (this.calendar.classList.contains(\"visible\")) {\n      // Hide calendar\n      this.calendar.classList.remove(\"visible\", \"position-bottom\", \"position-top\");\n    } else {\n      // Show calendar with position calculation\n      this.positionCalendar();\n      this.calendar.classList.add(\"visible\");\n    }\n  }\n\n  /**\n   * Calculate and set the optimal position for the calendar\n   */\n  private positionCalendar(): void {\n    // Reset position classes\n    this.calendar.classList.remove(\"position-bottom\", \"position-top\");\n    \n    // Get measurements without causing reflow\n    const inputRect = this.input.getBoundingClientRect();\n    const windowHeight = window.innerHeight;\n    \n    // Default to position-bottom (most common)\n    this.calendar.classList.add(\"position-bottom\");\n    \n    // Set display block but with visibility hidden to measure without showing\n    const originalVisibility = this.calendar.style.visibility;\n    const originalDisplay = this.calendar.style.display;\n    this.calendar.style.visibility = 'hidden';\n    this.calendar.style.display = 'block';\n    \n    // Now we can measure once display is set\n    const calendarHeight = this.calendar.offsetHeight;\n    \n    // Check if there's enough space below\n    const spaceBelow = windowHeight - inputRect.bottom;\n    if (spaceBelow < calendarHeight) {\n      // Not enough space below, check if there's more space above\n      const spaceAbove = inputRect.top;\n      if (spaceAbove > spaceBelow || spaceAbove >= calendarHeight) {\n        // Switch to position-top\n        this.calendar.classList.remove(\"position-bottom\");\n        this.calendar.classList.add(\"position-top\");\n      }\n    }\n    \n    // Restore original styles\n    this.calendar.style.visibility = originalVisibility;\n    this.calendar.style.display = originalDisplay;\n  }\n\n  changeMonth(direction: number) {\n    // Prevent multiple transitions at once\n    if (this.isTransitioning) return;\n    this.isTransitioning = true;\n    \n    // Cache reference to calendar elements\n    const daysContainer = this.daysContainer;\n    \n    // Use requestAnimationFrame for smoother animations\n    requestAnimationFrame(() => {\n      // Add transition class based on direction\n      const slideClass = direction > 0 ? 'slide-left' : 'slide-right';\n      daysContainer.classList.add(slideClass);\n      \n      // Update month and year values\n    this.jalaliMonth = Number(this.jalaliMonth) + direction;\n    if (this.jalaliMonth < 1) {\n      this.jalaliMonth = 12;\n      this.jalaliYear--;\n    } else if (this.jalaliMonth > 12) {\n      this.jalaliMonth = 1;\n      this.jalaliYear++;\n    }\n      \n      // Use requestAnimationFrame for better timing\n      requestAnimationFrame(() => {\n        // Set a timeout to actually update the calendar\n        setTimeout(() => {\n          // Update month and year selects\n          if (this.shadowRoot) {\n            const monthSelect = this.shadowRoot.getElementById(\"month-select\") as HTMLSelectElement;\n            const yearSelect = this.shadowRoot.getElementById(\"year-select\") as HTMLSelectElement;\n            \n            if (monthSelect) monthSelect.value = this.jalaliMonth.toString();\n            if (yearSelect) yearSelect.value = this.jalaliYear.toString();\n          }\n          \n          // Clear days container and render new content\n          daysContainer.innerHTML = \"\";\n          this.renderCalendarContent();\n          \n          // Remove slide class after the animation duration\n          requestAnimationFrame(() => {\n            daysContainer.classList.remove(slideClass);\n            // Set a brief timeout to ensure animation is truly done\n            setTimeout(() => {\n              this.isTransitioning = false;\n            }, 50);\n          });\n        }, 200); // Shorter than the CSS animation duration for better feel\n      });\n    });\n  }\n\n  renderCalendar() {\n    const shadow = this.shadowRoot!;\n    \n    // Update month and year select values\n    const monthSelect = shadow.getElementById(\"month-select\") as HTMLSelectElement;\n    const yearSelect = shadow.getElementById(\"year-select\") as HTMLSelectElement;\n    \n    monthSelect.value = this.jalaliMonth.toString();\n    yearSelect.value = this.jalaliYear.toString();\n\n    // Clear previous days\n    this.daysContainer.innerHTML = \"\";\n\n    // Render the calendar content\n    this.renderCalendarContent();\n  }\n  \n  /**\n   * Renders the calendar content for the current month\n   */\n  private renderCalendarContent(): void {\n    // Get first day of month and number of days\n    const firstDayOfMonth = PersianDate.getDayOfWeek(this.jalaliYear, this.jalaliMonth, 1);\n    const daysInMonth = PersianDate.getDaysInMonth(this.jalaliYear, this.jalaliMonth);\n    \n    // Get today's date for highlighting\n    const today = new Date();\n    const jalaliToday = PersianDate.gregorianToJalali(\n      today.getFullYear(), \n      today.getMonth() + 1, \n      today.getDate()\n    );\n    \n    // Adjust first day of month for Persian calendar (Saturday is first day of week)\n    const adjustedFirstDay = (firstDayOfMonth + 1) % 7;\n    \n    // Add empty cells for days before the first day of month\n    for (let i = 0; i < adjustedFirstDay; i++) {\n      const emptyDay = document.createElement(\"div\");\n      emptyDay.classList.add(\"day\", \"empty\");\n      this.daysContainer.appendChild(emptyDay);\n    }\n\n    // Generate days of month\n    for (let i = 1; i <= daysInMonth; i++) {\n      const dayElement = document.createElement(\"div\");\n      dayElement.classList.add(\"day\");\n      dayElement.textContent = i.toString();\n      \n      // Improve touch behavior on day elements\n      dayElement.addEventListener(\"touchstart\", (e) => {\n        // Just let it propagate to handle in the calendar's touch handlers\n      }, { passive: true });\n      \n      // Add hover handler for desktop tooltips\n      dayElement.addEventListener(\"mouseenter\", () => {\n        const tooltip = dayElement.querySelector('.event-tooltip');\n        if (tooltip) {\n          tooltip.classList.add(\"tooltip-visible\");\n        }\n      });\n      \n      dayElement.addEventListener(\"mouseleave\", () => {\n        const tooltip = dayElement.querySelector('.event-tooltip');\n        if (tooltip) {\n          tooltip.classList.remove(\"tooltip-visible\");\n        }\n      });\n      \n      // Add click listener with proper event handling\n      let lastTapTime = 0;\n      dayElement.addEventListener(\"click\", (e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        \n        const currentTime = new Date().getTime();\n        const tapLength = currentTime - lastTapTime;\n        \n        if ('ontouchstart' in window || navigator.maxTouchPoints > 0) {\n          if (tapLength < 500 && tapLength > 0) {\n            // Double tap detected - show tooltip\n            const tooltip = dayElement.querySelector('.event-tooltip');\n            if (tooltip) {\n              const tooltips = this.shadowRoot?.querySelectorAll('.event-tooltip.tooltip-visible');\n              tooltips?.forEach(t => t.classList.remove(\"tooltip-visible\"));\n              tooltip.classList.add(\"tooltip-visible\");\n            }\n          } else {\n            // Single tap - select the date\n            this.selectDate(i);\n          }\n        } else {\n          // For non-mobile, just select the date\n          this.selectDate(i);\n        }\n        \n        lastTapTime = currentTime;\n      });\n      \n      // Highlight today\n      if (this.jalaliYear === jalaliToday[0] && this.jalaliMonth === jalaliToday[1] && i === jalaliToday[2]) {\n        dayElement.classList.add(\"today\");\n      }\n      \n      // Highlight selected date\n      if (this.selectedDate && \n          this.jalaliYear === this.selectedDate[0] && \n          this.jalaliMonth === this.selectedDate[1] && \n          i === this.selectedDate[2]) {\n        dayElement.classList.add(\"selected\");\n      }\n      \n      // Check if the day is a holiday\n      if (this.showHolidays) {\n        // Check if it's Friday (6th day in JavaScript's getDay, where 0 is Sunday)\n        const dayOfWeek = PersianDate.getDayOfWeek(this.jalaliYear, this.jalaliMonth, i);\n        if (dayOfWeek === 5) { // Friday\n          dayElement.classList.add(\"friday\");\n        }\n        \n        // Check if it's a holiday from events.json based on holiday types\n        if (EventUtils.isHoliday(this.jalaliMonth, i, this.holidayTypes, this.includeAllTypes)) {\n          dayElement.classList.add(\"holiday\");\n          \n          // Add tooltip with event titles\n          const events = EventUtils.getEvents(this.jalaliMonth, i, this.holidayTypes, this.includeAllTypes);\n          if (events.length > 0) {\n            const tooltip = document.createElement(\"div\");\n            tooltip.classList.add(\"event-tooltip\");\n            \n            events.forEach(event => {\n              const eventItem = document.createElement(\"div\");\n              eventItem.classList.add(\"event-item\");\n              \n              // Add 'holiday' class to highlight holiday events\n              if (event.holiday) {\n                eventItem.classList.add(\"holiday\");\n              }\n              \n              // Add type label\n              const typeLabel = document.createElement(\"span\");\n              typeLabel.classList.add(\"event-type-label\");\n              typeLabel.textContent = event.type;\n              \n              eventItem.appendChild(typeLabel);\n              \n              // Add event title\n              const titleSpan = document.createElement(\"span\");\n              titleSpan.textContent = event.title;\n              eventItem.appendChild(titleSpan);\n              \n              tooltip.appendChild(eventItem);\n            });\n            \n            // For mobile, add a close button to the tooltip\n            if ('ontouchstart' in window || navigator.maxTouchPoints > 0) {\n              const closeButton = document.createElement(\"button\");\n              closeButton.textContent = \"بستن\";\n              closeButton.classList.add(\"tooltip-close-button\");\n              \n              // Add event listeners that properly stop propagation\n              closeButton.addEventListener(\"click\", (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                tooltip.classList.remove(\"tooltip-visible\");\n                // Remove the tooltip after animation\n                setTimeout(() => {\n                  tooltip.remove();\n                }, 200);\n              });\n              \n              closeButton.addEventListener(\"touchend\", (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n                tooltip.classList.remove(\"tooltip-visible\");\n                // Remove the tooltip after animation\n                setTimeout(() => {\n                  tooltip.remove();\n                }, 200);\n              }, { passive: false });\n              \n              tooltip.appendChild(closeButton);\n            }\n            \n            // Add focus handling to maintain tooltip styling\n            tooltip.addEventListener(\"focusin\", () => {\n              tooltip.style.background = \"var(--jdp-background)\";\n            });\n            \n            tooltip.addEventListener(\"focusout\", () => {\n              tooltip.style.background = \"var(--jdp-background)\";\n            });\n            \n            dayElement.appendChild(tooltip);\n          }\n        }\n      }\n      \n      this.daysContainer.appendChild(dayElement);\n    }\n  }\n\n  selectDate(day: number) {\n    this.jalaliDay = day;\n    this.selectedDate = [this.jalaliYear, this.jalaliMonth, this.jalaliDay];\n    \n    // Format date as YYYY/MM/DD or custom format\n    this.formatAndSetValue();\n    \n    // Get all events for the selected date\n    const events = EventUtils.getEvents(this.jalaliMonth, day, this.holidayTypes, this.includeAllTypes);\n    \n    // Dispatch change event\n    this.dispatchEvent(new CustomEvent(\"change\", {\n      detail: {\n        jalali: this.selectedDate,\n        gregorian: PersianDate.jalaliToGregorian(this.jalaliYear, this.jalaliMonth, this.jalaliDay),\n        isHoliday: EventUtils.isHoliday(this.jalaliMonth, day, this.holidayTypes, this.includeAllTypes),\n        events: events\n      },\n      bubbles: true\n    }) as PersianDateChangeEvent);\n    \n    this.toggleCalendar();\n    this.renderCalendar();\n  }\n\n  private formatAndSetValue() {\n    if (!this.selectedDate) return;\n    \n    const format = this.getAttribute('format') || this.options.format || 'YYYY/MM/DD';\n    \n    let formattedDate = format\n      .replace('YYYY', this.selectedDate[0].toString())\n      .replace('MM', this.selectedDate[1].toString().padStart(2, '0'))\n      .replace('DD', this.selectedDate[2].toString().padStart(2, '0'));\n      \n    this.input.value = formattedDate;\n  }\n\n  /**\n   * Sets the date value programmatically\n   */\n  public setValue(year: number, month: number, day: number): void {\n    this.selectedDate = [year, month, day];\n    this.jalaliYear = year;\n    this.jalaliMonth = month;\n    this.jalaliDay = day;\n    this.formatAndSetValue();\n    this.renderCalendar();\n  }\n\n  /**\n   * Gets the currently selected date as a tuple [year, month, day]\n   */\n  public getValue(): DateTuple | null {\n    return this.selectedDate;\n  }\n\n  /**\n   * Checks if the currently selected date is a holiday\n   */\n  public isSelectedDateHoliday(): boolean {\n    if (!this.selectedDate) return false;\n    return EventUtils.isHoliday(this.selectedDate[1], this.selectedDate[2], this.holidayTypes, this.includeAllTypes);\n  }\n\n  /**\n   * Gets events for the currently selected date\n   */\n  public getSelectedDateEvents(): any[] {\n    if (!this.selectedDate) return [];\n    return EventUtils.getEvents(this.selectedDate[1], this.selectedDate[2], this.holidayTypes, this.includeAllTypes);\n  }\n\n  /**\n   * Clears the selected date\n   */\n  public clear() {\n    this.selectedDate = null;\n    this.input.value = '';\n    this.renderCalendar();\n  }\n\n  /**\n   * Initialize touch gesture support for the calendar\n   */\n  private initTouchGestures(): void {\n    let startX: number = 0;\n    let startY: number = 0;\n    let isDragging: boolean = false;\n    const threshold = 20; // Even lower threshold for more responsive swipes\n    let touchStartTime: number = 0;\n    let isSwiping = false;\n    \n    // Handle touch start - capture initial position\n    this.calendar.addEventListener('touchstart', (e: TouchEvent) => {\n      // Only handle touches when calendar is visible\n      if (!this.calendar.classList.contains(\"visible\")) return;\n      \n      // Store initial touch position\n      startX = e.touches[0].clientX;\n      startY = e.touches[0].clientY;\n      isDragging = false;\n      isSwiping = false;\n      touchStartTime = Date.now();\n    }, { passive: true });\n    \n    // For the entire calendar, capture touchmove events\n    this.calendar.addEventListener('touchmove', (e: TouchEvent) => {\n      // Only process if calendar is visible\n      if (!this.calendar.classList.contains(\"visible\")) return;\n      \n      // Calculate how far we've moved\n      const currentX = e.touches[0].clientX;\n      const currentY = e.touches[0].clientY;\n      const diffX = currentX - startX;\n      const diffY = currentY - startY;\n      \n      // If we're already swiping, always prevent default\n      if (isSwiping) {\n        e.preventDefault();\n        return;\n      }\n      \n      // If horizontal movement is greater than vertical movement and significant\n      if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > threshold) {\n        // We have a horizontal swipe inside the calendar - prevent page scrolling\n        e.preventDefault();\n        isDragging = true;\n        isSwiping = true;\n      }\n    }, { passive: false });\n    \n    // Handle touch end - determine if it was a swipe\n    this.calendar.addEventListener('touchend', (e: TouchEvent) => {\n      if (!this.calendar.classList.contains(\"visible\")) return;\n      \n      // Reset swiping state\n      const wasSwiping = isSwiping;\n      isSwiping = false;\n      \n      const touchEndTime = Date.now();\n      const touchDuration = touchEndTime - touchStartTime;\n      \n      // Only process if the touch was quick (< 300ms) or we detected dragging\n      if ((touchDuration < 300 || isDragging) && !this.isTransitioning) {\n        const endX = e.changedTouches[0].clientX;\n        const endY = e.changedTouches[0].clientY;\n        \n        const diffX = endX - startX;\n        const diffY = endY - startY;\n        \n        // Only consider horizontal movements that are larger than vertical movements\n        if (Math.abs(diffX) > Math.abs(diffY) && Math.abs(diffX) > threshold) {\n          // Determine direction based on RTL mode\n          const isRTL = getComputedStyle(this).getPropertyValue('--jdp-direction').trim() === 'rtl';\n          \n          // In RTL mode, swipe left moves to next month, swipe right moves to previous month\n          // In LTR mode, it's the opposite\n          if ((isRTL && diffX < 0) || (!isRTL && diffX > 0)) {\n            e.preventDefault(); // Prevent any default actions\n            e.stopPropagation(); // Stop event from propagating\n            this.changeMonth(1); // Next month\n          } else if ((isRTL && diffX > 0) || (!isRTL && diffX < 0)) {\n            e.preventDefault(); // Prevent any default actions\n            e.stopPropagation(); // Stop event from propagating\n            this.changeMonth(-1); // Previous month\n          }\n        }\n      }\n      \n      // If we were swiping, prevent any click events\n      if (wasSwiping) {\n        e.preventDefault();\n      }\n    }, { passive: false });\n    \n    // Add a touchcancel handler to reset state\n    this.calendar.addEventListener('touchcancel', () => {\n      isSwiping = false;\n      isDragging = false;\n    });\n    \n    // Improve performance by preventing events from being processed by the whole document\n    this.calendar.addEventListener('touchstart', (e) => {\n      e.stopPropagation();\n    }, { passive: true });\n    \n    // Improve month navigation performance\n    this.shadowRoot?.getElementById(\"prev-month\")?.addEventListener(\"touchstart\", (e) => {\n      e.stopPropagation();\n    }, { passive: true });\n    \n    this.shadowRoot?.getElementById(\"next-month\")?.addEventListener(\"touchstart\", (e) => {\n      e.stopPropagation();\n    }, { passive: true });\n  }\n\n  /**\n   * Navigate to today's date and select it\n   */\n  private goToToday(): void {\n    // Get today's date\n    const today = new Date();\n    const jalaliToday = PersianDate.gregorianToJalali(\n      today.getFullYear(),\n      today.getMonth() + 1,\n      today.getDate()\n    );\n    \n    const previousYear = this.jalaliYear;\n    \n    // Update current view to today's month/year\n    this.jalaliYear = jalaliToday[0];\n    this.jalaliMonth = jalaliToday[1];\n    \n    // If the year has changed, refresh the Hijri events\n    if (previousYear !== this.jalaliYear) {\n      EventUtils.refreshEvents();\n    }\n    \n    // Render the calendar with the new month/year\n    this.renderCalendar();\n    \n    // Select today's date\n    this.selectDate(jalaliToday[2]);\n  }\n\n  /**\n   * Navigate to tomorrow's date and select it\n   */\n  private goToTomorrow(): void {\n    // Get tomorrow's date (add 1 day to today)\n    const tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    \n    const jalaliTomorrow = PersianDate.gregorianToJalali(\n        tomorrow.getFullYear(),\n        tomorrow.getMonth() + 1,\n        tomorrow.getDate()\n    );\n    \n    const previousYear = this.jalaliYear;\n    \n    // Update current view to tomorrow's month/year\n    this.jalaliYear = jalaliTomorrow[0];\n    this.jalaliMonth = jalaliTomorrow[1];\n    \n    // If the year has changed, refresh the Hijri events\n    if (previousYear !== this.jalaliYear) {\n      EventUtils.refreshEvents();\n    }\n    \n    // Render the calendar with the new month/year\n    this.renderCalendar();\n    \n    // Select tomorrow's date\n    this.selectDate(jalaliTomorrow[2]);\n  }\n\n  /**\n   * Setup month and year selector dropdowns\n   */\n  private setupMonthYearSelectors(): void {\n    const shadow = this.shadowRoot!;\n    const monthSelect = shadow.getElementById(\"month-select\") as HTMLSelectElement;\n    const yearSelect = shadow.getElementById(\"year-select\") as HTMLSelectElement;\n    \n    // Clear existing options\n    monthSelect.innerHTML = \"\";\n    yearSelect.innerHTML = \"\";\n    \n    // Add month options (1-12)\n    const persianMonths = [\n      \"فروردین\", \"اردیبهشت\", \"خرداد\", \"تیر\", \"مرداد\", \"شهریور\",\n      \"مهر\", \"آبان\", \"آذر\", \"دی\", \"بهمن\", \"اسفند\"\n    ];\n    \n    persianMonths.forEach((month, index) => {\n      const option = document.createElement(\"option\");\n      option.value = (index + 1).toString();\n      option.textContent = month;\n      monthSelect.appendChild(option);\n    });\n    \n    // Add year options (current year - 100 to current year + 50)\n    const today = new Date();\n    const jalaliToday = PersianDate.gregorianToJalali(\n      today.getFullYear(), \n      today.getMonth() + 1, \n      today.getDate()\n    );\n    \n    const currentJalaliYear = jalaliToday[0];\n    const startYear = currentJalaliYear - 100;\n    const endYear = currentJalaliYear + 50;\n    \n    for (let year = startYear; year <= endYear; year++) {\n      const option = document.createElement(\"option\");\n      option.value = year.toString();\n      option.textContent = year.toString();\n      yearSelect.appendChild(option);\n    }\n  }\n} ","// Import the custom element class\r\nimport { PersianDatePickerElement } from './persian-datepicker-element';\r\n// Import the utility class\r\nimport { PersianDate } from './persian-date';\r\n// Import types from types directory\r\nimport type { \r\n  PersianDatePickerElementOptions, \r\n  PersianDateChangeEvent,\r\n  DateTuple,\r\n  CSSVariableMap,\r\n  PersianEvent\r\n} from './types';\r\n\r\n// Define the custom element\r\nif (!customElements.get('persian-datepicker-element')) {\r\n  customElements.define('persian-datepicker-element', PersianDatePickerElement);\r\n}\r\n\r\n// Export the classes and types\r\nexport { PersianDatePickerElement, PersianDate };\r\nexport type { \r\n  PersianDatePickerElementOptions, \r\n  PersianDateChangeEvent,\r\n  DateTuple,\r\n  CSSVariableMap,\r\n  PersianEvent\r\n};\r\n\r\n// Default export for convenient usage\r\nexport default PersianDatePickerElement; "],"names":[],"mappings":"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"}